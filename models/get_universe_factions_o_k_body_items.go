// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetUniverseFactionsOKBodyItems get_universe_factions_200_ok
//
// 200 ok object
// swagger:model getUniverseFactionsOKBodyItems
type GetUniverseFactionsOKBodyItems struct {

	// get_universe_factions_corporation_id
	//
	// corporation_id integer
	CorporationID int32 `json:"corporation_id,omitempty"`

	// get_universe_factions_description
	//
	// description string
	// Required: true
	Description *string `json:"description"`

	// get_universe_factions_faction_id
	//
	// faction_id integer
	// Required: true
	FactionID *int32 `json:"faction_id"`

	// get_universe_factions_is_unique
	//
	// is_unique boolean
	// Required: true
	IsUnique *bool `json:"is_unique"`

	// get_universe_factions_militia_corporation_id
	//
	// militia_corporation_id integer
	MilitiaCorporationID int32 `json:"militia_corporation_id,omitempty"`

	// get_universe_factions_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`

	// get_universe_factions_size_factor
	//
	// size_factor number
	// Required: true
	SizeFactor *float32 `json:"size_factor"`

	// get_universe_factions_solar_system_id
	//
	// solar_system_id integer
	SolarSystemID int32 `json:"solar_system_id,omitempty"`

	// get_universe_factions_station_count
	//
	// station_count integer
	// Required: true
	StationCount *int32 `json:"station_count"`

	// get_universe_factions_station_system_count
	//
	// station_system_count integer
	// Required: true
	StationSystemCount *int32 `json:"station_system_count"`
}

// Validate validates this get universe factions o k body items
func (m *GetUniverseFactionsOKBodyItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFactionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsUnique(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSizeFactor(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStationCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStationSystemCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetUniverseFactionsOKBodyItems) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", m.Description); err != nil {
		return err
	}

	return nil
}

func (m *GetUniverseFactionsOKBodyItems) validateFactionID(formats strfmt.Registry) error {

	if err := validate.Required("faction_id", "body", m.FactionID); err != nil {
		return err
	}

	return nil
}

func (m *GetUniverseFactionsOKBodyItems) validateIsUnique(formats strfmt.Registry) error {

	if err := validate.Required("is_unique", "body", m.IsUnique); err != nil {
		return err
	}

	return nil
}

func (m *GetUniverseFactionsOKBodyItems) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *GetUniverseFactionsOKBodyItems) validateSizeFactor(formats strfmt.Registry) error {

	if err := validate.Required("size_factor", "body", m.SizeFactor); err != nil {
		return err
	}

	return nil
}

func (m *GetUniverseFactionsOKBodyItems) validateStationCount(formats strfmt.Registry) error {

	if err := validate.Required("station_count", "body", m.StationCount); err != nil {
		return err
	}

	return nil
}

func (m *GetUniverseFactionsOKBodyItems) validateStationSystemCount(formats strfmt.Registry) error {

	if err := validate.Required("station_system_count", "body", m.StationSystemCount); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetUniverseFactionsOKBodyItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetUniverseFactionsOKBodyItems) UnmarshalBinary(b []byte) error {
	var res GetUniverseFactionsOKBodyItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
