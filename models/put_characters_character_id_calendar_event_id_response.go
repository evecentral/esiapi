package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PutCharactersCharacterIDCalendarEventIDResponse put_characters_character_id_calendar_event_id_response
//
// response schema
// swagger:model put_characters_character_id_calendar_event_id_response
type PutCharactersCharacterIDCalendarEventIDResponse struct {

	// put_characters_character_id_calendar_event_id_response
	//
	// response string
	// Required: true
	Response *string `json:"response"`
}

// Validate validates this put characters character id calendar event id response
func (m *PutCharactersCharacterIDCalendarEventIDResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResponse(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var putCharactersCharacterIdCalendarEventIdResponseTypeResponsePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["accepted","declined","tentative"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		putCharactersCharacterIdCalendarEventIdResponseTypeResponsePropEnum = append(putCharactersCharacterIdCalendarEventIdResponseTypeResponsePropEnum, v)
	}
}

const (
	PutCharactersCharacterIDCalendarEventIDResponseResponseAccepted  string = "accepted"
	PutCharactersCharacterIDCalendarEventIDResponseResponseDeclined  string = "declined"
	PutCharactersCharacterIDCalendarEventIDResponseResponseTentative string = "tentative"
)

// prop value enum
func (m *PutCharactersCharacterIDCalendarEventIDResponse) validateResponseEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, putCharactersCharacterIdCalendarEventIdResponseTypeResponsePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PutCharactersCharacterIDCalendarEventIDResponse) validateResponse(formats strfmt.Registry) error {

	if err := validate.Required("response", "body", m.Response); err != nil {
		return err
	}

	// value enum
	if err := m.validateResponseEnum("response", "body", *m.Response); err != nil {
		return err
	}

	return nil
}
