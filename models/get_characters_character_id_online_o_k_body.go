// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCharactersCharacterIDOnlineOKBody get_characters_character_id_online_ok
//
// 200 ok object
// swagger:model getCharactersCharacterIdOnlineOKBody
type GetCharactersCharacterIDOnlineOKBody struct {

	// get_characters_character_id_online_last_login
	//
	// Timestamp of the last login
	// Format: date-time
	LastLogin strfmt.DateTime `json:"last_login,omitempty"`

	// get_characters_character_id_online_last_logout
	//
	// Timestamp of the last logout
	// Format: date-time
	LastLogout strfmt.DateTime `json:"last_logout,omitempty"`

	// get_characters_character_id_online_logins
	//
	// Total number of times the character has logged in
	Logins int32 `json:"logins,omitempty"`

	// get_characters_character_id_online_online
	//
	// If the character is online
	// Required: true
	Online *bool `json:"online"`
}

// Validate validates this get characters character Id online o k body
func (m *GetCharactersCharacterIDOnlineOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastLogin(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastLogout(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOnline(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCharactersCharacterIDOnlineOKBody) validateLastLogin(formats strfmt.Registry) error {

	if swag.IsZero(m.LastLogin) { // not required
		return nil
	}

	if err := validate.FormatOf("last_login", "body", "date-time", m.LastLogin.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDOnlineOKBody) validateLastLogout(formats strfmt.Registry) error {

	if swag.IsZero(m.LastLogout) { // not required
		return nil
	}

	if err := validate.FormatOf("last_logout", "body", "date-time", m.LastLogout.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDOnlineOKBody) validateOnline(formats strfmt.Registry) error {

	if err := validate.Required("online", "body", m.Online); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetCharactersCharacterIDOnlineOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetCharactersCharacterIDOnlineOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDOnlineOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
