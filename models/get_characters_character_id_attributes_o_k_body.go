// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCharactersCharacterIDAttributesOKBody get_characters_character_id_attributes_ok
//
// 200 ok object
// swagger:model getCharactersCharacterIdAttributesOKBody
type GetCharactersCharacterIDAttributesOKBody struct {

	// get_characters_character_id_attributes_accrued_remap_cooldown_date
	//
	// Neural remapping cooldown after a character uses remap accrued over time
	// Format: date-time
	AccruedRemapCooldownDate strfmt.DateTime `json:"accrued_remap_cooldown_date,omitempty"`

	// get_characters_character_id_attributes_bonus_remaps
	//
	// Number of available bonus character neural remaps
	BonusRemaps int32 `json:"bonus_remaps,omitempty"`

	// get_characters_character_id_attributes_charisma
	//
	// charisma integer
	// Required: true
	Charisma *int32 `json:"charisma"`

	// get_characters_character_id_attributes_intelligence
	//
	// intelligence integer
	// Required: true
	Intelligence *int32 `json:"intelligence"`

	// get_characters_character_id_attributes_last_remap_date
	//
	// Datetime of last neural remap, including usage of bonus remaps
	// Format: date-time
	LastRemapDate strfmt.DateTime `json:"last_remap_date,omitempty"`

	// get_characters_character_id_attributes_memory
	//
	// memory integer
	// Required: true
	Memory *int32 `json:"memory"`

	// get_characters_character_id_attributes_perception
	//
	// perception integer
	// Required: true
	Perception *int32 `json:"perception"`

	// get_characters_character_id_attributes_willpower
	//
	// willpower integer
	// Required: true
	Willpower *int32 `json:"willpower"`
}

// Validate validates this get characters character Id attributes o k body
func (m *GetCharactersCharacterIDAttributesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccruedRemapCooldownDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCharisma(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIntelligence(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastRemapDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMemory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePerception(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWillpower(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCharactersCharacterIDAttributesOKBody) validateAccruedRemapCooldownDate(formats strfmt.Registry) error {

	if swag.IsZero(m.AccruedRemapCooldownDate) { // not required
		return nil
	}

	if err := validate.FormatOf("accrued_remap_cooldown_date", "body", "date-time", m.AccruedRemapCooldownDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDAttributesOKBody) validateCharisma(formats strfmt.Registry) error {

	if err := validate.Required("charisma", "body", m.Charisma); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDAttributesOKBody) validateIntelligence(formats strfmt.Registry) error {

	if err := validate.Required("intelligence", "body", m.Intelligence); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDAttributesOKBody) validateLastRemapDate(formats strfmt.Registry) error {

	if swag.IsZero(m.LastRemapDate) { // not required
		return nil
	}

	if err := validate.FormatOf("last_remap_date", "body", "date-time", m.LastRemapDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDAttributesOKBody) validateMemory(formats strfmt.Registry) error {

	if err := validate.Required("memory", "body", m.Memory); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDAttributesOKBody) validatePerception(formats strfmt.Registry) error {

	if err := validate.Required("perception", "body", m.Perception); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDAttributesOKBody) validateWillpower(formats strfmt.Registry) error {

	if err := validate.Required("willpower", "body", m.Willpower); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetCharactersCharacterIDAttributesOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetCharactersCharacterIDAttributesOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDAttributesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
