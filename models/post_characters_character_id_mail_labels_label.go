package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PostCharactersCharacterIDMailLabelsLabel post_characters_character_id_mail_labels_label
//
// label object
// swagger:model post_characters_character_id_mail_labels_label
type PostCharactersCharacterIDMailLabelsLabel struct {

	// post_characters_character_id_mail_labels_color
	//
	// Hexadecimal string representing label color,
	// in RGB format
	//
	Color *string `json:"color,omitempty"`

	// post_characters_character_id_mail_labels_name
	//
	// name string
	// Required: true
	// Max Length: 40
	// Min Length: 1
	Name *string `json:"name"`
}

// Validate validates this post characters character id mail labels label
func (m *PostCharactersCharacterIDMailLabelsLabel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateColor(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var postCharactersCharacterIdMailLabelsLabelTypeColorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["#ffffff","#ffff01","#ff6600","#fe0000","#9a0000","#660066","#0000fe","#0099ff","#01ffff","#00ff33","#349800","#006634","#666666","#999999","#e6e6e6","#ffffcd","#99ffff","#ccff9a"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postCharactersCharacterIdMailLabelsLabelTypeColorPropEnum = append(postCharactersCharacterIdMailLabelsLabelTypeColorPropEnum, v)
	}
}

const (
	PostCharactersCharacterIDMailLabelsLabelColorNrFfffff string = "#ffffff"
	PostCharactersCharacterIDMailLabelsLabelColorNrFfff01 string = "#ffff01"
	PostCharactersCharacterIDMailLabelsLabelColorNrFf6600 string = "#ff6600"
	PostCharactersCharacterIDMailLabelsLabelColorNrFe0000 string = "#fe0000"
	PostCharactersCharacterIDMailLabelsLabelColorNr9a0000 string = "#9a0000"
	PostCharactersCharacterIDMailLabelsLabelColorNr660066 string = "#660066"
	PostCharactersCharacterIDMailLabelsLabelColorNr0000fe string = "#0000fe"
	PostCharactersCharacterIDMailLabelsLabelColorNr0099ff string = "#0099ff"
	PostCharactersCharacterIDMailLabelsLabelColorNr01ffff string = "#01ffff"
	PostCharactersCharacterIDMailLabelsLabelColorNr00ff33 string = "#00ff33"
	PostCharactersCharacterIDMailLabelsLabelColorNr349800 string = "#349800"
	PostCharactersCharacterIDMailLabelsLabelColorNr006634 string = "#006634"
	PostCharactersCharacterIDMailLabelsLabelColorNr666666 string = "#666666"
	PostCharactersCharacterIDMailLabelsLabelColorNr999999 string = "#999999"
	PostCharactersCharacterIDMailLabelsLabelColorNrE6e6e6 string = "#e6e6e6"
	PostCharactersCharacterIDMailLabelsLabelColorNrFfffcd string = "#ffffcd"
	PostCharactersCharacterIDMailLabelsLabelColorNr99ffff string = "#99ffff"
	PostCharactersCharacterIDMailLabelsLabelColorNrCcff9a string = "#ccff9a"
)

// prop value enum
func (m *PostCharactersCharacterIDMailLabelsLabel) validateColorEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, postCharactersCharacterIdMailLabelsLabelTypeColorPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PostCharactersCharacterIDMailLabelsLabel) validateColor(formats strfmt.Registry) error {

	if swag.IsZero(m.Color) { // not required
		return nil
	}

	// value enum
	if err := m.validateColorEnum("color", "body", *m.Color); err != nil {
		return err
	}

	return nil
}

func (m *PostCharactersCharacterIDMailLabelsLabel) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MinLength("name", "body", string(*m.Name), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("name", "body", string(*m.Name), 40); err != nil {
		return err
	}

	return nil
}
