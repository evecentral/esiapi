// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetUniverseSchematicsSchematicIDOKBody get_universe_schematics_schematic_id_ok
//
// 200 ok object
// swagger:model getUniverseSchematicsSchematicIdOKBody
type GetUniverseSchematicsSchematicIDOKBody struct {

	// get_universe_schematics_schematic_id_cycle_time
	//
	// Time in seconds to process a run
	// Required: true
	CycleTime *int32 `json:"cycle_time"`

	// get_universe_schematics_schematic_id_schematic_name
	//
	// schematic_name string
	// Required: true
	SchematicName *string `json:"schematic_name"`
}

// Validate validates this get universe schematics schematic Id o k body
func (m *GetUniverseSchematicsSchematicIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCycleTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSchematicName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetUniverseSchematicsSchematicIDOKBody) validateCycleTime(formats strfmt.Registry) error {

	if err := validate.Required("cycle_time", "body", m.CycleTime); err != nil {
		return err
	}

	return nil
}

func (m *GetUniverseSchematicsSchematicIDOKBody) validateSchematicName(formats strfmt.Registry) error {

	if err := validate.Required("schematic_name", "body", m.SchematicName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetUniverseSchematicsSchematicIDOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetUniverseSchematicsSchematicIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetUniverseSchematicsSchematicIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
