// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCorporationsCorporationIDStarbasesOKBodyItems get_corporations_corporation_id_starbases_200_ok
//
// 200 ok object
// swagger:model getCorporationsCorporationIdStarbasesOKBodyItems
type GetCorporationsCorporationIDStarbasesOKBodyItems struct {

	// get_corporations_corporation_id_starbases_moon_id
	//
	// The moon this starbase (POS) is anchored on, unanchored POSes do not have this information
	MoonID int32 `json:"moon_id,omitempty"`

	// get_corporations_corporation_id_starbases_onlined_since
	//
	// When the POS onlined, for starbases (POSes) in online state
	// Format: date-time
	OnlinedSince strfmt.DateTime `json:"onlined_since,omitempty"`

	// get_corporations_corporation_id_starbases_reinforced_until
	//
	// When the POS will be out of reinforcement, for starbases (POSes) in reinforced state
	// Format: date-time
	ReinforcedUntil strfmt.DateTime `json:"reinforced_until,omitempty"`

	// get_corporations_corporation_id_starbases_starbase_id
	//
	// Unique ID for this starbase (POS)
	// Required: true
	StarbaseID *int64 `json:"starbase_id"`

	// get_corporations_corporation_id_starbases_state
	//
	// state string
	// Enum: [offline online onlining reinforced unanchoring]
	State string `json:"state,omitempty"`

	// get_corporations_corporation_id_starbases_system_id
	//
	// The solar system this starbase (POS) is in, unanchored POSes have this information
	// Required: true
	SystemID *int32 `json:"system_id"`

	// get_corporations_corporation_id_starbases_type_id
	//
	// Starbase (POS) type
	// Required: true
	TypeID *int32 `json:"type_id"`

	// get_corporations_corporation_id_starbases_unanchor_at
	//
	// When the POS started unanchoring, for starbases (POSes) in unanchoring state
	// Format: date-time
	UnanchorAt strfmt.DateTime `json:"unanchor_at,omitempty"`
}

// Validate validates this get corporations corporation Id starbases o k body items
func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOnlinedSince(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReinforcedUntil(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStarbaseID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSystemID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTypeID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUnanchorAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) validateOnlinedSince(formats strfmt.Registry) error {

	if swag.IsZero(m.OnlinedSince) { // not required
		return nil
	}

	if err := validate.FormatOf("onlined_since", "body", "date-time", m.OnlinedSince.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) validateReinforcedUntil(formats strfmt.Registry) error {

	if swag.IsZero(m.ReinforcedUntil) { // not required
		return nil
	}

	if err := validate.FormatOf("reinforced_until", "body", "date-time", m.ReinforcedUntil.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) validateStarbaseID(formats strfmt.Registry) error {

	if err := validate.Required("starbase_id", "body", m.StarbaseID); err != nil {
		return err
	}

	return nil
}

var getCorporationsCorporationIdStarbasesOKBodyItemsTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["offline","online","onlining","reinforced","unanchoring"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdStarbasesOKBodyItemsTypeStatePropEnum = append(getCorporationsCorporationIdStarbasesOKBodyItemsTypeStatePropEnum, v)
	}
}

const (

	// GetCorporationsCorporationIDStarbasesOKBodyItemsStateOffline captures enum value "offline"
	GetCorporationsCorporationIDStarbasesOKBodyItemsStateOffline string = "offline"

	// GetCorporationsCorporationIDStarbasesOKBodyItemsStateOnline captures enum value "online"
	GetCorporationsCorporationIDStarbasesOKBodyItemsStateOnline string = "online"

	// GetCorporationsCorporationIDStarbasesOKBodyItemsStateOnlining captures enum value "onlining"
	GetCorporationsCorporationIDStarbasesOKBodyItemsStateOnlining string = "onlining"

	// GetCorporationsCorporationIDStarbasesOKBodyItemsStateReinforced captures enum value "reinforced"
	GetCorporationsCorporationIDStarbasesOKBodyItemsStateReinforced string = "reinforced"

	// GetCorporationsCorporationIDStarbasesOKBodyItemsStateUnanchoring captures enum value "unanchoring"
	GetCorporationsCorporationIDStarbasesOKBodyItemsStateUnanchoring string = "unanchoring"
)

// prop value enum
func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) validateStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdStarbasesOKBodyItemsTypeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	// value enum
	if err := m.validateStateEnum("state", "body", m.State); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) validateSystemID(formats strfmt.Registry) error {

	if err := validate.Required("system_id", "body", m.SystemID); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", m.TypeID); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) validateUnanchorAt(formats strfmt.Registry) error {

	if swag.IsZero(m.UnanchorAt) { // not required
		return nil
	}

	if err := validate.FormatOf("unanchor_at", "body", "date-time", m.UnanchorAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetCorporationsCorporationIDStarbasesOKBodyItems) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDStarbasesOKBodyItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
