package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// GetCharactersNames200Ok 200 ok object
// swagger:model get_characters_names_200_ok
type GetCharactersNames200Ok struct {

	// get_characters_names_character_id
	//
	// character_id integer
	// Required: true
	CharacterID *int64 `json:"character_id"`

	// get_characters_names_character_name
	//
	// character_name string
	// Required: true
	CharacterName *string `json:"character_name"`
}

// Validate validates this get characters names 200 ok
func (m *GetCharactersNames200Ok) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCharacterID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCharacterName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCharactersNames200Ok) validateCharacterID(formats strfmt.Registry) error {

	if err := validate.Required("character_id", "body", m.CharacterID); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersNames200Ok) validateCharacterName(formats strfmt.Registry) error {

	if err := validate.Required("character_name", "body", m.CharacterName); err != nil {
		return err
	}

	return nil
}
