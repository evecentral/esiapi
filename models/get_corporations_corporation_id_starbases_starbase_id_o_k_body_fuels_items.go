// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems get_corporations_corporation_id_starbases_starbase_id_fuel
//
// fuel object
// swagger:model getCorporationsCorporationIdStarbasesStarbaseIdOKBodyFuelsItems
type GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems struct {

	// get_corporations_corporation_id_starbases_starbase_id_quantity
	//
	// quantity integer
	// Required: true
	Quantity *int32 `json:"quantity"`

	// get_corporations_corporation_id_starbases_starbase_id_type_id
	//
	// type_id integer
	// Required: true
	TypeID *int32 `json:"type_id"`
}

// Validate validates this get corporations corporation Id starbases starbase Id o k body fuels items
func (m *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQuantity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTypeID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems) validateQuantity(formats strfmt.Registry) error {

	if err := validate.Required("quantity", "body", m.Quantity); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", m.TypeID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDStarbasesStarbaseIDOKBodyFuelsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
