package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// GetCharactersCharacterIDCalendar200Ok event
// swagger:model get_characters_character_id_calendar_200_ok
type GetCharactersCharacterIDCalendar200Ok struct {

	// get_characters_character_id_calendar_event_date
	//
	// event_date string
	EventDate strfmt.DateTime `json:"event_date,omitempty"`

	// get_characters_character_id_calendar_event_id
	//
	// event_id integer
	EventID int32 `json:"event_id,omitempty"`

	// get_characters_character_id_calendar_event_response
	//
	// event_response string
	EventResponse string `json:"event_response,omitempty"`

	// get_characters_character_id_calendar_importance
	//
	// importance integer
	Importance int32 `json:"importance,omitempty"`

	// get_characters_character_id_calendar_title
	//
	// title string
	Title string `json:"title,omitempty"`
}

// Validate validates this get characters character id calendar 200 ok
func (m *GetCharactersCharacterIDCalendar200Ok) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEventResponse(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getCharactersCharacterIdCalendar200OkTypeEventResponsePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["declined","not_responded","accepted","tentative"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCharactersCharacterIdCalendar200OkTypeEventResponsePropEnum = append(getCharactersCharacterIdCalendar200OkTypeEventResponsePropEnum, v)
	}
}

const (
	GetCharactersCharacterIDCalendar200OkEventResponseDeclined     string = "declined"
	GetCharactersCharacterIDCalendar200OkEventResponseNotResponded string = "not_responded"
	GetCharactersCharacterIDCalendar200OkEventResponseAccepted     string = "accepted"
	GetCharactersCharacterIDCalendar200OkEventResponseTentative    string = "tentative"
)

// prop value enum
func (m *GetCharactersCharacterIDCalendar200Ok) validateEventResponseEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCharactersCharacterIdCalendar200OkTypeEventResponsePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCharactersCharacterIDCalendar200Ok) validateEventResponse(formats strfmt.Registry) error {

	if swag.IsZero(m.EventResponse) { // not required
		return nil
	}

	// value enum
	if err := m.validateEventResponseEnum("event_response", "body", m.EventResponse); err != nil {
		return err
	}

	return nil
}
