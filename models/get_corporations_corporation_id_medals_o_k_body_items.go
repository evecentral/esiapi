// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCorporationsCorporationIDMedalsOKBodyItems get_corporations_corporation_id_medals_200_ok
//
// 200 ok object
// swagger:model getCorporationsCorporationIdMedalsOKBodyItems
type GetCorporationsCorporationIDMedalsOKBodyItems struct {

	// get_corporations_corporation_id_medals_created_at
	//
	// created_at string
	// Required: true
	// Format: date-time
	CreatedAt *strfmt.DateTime `json:"created_at"`

	// get_corporations_corporation_id_medals_creator_id
	//
	// ID of the character who created this medal
	// Required: true
	CreatorID *int32 `json:"creator_id"`

	// get_corporations_corporation_id_medals_description
	//
	// description string
	// Required: true
	// Max Length: 1000
	Description *string `json:"description"`

	// get_corporations_corporation_id_medals_medal_id
	//
	// medal_id integer
	// Required: true
	MedalID *int32 `json:"medal_id"`

	// get_corporations_corporation_id_medals_title
	//
	// title string
	// Required: true
	// Max Length: 100
	Title *string `json:"title"`
}

// Validate validates this get corporations corporation Id medals o k body items
func (m *GetCorporationsCorporationIDMedalsOKBodyItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatorID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMedalID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCorporationsCorporationIDMedalsOKBodyItems) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", m.CreatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("created_at", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDMedalsOKBodyItems) validateCreatorID(formats strfmt.Registry) error {

	if err := validate.Required("creator_id", "body", m.CreatorID); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDMedalsOKBodyItems) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", m.Description); err != nil {
		return err
	}

	if err := validate.MaxLength("description", "body", string(*m.Description), 1000); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDMedalsOKBodyItems) validateMedalID(formats strfmt.Registry) error {

	if err := validate.Required("medal_id", "body", m.MedalID); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDMedalsOKBodyItems) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("title", "body", m.Title); err != nil {
		return err
	}

	if err := validate.MaxLength("title", "body", string(*m.Title), 100); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetCorporationsCorporationIDMedalsOKBodyItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetCorporationsCorporationIDMedalsOKBodyItems) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDMedalsOKBodyItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
