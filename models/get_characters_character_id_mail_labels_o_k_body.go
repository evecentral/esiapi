// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCharactersCharacterIDMailLabelsOKBody get_characters_character_id_mail_labels_ok
//
// 200 ok object
// swagger:model getCharactersCharacterIdMailLabelsOKBody
type GetCharactersCharacterIDMailLabelsOKBody struct {

	// get_characters_character_id_mail_labels_labels
	//
	// labels array
	// Max Items: 30
	Labels []*GetCharactersCharacterIDMailLabelsOKBodyLabelsItems `json:"labels"`

	// get_characters_character_id_mail_labels_total_unread_count
	//
	// total_unread_count integer
	// Minimum: 0
	TotalUnreadCount *int32 `json:"total_unread_count,omitempty"`
}

// Validate validates this get characters character Id mail labels o k body
func (m *GetCharactersCharacterIDMailLabelsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalUnreadCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCharactersCharacterIDMailLabelsOKBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(m.Labels) { // not required
		return nil
	}

	iLabelsSize := int64(len(m.Labels))

	if err := validate.MaxItems("labels", "body", iLabelsSize, 30); err != nil {
		return err
	}

	for i := 0; i < len(m.Labels); i++ {
		if swag.IsZero(m.Labels[i]) { // not required
			continue
		}

		if m.Labels[i] != nil {
			if err := m.Labels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GetCharactersCharacterIDMailLabelsOKBody) validateTotalUnreadCount(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalUnreadCount) { // not required
		return nil
	}

	if err := validate.MinimumInt("total_unread_count", "body", int64(*m.TotalUnreadCount), 0, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetCharactersCharacterIDMailLabelsOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetCharactersCharacterIDMailLabelsOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDMailLabelsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
