// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCorporationsCorporationIDRolesHistoryOKBodyItems get_corporations_corporation_id_roles_history_200_ok
//
// 200 ok object
// swagger:model getCorporationsCorporationIdRolesHistoryOKBodyItems
type GetCorporationsCorporationIDRolesHistoryOKBodyItems struct {

	// get_corporations_corporation_id_roles_history_changed_at
	//
	// changed_at string
	// Required: true
	// Format: date-time
	ChangedAt *strfmt.DateTime `json:"changed_at"`

	// get_corporations_corporation_id_roles_history_character_id
	//
	// The character whose roles are changed
	// Required: true
	CharacterID *int32 `json:"character_id"`

	// get_corporations_corporation_id_roles_history_issuer_id
	//
	// ID of the character who issued this change
	// Required: true
	IssuerID *int32 `json:"issuer_id"`

	// get_corporations_corporation_id_roles_history_new_roles
	//
	// new_roles array
	// Required: true
	// Max Items: 50
	NewRoles []string `json:"new_roles"`

	// get_corporations_corporation_id_roles_history_old_roles
	//
	// old_roles array
	// Required: true
	// Max Items: 50
	OldRoles []string `json:"old_roles"`

	// get_corporations_corporation_id_roles_history_role_type
	//
	// role_type string
	// Required: true
	// Enum: [grantable_roles grantable_roles_at_base grantable_roles_at_hq grantable_roles_at_other roles roles_at_base roles_at_hq roles_at_other]
	RoleType *string `json:"role_type"`
}

// Validate validates this get corporations corporation Id roles history o k body items
func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChangedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCharacterID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIssuerID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNewRoles(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOldRoles(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoleType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) validateChangedAt(formats strfmt.Registry) error {

	if err := validate.Required("changed_at", "body", m.ChangedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("changed_at", "body", "date-time", m.ChangedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) validateCharacterID(formats strfmt.Registry) error {

	if err := validate.Required("character_id", "body", m.CharacterID); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) validateIssuerID(formats strfmt.Registry) error {

	if err := validate.Required("issuer_id", "body", m.IssuerID); err != nil {
		return err
	}

	return nil
}

var getCorporationsCorporationIdRolesHistoryOKBodyItemsNewRolesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Accountant","Auditor","Communications_Officer","Config_Equipment","Config_Starbase_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Contract_Manager","Diplomat","Director","Factory_Manager","Fitting_Manager","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Junior_Accountant","Personnel_Manager","Rent_Factory_Facility","Rent_Office","Rent_Research_Facility","Security_Officer","Starbase_Defense_Operator","Starbase_Fuel_Technician","Station_Manager","Terrestrial_Combat_Officer","Terrestrial_Logistics_Officer","Trader"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRolesHistoryOKBodyItemsNewRolesItemsEnum = append(getCorporationsCorporationIdRolesHistoryOKBodyItemsNewRolesItemsEnum, v)
	}
}

func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) validateNewRolesItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRolesHistoryOKBodyItemsNewRolesItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) validateNewRoles(formats strfmt.Registry) error {

	if err := validate.Required("new_roles", "body", m.NewRoles); err != nil {
		return err
	}

	iNewRolesSize := int64(len(m.NewRoles))

	if err := validate.MaxItems("new_roles", "body", iNewRolesSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(m.NewRoles); i++ {

		// value enum
		if err := m.validateNewRolesItemsEnum("new_roles"+"."+strconv.Itoa(i), "body", m.NewRoles[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdRolesHistoryOKBodyItemsOldRolesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Accountant","Auditor","Communications_Officer","Config_Equipment","Config_Starbase_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Contract_Manager","Diplomat","Director","Factory_Manager","Fitting_Manager","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Junior_Accountant","Personnel_Manager","Rent_Factory_Facility","Rent_Office","Rent_Research_Facility","Security_Officer","Starbase_Defense_Operator","Starbase_Fuel_Technician","Station_Manager","Terrestrial_Combat_Officer","Terrestrial_Logistics_Officer","Trader"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRolesHistoryOKBodyItemsOldRolesItemsEnum = append(getCorporationsCorporationIdRolesHistoryOKBodyItemsOldRolesItemsEnum, v)
	}
}

func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) validateOldRolesItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRolesHistoryOKBodyItemsOldRolesItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) validateOldRoles(formats strfmt.Registry) error {

	if err := validate.Required("old_roles", "body", m.OldRoles); err != nil {
		return err
	}

	iOldRolesSize := int64(len(m.OldRoles))

	if err := validate.MaxItems("old_roles", "body", iOldRolesSize, 50); err != nil {
		return err
	}

	for i := 0; i < len(m.OldRoles); i++ {

		// value enum
		if err := m.validateOldRolesItemsEnum("old_roles"+"."+strconv.Itoa(i), "body", m.OldRoles[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdRolesHistoryOKBodyItemsTypeRoleTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["grantable_roles","grantable_roles_at_base","grantable_roles_at_hq","grantable_roles_at_other","roles","roles_at_base","roles_at_hq","roles_at_other"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRolesHistoryOKBodyItemsTypeRoleTypePropEnum = append(getCorporationsCorporationIdRolesHistoryOKBodyItemsTypeRoleTypePropEnum, v)
	}
}

const (

	// GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeGrantableRoles captures enum value "grantable_roles"
	GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeGrantableRoles string = "grantable_roles"

	// GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeGrantableRolesAtBase captures enum value "grantable_roles_at_base"
	GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeGrantableRolesAtBase string = "grantable_roles_at_base"

	// GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeGrantableRolesAtHq captures enum value "grantable_roles_at_hq"
	GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeGrantableRolesAtHq string = "grantable_roles_at_hq"

	// GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeGrantableRolesAtOther captures enum value "grantable_roles_at_other"
	GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeGrantableRolesAtOther string = "grantable_roles_at_other"

	// GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeRoles captures enum value "roles"
	GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeRoles string = "roles"

	// GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeRolesAtBase captures enum value "roles_at_base"
	GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeRolesAtBase string = "roles_at_base"

	// GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeRolesAtHq captures enum value "roles_at_hq"
	GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeRolesAtHq string = "roles_at_hq"

	// GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeRolesAtOther captures enum value "roles_at_other"
	GetCorporationsCorporationIDRolesHistoryOKBodyItemsRoleTypeRolesAtOther string = "roles_at_other"
)

// prop value enum
func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) validateRoleTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRolesHistoryOKBodyItemsTypeRoleTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) validateRoleType(formats strfmt.Registry) error {

	if err := validate.Required("role_type", "body", m.RoleType); err != nil {
		return err
	}

	// value enum
	if err := m.validateRoleTypeEnum("role_type", "body", *m.RoleType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetCorporationsCorporationIDRolesHistoryOKBodyItems) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDRolesHistoryOKBodyItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
