// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems get_characters_character_id_planets_planet_id_pin
//
// pin object
// swagger:model getCharactersCharacterIdPlanetsPlanetIdOKBodyPinsItems
type GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems struct {

	// get_characters_character_id_planets_planet_id_contents
	//
	// contents array
	// Max Items: 90
	Contents []*GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItemsContentsItems `json:"contents"`

	// get_characters_character_id_planets_planet_id_expiry_time
	//
	// expiry_time string
	// Format: date-time
	ExpiryTime strfmt.DateTime `json:"expiry_time,omitempty"`

	// extractor details
	ExtractorDetails *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItemsExtractorDetails `json:"extractor_details,omitempty"`

	// factory details
	FactoryDetails *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItemsFactoryDetails `json:"factory_details,omitempty"`

	// get_characters_character_id_planets_planet_id_install_time
	//
	// install_time string
	// Format: date-time
	InstallTime strfmt.DateTime `json:"install_time,omitempty"`

	// get_characters_character_id_planets_planet_id_last_cycle_start
	//
	// last_cycle_start string
	// Format: date-time
	LastCycleStart strfmt.DateTime `json:"last_cycle_start,omitempty"`

	// get_characters_character_id_planets_planet_id_latitude
	//
	// latitude number
	// Required: true
	Latitude *float32 `json:"latitude"`

	// get_characters_character_id_planets_planet_id_longitude
	//
	// longitude number
	// Required: true
	Longitude *float32 `json:"longitude"`

	// get_characters_character_id_planets_planet_id_pin_id
	//
	// pin_id integer
	// Required: true
	PinID *int64 `json:"pin_id"`

	// get_characters_character_id_planets_planet_id_schematic_id
	//
	// schematic_id integer
	SchematicID int32 `json:"schematic_id,omitempty"`

	// get_characters_character_id_planets_planet_id_type_id
	//
	// type_id integer
	// Required: true
	TypeID *int32 `json:"type_id"`
}

// Validate validates this get characters character Id planets planet Id o k body pins items
func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContents(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExpiryTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExtractorDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFactoryDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstallTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastCycleStart(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLatitude(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLongitude(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePinID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTypeID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) validateContents(formats strfmt.Registry) error {

	if swag.IsZero(m.Contents) { // not required
		return nil
	}

	iContentsSize := int64(len(m.Contents))

	if err := validate.MaxItems("contents", "body", iContentsSize, 90); err != nil {
		return err
	}

	for i := 0; i < len(m.Contents); i++ {
		if swag.IsZero(m.Contents[i]) { // not required
			continue
		}

		if m.Contents[i] != nil {
			if err := m.Contents[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("contents" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) validateExpiryTime(formats strfmt.Registry) error {

	if swag.IsZero(m.ExpiryTime) { // not required
		return nil
	}

	if err := validate.FormatOf("expiry_time", "body", "date-time", m.ExpiryTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) validateExtractorDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.ExtractorDetails) { // not required
		return nil
	}

	if m.ExtractorDetails != nil {
		if err := m.ExtractorDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("extractor_details")
			}
			return err
		}
	}

	return nil
}

func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) validateFactoryDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.FactoryDetails) { // not required
		return nil
	}

	if m.FactoryDetails != nil {
		if err := m.FactoryDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("factory_details")
			}
			return err
		}
	}

	return nil
}

func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) validateInstallTime(formats strfmt.Registry) error {

	if swag.IsZero(m.InstallTime) { // not required
		return nil
	}

	if err := validate.FormatOf("install_time", "body", "date-time", m.InstallTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) validateLastCycleStart(formats strfmt.Registry) error {

	if swag.IsZero(m.LastCycleStart) { // not required
		return nil
	}

	if err := validate.FormatOf("last_cycle_start", "body", "date-time", m.LastCycleStart.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) validateLatitude(formats strfmt.Registry) error {

	if err := validate.Required("latitude", "body", m.Latitude); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) validateLongitude(formats strfmt.Registry) error {

	if err := validate.Required("longitude", "body", m.Longitude); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) validatePinID(formats strfmt.Registry) error {

	if err := validate.Required("pin_id", "body", m.PinID); err != nil {
		return err
	}

	return nil
}

func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", m.TypeID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDPlanetsPlanetIDOKBodyPinsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
