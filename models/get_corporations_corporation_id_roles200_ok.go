package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// GetCorporationsCorporationIDRoles200Ok 200 ok object
// swagger:model get_corporations_corporation_id_roles_200_ok
type GetCorporationsCorporationIDRoles200Ok struct {

	// get_corporations_corporation_id_roles_character_id
	//
	// character_id integer
	// Required: true
	CharacterID *int32 `json:"character_id"`

	// get_corporations_corporation_id_roles_grantable_roles
	//
	// grantable_roles array
	GrantableRoles []string `json:"grantable_roles"`

	// get_corporations_corporation_id_roles_grantable_roles_at_base
	//
	// grantable_roles_at_base array
	GrantableRolesAtBase []string `json:"grantable_roles_at_base"`

	// get_corporations_corporation_id_roles_grantable_roles_at_hq
	//
	// grantable_roles_at_hq array
	GrantableRolesAtHq []string `json:"grantable_roles_at_hq"`

	// get_corporations_corporation_id_roles_grantable_roles_at_other
	//
	// grantable_roles_at_other array
	GrantableRolesAtOther []string `json:"grantable_roles_at_other"`

	// get_corporations_corporation_id_roles_roles
	//
	// roles array
	Roles []string `json:"roles"`

	// get_corporations_corporation_id_roles_roles_at_base
	//
	// roles_at_base array
	RolesAtBase []string `json:"roles_at_base"`

	// get_corporations_corporation_id_roles_roles_at_hq
	//
	// roles_at_hq array
	RolesAtHq []string `json:"roles_at_hq"`

	// get_corporations_corporation_id_roles_roles_at_other
	//
	// roles_at_other array
	RolesAtOther []string `json:"roles_at_other"`
}

// Validate validates this get corporations corporation id roles 200 ok
func (m *GetCorporationsCorporationIDRoles200Ok) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCharacterID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGrantableRoles(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGrantableRolesAtBase(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGrantableRolesAtHq(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGrantableRolesAtOther(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRoles(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRolesAtBase(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRolesAtHq(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRolesAtOther(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateCharacterID(formats strfmt.Registry) error {

	if err := validate.Required("character_id", "body", m.CharacterID); err != nil {
		return err
	}

	return nil
}

var getCorporationsCorporationIdRoles200OkGrantableRolesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Director","Personnel_Manager","Accountant","Security_Officer","Factory_Manager","Station_Manager","Auditor","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Diplomat","Config_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Rent_Office","Rent_Factory_Facility","Rent_Research_Facility","Junior_Accountant","Config_Starbase_Equipment","Trader","Communications_Officer","Contract_Manager","Starbase_Defense_Operator","Starbase_Fuel_Technician","Fitting_Manager","Terrestrial_Combat_Officer","Terrestrial_Logistics_Officer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRoles200OkGrantableRolesItemsEnum = append(getCorporationsCorporationIdRoles200OkGrantableRolesItemsEnum, v)
	}
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateGrantableRolesItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRoles200OkGrantableRolesItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateGrantableRoles(formats strfmt.Registry) error {

	if swag.IsZero(m.GrantableRoles) { // not required
		return nil
	}

	for i := 0; i < len(m.GrantableRoles); i++ {

		// value enum
		if err := m.validateGrantableRolesItemsEnum("grantable_roles"+"."+strconv.Itoa(i), "body", m.GrantableRoles[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdRoles200OkGrantableRolesAtBaseItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Director","Personnel_Manager","Accountant","Security_Officer","Factory_Manager","Station_Manager","Auditor","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Diplomat","Config_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Rent_Office","Rent_Factory_Facility","Rent_Research_Facility","Junior_Accountant","Config_Starbase_Equipment","Trader","Communications_Officer","Contract_Manager","Starbase_Defense_Operator","Starbase_Fuel_Technician","Fitting_Manager","Terrestrial_Combat_Officer","Terrestrial_Logistics_Officer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRoles200OkGrantableRolesAtBaseItemsEnum = append(getCorporationsCorporationIdRoles200OkGrantableRolesAtBaseItemsEnum, v)
	}
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateGrantableRolesAtBaseItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRoles200OkGrantableRolesAtBaseItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateGrantableRolesAtBase(formats strfmt.Registry) error {

	if swag.IsZero(m.GrantableRolesAtBase) { // not required
		return nil
	}

	for i := 0; i < len(m.GrantableRolesAtBase); i++ {

		// value enum
		if err := m.validateGrantableRolesAtBaseItemsEnum("grantable_roles_at_base"+"."+strconv.Itoa(i), "body", m.GrantableRolesAtBase[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdRoles200OkGrantableRolesAtHqItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Director","Personnel_Manager","Accountant","Security_Officer","Factory_Manager","Station_Manager","Auditor","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Diplomat","Config_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Rent_Office","Rent_Factory_Facility","Rent_Research_Facility","Junior_Accountant","Config_Starbase_Equipment","Trader","Communications_Officer","Contract_Manager","Starbase_Defense_Operator","Starbase_Fuel_Technician","Fitting_Manager","Terrestrial_Combat_Officer","Terrestrial_Logistics_Officer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRoles200OkGrantableRolesAtHqItemsEnum = append(getCorporationsCorporationIdRoles200OkGrantableRolesAtHqItemsEnum, v)
	}
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateGrantableRolesAtHqItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRoles200OkGrantableRolesAtHqItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateGrantableRolesAtHq(formats strfmt.Registry) error {

	if swag.IsZero(m.GrantableRolesAtHq) { // not required
		return nil
	}

	for i := 0; i < len(m.GrantableRolesAtHq); i++ {

		// value enum
		if err := m.validateGrantableRolesAtHqItemsEnum("grantable_roles_at_hq"+"."+strconv.Itoa(i), "body", m.GrantableRolesAtHq[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdRoles200OkGrantableRolesAtOtherItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Director","Personnel_Manager","Accountant","Security_Officer","Factory_Manager","Station_Manager","Auditor","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Diplomat","Config_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Rent_Office","Rent_Factory_Facility","Rent_Research_Facility","Junior_Accountant","Config_Starbase_Equipment","Trader","Communications_Officer","Contract_Manager","Starbase_Defense_Operator","Starbase_Fuel_Technician","Fitting_Manager","Terrestrial_Combat_Officer","Terrestrial_Logistics_Officer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRoles200OkGrantableRolesAtOtherItemsEnum = append(getCorporationsCorporationIdRoles200OkGrantableRolesAtOtherItemsEnum, v)
	}
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateGrantableRolesAtOtherItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRoles200OkGrantableRolesAtOtherItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateGrantableRolesAtOther(formats strfmt.Registry) error {

	if swag.IsZero(m.GrantableRolesAtOther) { // not required
		return nil
	}

	for i := 0; i < len(m.GrantableRolesAtOther); i++ {

		// value enum
		if err := m.validateGrantableRolesAtOtherItemsEnum("grantable_roles_at_other"+"."+strconv.Itoa(i), "body", m.GrantableRolesAtOther[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdRoles200OkRolesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Director","Personnel_Manager","Accountant","Security_Officer","Factory_Manager","Station_Manager","Auditor","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Diplomat","Config_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Rent_Office","Rent_Factory_Facility","Rent_Research_Facility","Junior_Accountant","Config_Starbase_Equipment","Trader","Communications_Officer","Contract_Manager","Starbase_Defense_Operator","Starbase_Fuel_Technician","Fitting_Manager","Terrestrial_Combat_Officer","Terrestrial_Logistics_Officer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRoles200OkRolesItemsEnum = append(getCorporationsCorporationIdRoles200OkRolesItemsEnum, v)
	}
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateRolesItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRoles200OkRolesItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateRoles(formats strfmt.Registry) error {

	if swag.IsZero(m.Roles) { // not required
		return nil
	}

	for i := 0; i < len(m.Roles); i++ {

		// value enum
		if err := m.validateRolesItemsEnum("roles"+"."+strconv.Itoa(i), "body", m.Roles[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdRoles200OkRolesAtBaseItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Director","Personnel_Manager","Accountant","Security_Officer","Factory_Manager","Station_Manager","Auditor","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Diplomat","Config_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Rent_Office","Rent_Factory_Facility","Rent_Research_Facility","Junior_Accountant","Config_Starbase_Equipment","Trader","Communications_Officer","Contract_Manager","Starbase_Defense_Operator","Starbase_Fuel_Technician","Fitting_Manager","Terrestrial_Combat_Officer","Terrestrial_Logistics_Officer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRoles200OkRolesAtBaseItemsEnum = append(getCorporationsCorporationIdRoles200OkRolesAtBaseItemsEnum, v)
	}
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateRolesAtBaseItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRoles200OkRolesAtBaseItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateRolesAtBase(formats strfmt.Registry) error {

	if swag.IsZero(m.RolesAtBase) { // not required
		return nil
	}

	for i := 0; i < len(m.RolesAtBase); i++ {

		// value enum
		if err := m.validateRolesAtBaseItemsEnum("roles_at_base"+"."+strconv.Itoa(i), "body", m.RolesAtBase[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdRoles200OkRolesAtHqItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Director","Personnel_Manager","Accountant","Security_Officer","Factory_Manager","Station_Manager","Auditor","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Diplomat","Config_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Rent_Office","Rent_Factory_Facility","Rent_Research_Facility","Junior_Accountant","Config_Starbase_Equipment","Trader","Communications_Officer","Contract_Manager","Starbase_Defense_Operator","Starbase_Fuel_Technician","Fitting_Manager","Terrestrial_Combat_Officer","Terrestrial_Logistics_Officer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRoles200OkRolesAtHqItemsEnum = append(getCorporationsCorporationIdRoles200OkRolesAtHqItemsEnum, v)
	}
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateRolesAtHqItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRoles200OkRolesAtHqItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateRolesAtHq(formats strfmt.Registry) error {

	if swag.IsZero(m.RolesAtHq) { // not required
		return nil
	}

	for i := 0; i < len(m.RolesAtHq); i++ {

		// value enum
		if err := m.validateRolesAtHqItemsEnum("roles_at_hq"+"."+strconv.Itoa(i), "body", m.RolesAtHq[i]); err != nil {
			return err
		}

	}

	return nil
}

var getCorporationsCorporationIdRoles200OkRolesAtOtherItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Director","Personnel_Manager","Accountant","Security_Officer","Factory_Manager","Station_Manager","Auditor","Hangar_Take_1","Hangar_Take_2","Hangar_Take_3","Hangar_Take_4","Hangar_Take_5","Hangar_Take_6","Hangar_Take_7","Hangar_Query_1","Hangar_Query_2","Hangar_Query_3","Hangar_Query_4","Hangar_Query_5","Hangar_Query_6","Hangar_Query_7","Account_Take_1","Account_Take_2","Account_Take_3","Account_Take_4","Account_Take_5","Account_Take_6","Account_Take_7","Diplomat","Config_Equipment","Container_Take_1","Container_Take_2","Container_Take_3","Container_Take_4","Container_Take_5","Container_Take_6","Container_Take_7","Rent_Office","Rent_Factory_Facility","Rent_Research_Facility","Junior_Accountant","Config_Starbase_Equipment","Trader","Communications_Officer","Contract_Manager","Starbase_Defense_Operator","Starbase_Fuel_Technician","Fitting_Manager","Terrestrial_Combat_Officer","Terrestrial_Logistics_Officer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCorporationsCorporationIdRoles200OkRolesAtOtherItemsEnum = append(getCorporationsCorporationIdRoles200OkRolesAtOtherItemsEnum, v)
	}
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateRolesAtOtherItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCorporationsCorporationIdRoles200OkRolesAtOtherItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetCorporationsCorporationIDRoles200Ok) validateRolesAtOther(formats strfmt.Registry) error {

	if swag.IsZero(m.RolesAtOther) { // not required
		return nil
	}

	for i := 0; i < len(m.RolesAtOther); i++ {

		// value enum
		if err := m.validateRolesAtOtherItemsEnum("roles_at_other"+"."+strconv.Itoa(i), "body", m.RolesAtOther[i]); err != nil {
			return err
		}

	}

	return nil
}
