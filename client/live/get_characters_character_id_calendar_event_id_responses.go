package live

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/esiswagger/models"
)

// GetCharactersCharacterIDCalendarEventIDReader is a Reader for the GetCharactersCharacterIDCalendarEventID structure.
type GetCharactersCharacterIDCalendarEventIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDCalendarEventIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDCalendarEventIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetCharactersCharacterIDCalendarEventIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDCalendarEventIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDCalendarEventIDOK creates a GetCharactersCharacterIDCalendarEventIDOK with default headers values
func NewGetCharactersCharacterIDCalendarEventIDOK() *GetCharactersCharacterIDCalendarEventIDOK {
	return &GetCharactersCharacterIDCalendarEventIDOK{}
}

/*GetCharactersCharacterIDCalendarEventIDOK handles this case with default header values.

Full details of a specific event
*/
type GetCharactersCharacterIDCalendarEventIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetCharactersCharacterIDCalendarEventIDOk
}

func (o *GetCharactersCharacterIDCalendarEventIDOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetCharactersCharacterIDCalendarEventIDOk)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDForbidden creates a GetCharactersCharacterIDCalendarEventIDForbidden with default headers values
func NewGetCharactersCharacterIDCalendarEventIDForbidden() *GetCharactersCharacterIDCalendarEventIDForbidden {
	return &GetCharactersCharacterIDCalendarEventIDForbidden{}
}

/*GetCharactersCharacterIDCalendarEventIDForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDCalendarEventIDForbidden struct {
	Payload *models.GetCharactersCharacterIDCalendarEventIDForbidden
}

func (o *GetCharactersCharacterIDCalendarEventIDForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetCharactersCharacterIDCalendarEventIDForbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDInternalServerError creates a GetCharactersCharacterIDCalendarEventIDInternalServerError with default headers values
func NewGetCharactersCharacterIDCalendarEventIDInternalServerError() *GetCharactersCharacterIDCalendarEventIDInternalServerError {
	return &GetCharactersCharacterIDCalendarEventIDInternalServerError{}
}

/*GetCharactersCharacterIDCalendarEventIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDCalendarEventIDInternalServerError struct {
	Payload *models.GetCharactersCharacterIDCalendarEventIDInternalServerError
}

func (o *GetCharactersCharacterIDCalendarEventIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetCharactersCharacterIDCalendarEventIDInternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
