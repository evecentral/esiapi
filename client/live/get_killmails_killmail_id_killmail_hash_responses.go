package live

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetKillmailsKillmailIDKillmailHashReader is a Reader for the GetKillmailsKillmailIDKillmailHash structure.
type GetKillmailsKillmailIDKillmailHashReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKillmailsKillmailIDKillmailHashReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetKillmailsKillmailIDKillmailHashOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 422:
		result := NewGetKillmailsKillmailIDKillmailHashUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetKillmailsKillmailIDKillmailHashInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetKillmailsKillmailIDKillmailHashOK creates a GetKillmailsKillmailIDKillmailHashOK with default headers values
func NewGetKillmailsKillmailIDKillmailHashOK() *GetKillmailsKillmailIDKillmailHashOK {
	return &GetKillmailsKillmailIDKillmailHashOK{}
}

/*GetKillmailsKillmailIDKillmailHashOK handles this case with default header values.

A killmail
*/
type GetKillmailsKillmailIDKillmailHashOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetKillmailsKillmailIDKillmailHashOk
}

func (o *GetKillmailsKillmailIDKillmailHashOK) Error() string {
	return fmt.Sprintf("[GET /killmails/{killmail_id}/{killmail_hash}/][%d] getKillmailsKillmailIdKillmailHashOK  %+v", 200, o.Payload)
}

func (o *GetKillmailsKillmailIDKillmailHashOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetKillmailsKillmailIDKillmailHashOk)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKillmailsKillmailIDKillmailHashUnprocessableEntity creates a GetKillmailsKillmailIDKillmailHashUnprocessableEntity with default headers values
func NewGetKillmailsKillmailIDKillmailHashUnprocessableEntity() *GetKillmailsKillmailIDKillmailHashUnprocessableEntity {
	return &GetKillmailsKillmailIDKillmailHashUnprocessableEntity{}
}

/*GetKillmailsKillmailIDKillmailHashUnprocessableEntity handles this case with default header values.

Errors in query parameters
*/
type GetKillmailsKillmailIDKillmailHashUnprocessableEntity struct {
	Payload *models.GetKillmailsKillmailIDKillmailHashUnprocessableEntity
}

func (o *GetKillmailsKillmailIDKillmailHashUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /killmails/{killmail_id}/{killmail_hash}/][%d] getKillmailsKillmailIdKillmailHashUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetKillmailsKillmailIDKillmailHashUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetKillmailsKillmailIDKillmailHashUnprocessableEntity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKillmailsKillmailIDKillmailHashInternalServerError creates a GetKillmailsKillmailIDKillmailHashInternalServerError with default headers values
func NewGetKillmailsKillmailIDKillmailHashInternalServerError() *GetKillmailsKillmailIDKillmailHashInternalServerError {
	return &GetKillmailsKillmailIDKillmailHashInternalServerError{}
}

/*GetKillmailsKillmailIDKillmailHashInternalServerError handles this case with default header values.

Internal server error
*/
type GetKillmailsKillmailIDKillmailHashInternalServerError struct {
	Payload *models.GetKillmailsKillmailIDKillmailHashInternalServerError
}

func (o *GetKillmailsKillmailIDKillmailHashInternalServerError) Error() string {
	return fmt.Sprintf("[GET /killmails/{killmail_id}/{killmail_hash}/][%d] getKillmailsKillmailIdKillmailHashInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKillmailsKillmailIDKillmailHashInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetKillmailsKillmailIDKillmailHashInternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
