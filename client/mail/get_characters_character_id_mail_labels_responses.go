// Code generated by go-swagger; DO NOT EDIT.

package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDMailLabelsReader is a Reader for the GetCharactersCharacterIDMailLabels structure.
type GetCharactersCharacterIDMailLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDMailLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDMailLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetCharactersCharacterIDMailLabelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDMailLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDMailLabelsOK creates a GetCharactersCharacterIDMailLabelsOK with default headers values
func NewGetCharactersCharacterIDMailLabelsOK() *GetCharactersCharacterIDMailLabelsOK {
	return &GetCharactersCharacterIDMailLabelsOK{}
}

/*GetCharactersCharacterIDMailLabelsOK handles this case with default header values.

A list of mail labels and unread counts
*/
type GetCharactersCharacterIDMailLabelsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload GetCharactersCharacterIDMailLabelsOKBody
}

func (o *GetCharactersCharacterIDMailLabelsOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDMailLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailLabelsForbidden creates a GetCharactersCharacterIDMailLabelsForbidden with default headers values
func NewGetCharactersCharacterIDMailLabelsForbidden() *GetCharactersCharacterIDMailLabelsForbidden {
	return &GetCharactersCharacterIDMailLabelsForbidden{}
}

/*GetCharactersCharacterIDMailLabelsForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDMailLabelsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDMailLabelsForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDMailLabelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailLabelsInternalServerError creates a GetCharactersCharacterIDMailLabelsInternalServerError with default headers values
func NewGetCharactersCharacterIDMailLabelsInternalServerError() *GetCharactersCharacterIDMailLabelsInternalServerError {
	return &GetCharactersCharacterIDMailLabelsInternalServerError{}
}

/*GetCharactersCharacterIDMailLabelsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDMailLabelsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDMailLabelsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mail/labels/][%d] getCharactersCharacterIdMailLabelsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDMailLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDMailLabelsOKBody get_characters_character_id_mail_labels_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDMailLabelsOKBody
*/

type GetCharactersCharacterIDMailLabelsOKBody struct {

	// get_characters_character_id_mail_labels_labels
	//
	// labels array
	// Required: true
	// Max Items: 30
	Labels []*LabelsItems0 `json:"labels"`

	// get_characters_character_id_mail_labels_total_unread_count
	//
	// total_unread_count integer
	// Required: true
	// Minimum: 0
	TotalUnreadCount *int32 `json:"total_unread_count"`
}

/* polymorph GetCharactersCharacterIDMailLabelsOKBody labels false */

/* polymorph GetCharactersCharacterIDMailLabelsOKBody total_unread_count false */

// Validate validates this get characters character ID mail labels o k body
func (o *GetCharactersCharacterIDMailLabelsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabels(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateTotalUnreadCount(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailLabelsOKBody) validateLabels(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdMailLabelsOK"+"."+"labels", "body", o.Labels); err != nil {
		return err
	}

	iLabelsSize := int64(len(o.Labels))

	if err := validate.MaxItems("getCharactersCharacterIdMailLabelsOK"+"."+"labels", "body", iLabelsSize, 30); err != nil {
		return err
	}

	for i := 0; i < len(o.Labels); i++ {

		if swag.IsZero(o.Labels[i]) { // not required
			continue
		}

		if o.Labels[i] != nil {

			if err := o.Labels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCharactersCharacterIdMailLabelsOK" + "." + "labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetCharactersCharacterIDMailLabelsOKBody) validateTotalUnreadCount(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdMailLabelsOK"+"."+"total_unread_count", "body", o.TotalUnreadCount); err != nil {
		return err
	}

	if err := validate.MinimumInt("getCharactersCharacterIdMailLabelsOK"+"."+"total_unread_count", "body", int64(*o.TotalUnreadCount), 0, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailLabelsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDMailLabelsOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDMailLabelsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LabelsItems0 get_characters_character_id_mail_labels_label
//
// label object
swagger:model LabelsItems0
*/

type LabelsItems0 struct {

	// get_characters_character_id_mail_labels_color
	//
	// color string
	Color *string `json:"color,omitempty"`

	// get_characters_character_id_mail_labels_label_id
	//
	// label_id integer
	// Minimum: 0
	LabelID *int32 `json:"label_id,omitempty"`

	// get_characters_character_id_mail_labels_name
	//
	// name string
	// Max Length: 40
	Name string `json:"name,omitempty"`

	// get_characters_character_id_mail_labels_unread_count
	//
	// unread_count integer
	// Minimum: 0
	UnreadCount *int32 `json:"unread_count,omitempty"`
}

/* polymorph LabelsItems0 color false */

/* polymorph LabelsItems0 label_id false */

/* polymorph LabelsItems0 name false */

/* polymorph LabelsItems0 unread_count false */

// Validate validates this labels items0
func (o *LabelsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateColor(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLabelID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateUnreadCount(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var labelsItems0TypeColorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["#ffffff","#ffff01","#ff6600","#fe0000","#9a0000","#660066","#0000fe","#0099ff","#01ffff","#00ff33","#349800","#006634","#666666","#999999","#e6e6e6","#ffffcd","#99ffff","#ccff9a"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		labelsItems0TypeColorPropEnum = append(labelsItems0TypeColorPropEnum, v)
	}
}

const (
	// LabelsItems0ColorNrFfffff captures enum value "#ffffff"
	LabelsItems0ColorNrFfffff string = "#ffffff"
	// LabelsItems0ColorNrFfff01 captures enum value "#ffff01"
	LabelsItems0ColorNrFfff01 string = "#ffff01"
	// LabelsItems0ColorNrFf6600 captures enum value "#ff6600"
	LabelsItems0ColorNrFf6600 string = "#ff6600"
	// LabelsItems0ColorNrFe0000 captures enum value "#fe0000"
	LabelsItems0ColorNrFe0000 string = "#fe0000"
	// LabelsItems0ColorNr9a0000 captures enum value "#9a0000"
	LabelsItems0ColorNr9a0000 string = "#9a0000"
	// LabelsItems0ColorNr660066 captures enum value "#660066"
	LabelsItems0ColorNr660066 string = "#660066"
	// LabelsItems0ColorNr0000fe captures enum value "#0000fe"
	LabelsItems0ColorNr0000fe string = "#0000fe"
	// LabelsItems0ColorNr0099ff captures enum value "#0099ff"
	LabelsItems0ColorNr0099ff string = "#0099ff"
	// LabelsItems0ColorNr01ffff captures enum value "#01ffff"
	LabelsItems0ColorNr01ffff string = "#01ffff"
	// LabelsItems0ColorNr00ff33 captures enum value "#00ff33"
	LabelsItems0ColorNr00ff33 string = "#00ff33"
	// LabelsItems0ColorNr349800 captures enum value "#349800"
	LabelsItems0ColorNr349800 string = "#349800"
	// LabelsItems0ColorNr006634 captures enum value "#006634"
	LabelsItems0ColorNr006634 string = "#006634"
	// LabelsItems0ColorNr666666 captures enum value "#666666"
	LabelsItems0ColorNr666666 string = "#666666"
	// LabelsItems0ColorNr999999 captures enum value "#999999"
	LabelsItems0ColorNr999999 string = "#999999"
	// LabelsItems0ColorNrE6e6e6 captures enum value "#e6e6e6"
	LabelsItems0ColorNrE6e6e6 string = "#e6e6e6"
	// LabelsItems0ColorNrFfffcd captures enum value "#ffffcd"
	LabelsItems0ColorNrFfffcd string = "#ffffcd"
	// LabelsItems0ColorNr99ffff captures enum value "#99ffff"
	LabelsItems0ColorNr99ffff string = "#99ffff"
	// LabelsItems0ColorNrCcff9a captures enum value "#ccff9a"
	LabelsItems0ColorNrCcff9a string = "#ccff9a"
)

// prop value enum
func (o *LabelsItems0) validateColorEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, labelsItems0TypeColorPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *LabelsItems0) validateColor(formats strfmt.Registry) error {

	if swag.IsZero(o.Color) { // not required
		return nil
	}

	// value enum
	if err := o.validateColorEnum("color", "body", *o.Color); err != nil {
		return err
	}

	return nil
}

func (o *LabelsItems0) validateLabelID(formats strfmt.Registry) error {

	if swag.IsZero(o.LabelID) { // not required
		return nil
	}

	if err := validate.MinimumInt("label_id", "body", int64(*o.LabelID), 0, false); err != nil {
		return err
	}

	return nil
}

func (o *LabelsItems0) validateName(formats strfmt.Registry) error {

	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if err := validate.MaxLength("name", "body", string(o.Name), 40); err != nil {
		return err
	}

	return nil
}

func (o *LabelsItems0) validateUnreadCount(formats strfmt.Registry) error {

	if swag.IsZero(o.UnreadCount) { // not required
		return nil
	}

	if err := validate.MinimumInt("unread_count", "body", int64(*o.UnreadCount), 0, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *LabelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LabelsItems0) UnmarshalBinary(b []byte) error {
	var res LabelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
