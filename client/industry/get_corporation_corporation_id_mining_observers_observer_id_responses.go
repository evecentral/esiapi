// Code generated by go-swagger; DO NOT EDIT.

package industry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationCorporationIDMiningObserversObserverIDReader is a Reader for the GetCorporationCorporationIDMiningObserversObserverID structure.
type GetCorporationCorporationIDMiningObserversObserverIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationCorporationIDMiningObserversObserverIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationCorporationIDMiningObserversObserverIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationCorporationIDMiningObserversObserverIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationCorporationIDMiningObserversObserverIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCorporationCorporationIDMiningObserversObserverIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCorporationCorporationIDMiningObserversObserverIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationCorporationIDMiningObserversObserverIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationCorporationIDMiningObserversObserverIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationCorporationIDMiningObserversObserverIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationCorporationIDMiningObserversObserverIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationCorporationIDMiningObserversObserverIDOK creates a GetCorporationCorporationIDMiningObserversObserverIDOK with default headers values
func NewGetCorporationCorporationIDMiningObserversObserverIDOK() *GetCorporationCorporationIDMiningObserversObserverIDOK {
	return &GetCorporationCorporationIDMiningObserversObserverIDOK{
		XPages: 1,
	}
}

/*GetCorporationCorporationIDMiningObserversObserverIDOK handles this case with default header values.

Mining ledger of an observer
*/
type GetCorporationCorporationIDMiningObserversObserverIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetCorporationCorporationIDMiningObserversObserverIDOKBodyItems
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDOK) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/observers/{observer_id}/][%d] getCorporationCorporationIdMiningObserversObserverIdOK  %+v", 200, o.Payload)
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningObserversObserverIDNotModified creates a GetCorporationCorporationIDMiningObserversObserverIDNotModified with default headers values
func NewGetCorporationCorporationIDMiningObserversObserverIDNotModified() *GetCorporationCorporationIDMiningObserversObserverIDNotModified {
	return &GetCorporationCorporationIDMiningObserversObserverIDNotModified{}
}

/*GetCorporationCorporationIDMiningObserversObserverIDNotModified handles this case with default header values.

Not modified
*/
type GetCorporationCorporationIDMiningObserversObserverIDNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDNotModified) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/observers/{observer_id}/][%d] getCorporationCorporationIdMiningObserversObserverIdNotModified ", 304)
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationCorporationIDMiningObserversObserverIDBadRequest creates a GetCorporationCorporationIDMiningObserversObserverIDBadRequest with default headers values
func NewGetCorporationCorporationIDMiningObserversObserverIDBadRequest() *GetCorporationCorporationIDMiningObserversObserverIDBadRequest {
	return &GetCorporationCorporationIDMiningObserversObserverIDBadRequest{}
}

/*GetCorporationCorporationIDMiningObserversObserverIDBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationCorporationIDMiningObserversObserverIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/observers/{observer_id}/][%d] getCorporationCorporationIdMiningObserversObserverIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningObserversObserverIDUnauthorized creates a GetCorporationCorporationIDMiningObserversObserverIDUnauthorized with default headers values
func NewGetCorporationCorporationIDMiningObserversObserverIDUnauthorized() *GetCorporationCorporationIDMiningObserversObserverIDUnauthorized {
	return &GetCorporationCorporationIDMiningObserversObserverIDUnauthorized{}
}

/*GetCorporationCorporationIDMiningObserversObserverIDUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCorporationCorporationIDMiningObserversObserverIDUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/observers/{observer_id}/][%d] getCorporationCorporationIdMiningObserversObserverIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningObserversObserverIDForbidden creates a GetCorporationCorporationIDMiningObserversObserverIDForbidden with default headers values
func NewGetCorporationCorporationIDMiningObserversObserverIDForbidden() *GetCorporationCorporationIDMiningObserversObserverIDForbidden {
	return &GetCorporationCorporationIDMiningObserversObserverIDForbidden{}
}

/*GetCorporationCorporationIDMiningObserversObserverIDForbidden handles this case with default header values.

Forbidden
*/
type GetCorporationCorporationIDMiningObserversObserverIDForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDForbidden) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/observers/{observer_id}/][%d] getCorporationCorporationIdMiningObserversObserverIdForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningObserversObserverIDEnhanceYourCalm creates a GetCorporationCorporationIDMiningObserversObserverIDEnhanceYourCalm with default headers values
func NewGetCorporationCorporationIDMiningObserversObserverIDEnhanceYourCalm() *GetCorporationCorporationIDMiningObserversObserverIDEnhanceYourCalm {
	return &GetCorporationCorporationIDMiningObserversObserverIDEnhanceYourCalm{}
}

/*GetCorporationCorporationIDMiningObserversObserverIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationCorporationIDMiningObserversObserverIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/observers/{observer_id}/][%d] getCorporationCorporationIdMiningObserversObserverIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningObserversObserverIDInternalServerError creates a GetCorporationCorporationIDMiningObserversObserverIDInternalServerError with default headers values
func NewGetCorporationCorporationIDMiningObserversObserverIDInternalServerError() *GetCorporationCorporationIDMiningObserversObserverIDInternalServerError {
	return &GetCorporationCorporationIDMiningObserversObserverIDInternalServerError{}
}

/*GetCorporationCorporationIDMiningObserversObserverIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationCorporationIDMiningObserversObserverIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/observers/{observer_id}/][%d] getCorporationCorporationIdMiningObserversObserverIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningObserversObserverIDServiceUnavailable creates a GetCorporationCorporationIDMiningObserversObserverIDServiceUnavailable with default headers values
func NewGetCorporationCorporationIDMiningObserversObserverIDServiceUnavailable() *GetCorporationCorporationIDMiningObserversObserverIDServiceUnavailable {
	return &GetCorporationCorporationIDMiningObserversObserverIDServiceUnavailable{}
}

/*GetCorporationCorporationIDMiningObserversObserverIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationCorporationIDMiningObserversObserverIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/observers/{observer_id}/][%d] getCorporationCorporationIdMiningObserversObserverIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningObserversObserverIDGatewayTimeout creates a GetCorporationCorporationIDMiningObserversObserverIDGatewayTimeout with default headers values
func NewGetCorporationCorporationIDMiningObserversObserverIDGatewayTimeout() *GetCorporationCorporationIDMiningObserversObserverIDGatewayTimeout {
	return &GetCorporationCorporationIDMiningObserversObserverIDGatewayTimeout{}
}

/*GetCorporationCorporationIDMiningObserversObserverIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationCorporationIDMiningObserversObserverIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/observers/{observer_id}/][%d] getCorporationCorporationIdMiningObserversObserverIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationCorporationIDMiningObserversObserverIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
