// Code generated by go-swagger; DO NOT EDIT.

package industry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDMiningReader is a Reader for the GetCharactersCharacterIDMining structure.
type GetCharactersCharacterIDMiningReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDMiningReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDMiningOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDMiningNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDMiningBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDMiningUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDMiningForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDMiningEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDMiningInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDMiningServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDMiningGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDMiningOK creates a GetCharactersCharacterIDMiningOK with default headers values
func NewGetCharactersCharacterIDMiningOK() *GetCharactersCharacterIDMiningOK {
	return &GetCharactersCharacterIDMiningOK{
		XPages: 1,
	}
}

/*GetCharactersCharacterIDMiningOK handles this case with default header values.

Mining ledger of a character
*/
type GetCharactersCharacterIDMiningOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetCharactersCharacterIDMiningOKBodyItems
}

func (o *GetCharactersCharacterIDMiningOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mining/][%d] getCharactersCharacterIdMiningOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDMiningOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMiningNotModified creates a GetCharactersCharacterIDMiningNotModified with default headers values
func NewGetCharactersCharacterIDMiningNotModified() *GetCharactersCharacterIDMiningNotModified {
	return &GetCharactersCharacterIDMiningNotModified{}
}

/*GetCharactersCharacterIDMiningNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDMiningNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDMiningNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mining/][%d] getCharactersCharacterIdMiningNotModified ", 304)
}

func (o *GetCharactersCharacterIDMiningNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDMiningBadRequest creates a GetCharactersCharacterIDMiningBadRequest with default headers values
func NewGetCharactersCharacterIDMiningBadRequest() *GetCharactersCharacterIDMiningBadRequest {
	return &GetCharactersCharacterIDMiningBadRequest{}
}

/*GetCharactersCharacterIDMiningBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDMiningBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDMiningBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mining/][%d] getCharactersCharacterIdMiningBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDMiningBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMiningUnauthorized creates a GetCharactersCharacterIDMiningUnauthorized with default headers values
func NewGetCharactersCharacterIDMiningUnauthorized() *GetCharactersCharacterIDMiningUnauthorized {
	return &GetCharactersCharacterIDMiningUnauthorized{}
}

/*GetCharactersCharacterIDMiningUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDMiningUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDMiningUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mining/][%d] getCharactersCharacterIdMiningUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDMiningUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMiningForbidden creates a GetCharactersCharacterIDMiningForbidden with default headers values
func NewGetCharactersCharacterIDMiningForbidden() *GetCharactersCharacterIDMiningForbidden {
	return &GetCharactersCharacterIDMiningForbidden{}
}

/*GetCharactersCharacterIDMiningForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDMiningForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDMiningForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mining/][%d] getCharactersCharacterIdMiningForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDMiningForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMiningEnhanceYourCalm creates a GetCharactersCharacterIDMiningEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDMiningEnhanceYourCalm() *GetCharactersCharacterIDMiningEnhanceYourCalm {
	return &GetCharactersCharacterIDMiningEnhanceYourCalm{}
}

/*GetCharactersCharacterIDMiningEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDMiningEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDMiningEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mining/][%d] getCharactersCharacterIdMiningEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDMiningEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMiningInternalServerError creates a GetCharactersCharacterIDMiningInternalServerError with default headers values
func NewGetCharactersCharacterIDMiningInternalServerError() *GetCharactersCharacterIDMiningInternalServerError {
	return &GetCharactersCharacterIDMiningInternalServerError{}
}

/*GetCharactersCharacterIDMiningInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDMiningInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDMiningInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mining/][%d] getCharactersCharacterIdMiningInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDMiningInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMiningServiceUnavailable creates a GetCharactersCharacterIDMiningServiceUnavailable with default headers values
func NewGetCharactersCharacterIDMiningServiceUnavailable() *GetCharactersCharacterIDMiningServiceUnavailable {
	return &GetCharactersCharacterIDMiningServiceUnavailable{}
}

/*GetCharactersCharacterIDMiningServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDMiningServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDMiningServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mining/][%d] getCharactersCharacterIdMiningServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDMiningServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMiningGatewayTimeout creates a GetCharactersCharacterIDMiningGatewayTimeout with default headers values
func NewGetCharactersCharacterIDMiningGatewayTimeout() *GetCharactersCharacterIDMiningGatewayTimeout {
	return &GetCharactersCharacterIDMiningGatewayTimeout{}
}

/*GetCharactersCharacterIDMiningGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDMiningGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDMiningGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mining/][%d] getCharactersCharacterIdMiningGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDMiningGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
