// Code generated by go-swagger; DO NOT EDIT.

package industry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetIndustryFacilitiesReader is a Reader for the GetIndustryFacilities structure.
type GetIndustryFacilitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIndustryFacilitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetIndustryFacilitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetIndustryFacilitiesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIndustryFacilitiesOK creates a GetIndustryFacilitiesOK with default headers values
func NewGetIndustryFacilitiesOK() *GetIndustryFacilitiesOK {
	return &GetIndustryFacilitiesOK{}
}

/*GetIndustryFacilitiesOK handles this case with default header values.

A list of prices
*/
type GetIndustryFacilitiesOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetIndustryFacilitiesOKBodyItems0
}

func (o *GetIndustryFacilitiesOK) Error() string {
	return fmt.Sprintf("[GET /industry/facilities/][%d] getIndustryFacilitiesOK  %+v", 200, o.Payload)
}

func (o *GetIndustryFacilitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIndustryFacilitiesInternalServerError creates a GetIndustryFacilitiesInternalServerError with default headers values
func NewGetIndustryFacilitiesInternalServerError() *GetIndustryFacilitiesInternalServerError {
	return &GetIndustryFacilitiesInternalServerError{}
}

/*GetIndustryFacilitiesInternalServerError handles this case with default header values.

Internal server error
*/
type GetIndustryFacilitiesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetIndustryFacilitiesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /industry/facilities/][%d] getIndustryFacilitiesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIndustryFacilitiesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetIndustryFacilitiesOKBodyItems0 get_industry_facilities_200_ok
//
// 200 ok object
swagger:model GetIndustryFacilitiesOKBodyItems0
*/

type GetIndustryFacilitiesOKBodyItems0 struct {

	// get_industry_facilities_facility_id
	//
	// ID of the facility
	// Required: true
	FacilityID *int64 `json:"facility_id"`

	// get_industry_facilities_owner_id
	//
	// Owner of the facility
	// Required: true
	OwnerID *int32 `json:"owner_id"`

	// get_industry_facilities_region_id
	//
	// Region ID where the facility is
	// Required: true
	RegionID *int32 `json:"region_id"`

	// get_industry_facilities_solar_system_id
	//
	// Solar system ID where the facility is
	// Required: true
	SolarSystemID *int32 `json:"solar_system_id"`

	// get_industry_facilities_tax
	//
	// Tax imposed by the facility
	Tax float32 `json:"tax,omitempty"`

	// get_industry_facilities_type_id
	//
	// Type ID of the facility
	// Required: true
	TypeID *int32 `json:"type_id"`
}

/* polymorph GetIndustryFacilitiesOKBodyItems0 facility_id false */

/* polymorph GetIndustryFacilitiesOKBodyItems0 owner_id false */

/* polymorph GetIndustryFacilitiesOKBodyItems0 region_id false */

/* polymorph GetIndustryFacilitiesOKBodyItems0 solar_system_id false */

/* polymorph GetIndustryFacilitiesOKBodyItems0 tax false */

/* polymorph GetIndustryFacilitiesOKBodyItems0 type_id false */

// Validate validates this get industry facilities o k body items0
func (o *GetIndustryFacilitiesOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFacilityID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateOwnerID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateRegionID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateSolarSystemID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIndustryFacilitiesOKBodyItems0) validateFacilityID(formats strfmt.Registry) error {

	if err := validate.Required("facility_id", "body", o.FacilityID); err != nil {
		return err
	}

	return nil
}

func (o *GetIndustryFacilitiesOKBodyItems0) validateOwnerID(formats strfmt.Registry) error {

	if err := validate.Required("owner_id", "body", o.OwnerID); err != nil {
		return err
	}

	return nil
}

func (o *GetIndustryFacilitiesOKBodyItems0) validateRegionID(formats strfmt.Registry) error {

	if err := validate.Required("region_id", "body", o.RegionID); err != nil {
		return err
	}

	return nil
}

func (o *GetIndustryFacilitiesOKBodyItems0) validateSolarSystemID(formats strfmt.Registry) error {

	if err := validate.Required("solar_system_id", "body", o.SolarSystemID); err != nil {
		return err
	}

	return nil
}

func (o *GetIndustryFacilitiesOKBodyItems0) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIndustryFacilitiesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIndustryFacilitiesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetIndustryFacilitiesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
