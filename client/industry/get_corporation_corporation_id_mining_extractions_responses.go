// Code generated by go-swagger; DO NOT EDIT.

package industry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationCorporationIDMiningExtractionsReader is a Reader for the GetCorporationCorporationIDMiningExtractions structure.
type GetCorporationCorporationIDMiningExtractionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationCorporationIDMiningExtractionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationCorporationIDMiningExtractionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationCorporationIDMiningExtractionsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationCorporationIDMiningExtractionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCorporationCorporationIDMiningExtractionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCorporationCorporationIDMiningExtractionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationCorporationIDMiningExtractionsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationCorporationIDMiningExtractionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationCorporationIDMiningExtractionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationCorporationIDMiningExtractionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationCorporationIDMiningExtractionsOK creates a GetCorporationCorporationIDMiningExtractionsOK with default headers values
func NewGetCorporationCorporationIDMiningExtractionsOK() *GetCorporationCorporationIDMiningExtractionsOK {
	return &GetCorporationCorporationIDMiningExtractionsOK{
		XPages: 1,
	}
}

/*GetCorporationCorporationIDMiningExtractionsOK handles this case with default header values.

A list of chunk timers
*/
type GetCorporationCorporationIDMiningExtractionsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetCorporationCorporationIDMiningExtractionsOKBodyItems
}

func (o *GetCorporationCorporationIDMiningExtractionsOK) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsOK  %+v", 200, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsNotModified creates a GetCorporationCorporationIDMiningExtractionsNotModified with default headers values
func NewGetCorporationCorporationIDMiningExtractionsNotModified() *GetCorporationCorporationIDMiningExtractionsNotModified {
	return &GetCorporationCorporationIDMiningExtractionsNotModified{}
}

/*GetCorporationCorporationIDMiningExtractionsNotModified handles this case with default header values.

Not modified
*/
type GetCorporationCorporationIDMiningExtractionsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationCorporationIDMiningExtractionsNotModified) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsNotModified ", 304)
}

func (o *GetCorporationCorporationIDMiningExtractionsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsBadRequest creates a GetCorporationCorporationIDMiningExtractionsBadRequest with default headers values
func NewGetCorporationCorporationIDMiningExtractionsBadRequest() *GetCorporationCorporationIDMiningExtractionsBadRequest {
	return &GetCorporationCorporationIDMiningExtractionsBadRequest{}
}

/*GetCorporationCorporationIDMiningExtractionsBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationCorporationIDMiningExtractionsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsUnauthorized creates a GetCorporationCorporationIDMiningExtractionsUnauthorized with default headers values
func NewGetCorporationCorporationIDMiningExtractionsUnauthorized() *GetCorporationCorporationIDMiningExtractionsUnauthorized {
	return &GetCorporationCorporationIDMiningExtractionsUnauthorized{}
}

/*GetCorporationCorporationIDMiningExtractionsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCorporationCorporationIDMiningExtractionsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsForbidden creates a GetCorporationCorporationIDMiningExtractionsForbidden with default headers values
func NewGetCorporationCorporationIDMiningExtractionsForbidden() *GetCorporationCorporationIDMiningExtractionsForbidden {
	return &GetCorporationCorporationIDMiningExtractionsForbidden{}
}

/*GetCorporationCorporationIDMiningExtractionsForbidden handles this case with default header values.

Forbidden
*/
type GetCorporationCorporationIDMiningExtractionsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationCorporationIDMiningExtractionsForbidden) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsEnhanceYourCalm creates a GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm with default headers values
func NewGetCorporationCorporationIDMiningExtractionsEnhanceYourCalm() *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm {
	return &GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm{}
}

/*GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsInternalServerError creates a GetCorporationCorporationIDMiningExtractionsInternalServerError with default headers values
func NewGetCorporationCorporationIDMiningExtractionsInternalServerError() *GetCorporationCorporationIDMiningExtractionsInternalServerError {
	return &GetCorporationCorporationIDMiningExtractionsInternalServerError{}
}

/*GetCorporationCorporationIDMiningExtractionsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationCorporationIDMiningExtractionsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsServiceUnavailable creates a GetCorporationCorporationIDMiningExtractionsServiceUnavailable with default headers values
func NewGetCorporationCorporationIDMiningExtractionsServiceUnavailable() *GetCorporationCorporationIDMiningExtractionsServiceUnavailable {
	return &GetCorporationCorporationIDMiningExtractionsServiceUnavailable{}
}

/*GetCorporationCorporationIDMiningExtractionsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationCorporationIDMiningExtractionsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationCorporationIDMiningExtractionsGatewayTimeout creates a GetCorporationCorporationIDMiningExtractionsGatewayTimeout with default headers values
func NewGetCorporationCorporationIDMiningExtractionsGatewayTimeout() *GetCorporationCorporationIDMiningExtractionsGatewayTimeout {
	return &GetCorporationCorporationIDMiningExtractionsGatewayTimeout{}
}

/*GetCorporationCorporationIDMiningExtractionsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationCorporationIDMiningExtractionsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporation/{corporation_id}/mining/extractions/][%d] getCorporationCorporationIdMiningExtractionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationCorporationIDMiningExtractionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
