package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/esiswagger/client/alliance"
	"github.com/evecentral/esiapi/esiswagger/client/bookmarks"
	"github.com/evecentral/esiapi/esiswagger/client/calendar"
	"github.com/evecentral/esiapi/esiswagger/client/character"
	"github.com/evecentral/esiapi/esiswagger/client/clones"
	"github.com/evecentral/esiapi/esiswagger/client/corporation"
	"github.com/evecentral/esiapi/esiswagger/client/dummy"
	"github.com/evecentral/esiapi/esiswagger/client/incursions"
	"github.com/evecentral/esiapi/esiswagger/client/killmails"
	"github.com/evecentral/esiapi/esiswagger/client/live"
	"github.com/evecentral/esiapi/esiswagger/client/location"
	"github.com/evecentral/esiapi/esiswagger/client/mail"
	"github.com/evecentral/esiapi/esiswagger/client/market"
	"github.com/evecentral/esiapi/esiswagger/client/search"
	"github.com/evecentral/esiapi/esiswagger/client/skills"
	"github.com/evecentral/esiapi/esiswagger/client/sovereignty"
	"github.com/evecentral/esiapi/esiswagger/client/universe"
	"github.com/evecentral/esiapi/esiswagger/client/wallet"
)

// Default e v e swagger interface HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new e v e swagger interface HTTP client.
func NewHTTPClient(formats strfmt.Registry) *EVESwaggerInterface {
	if formats == nil {
		formats = strfmt.Default
	}
	transport := httptransport.New("esi.tech.ccp.is", "/latest", []string{"https"})
	return New(transport, formats)
}

// New creates a new e v e swagger interface client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *EVESwaggerInterface {
	cli := new(EVESwaggerInterface)
	cli.Transport = transport

	cli.Alliance = alliance.New(transport, formats)

	cli.Bookmarks = bookmarks.New(transport, formats)

	cli.Calendar = calendar.New(transport, formats)

	cli.Character = character.New(transport, formats)

	cli.Clones = clones.New(transport, formats)

	cli.Corporation = corporation.New(transport, formats)

	cli.Dummy = dummy.New(transport, formats)

	cli.Incursions = incursions.New(transport, formats)

	cli.Killmails = killmails.New(transport, formats)

	cli.Live = live.New(transport, formats)

	cli.Location = location.New(transport, formats)

	cli.Mail = mail.New(transport, formats)

	cli.Market = market.New(transport, formats)

	cli.Search = search.New(transport, formats)

	cli.Skills = skills.New(transport, formats)

	cli.Sovereignty = sovereignty.New(transport, formats)

	cli.Universe = universe.New(transport, formats)

	cli.Wallet = wallet.New(transport, formats)

	return cli
}

// EVESwaggerInterface is a client for e v e swagger interface
type EVESwaggerInterface struct {
	Alliance *alliance.Client

	Bookmarks *bookmarks.Client

	Calendar *calendar.Client

	Character *character.Client

	Clones *clones.Client

	Corporation *corporation.Client

	Dummy *dummy.Client

	Incursions *incursions.Client

	Killmails *killmails.Client

	Live *live.Client

	Location *location.Client

	Mail *mail.Client

	Market *market.Client

	Search *search.Client

	Skills *skills.Client

	Sovereignty *sovereignty.Client

	Universe *universe.Client

	Wallet *wallet.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *EVESwaggerInterface) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Alliance.SetTransport(transport)

	c.Bookmarks.SetTransport(transport)

	c.Calendar.SetTransport(transport)

	c.Character.SetTransport(transport)

	c.Clones.SetTransport(transport)

	c.Corporation.SetTransport(transport)

	c.Dummy.SetTransport(transport)

	c.Incursions.SetTransport(transport)

	c.Killmails.SetTransport(transport)

	c.Live.SetTransport(transport)

	c.Location.SetTransport(transport)

	c.Mail.SetTransport(transport)

	c.Market.SetTransport(transport)

	c.Search.SetTransport(transport)

	c.Skills.SetTransport(transport)

	c.Sovereignty.SetTransport(transport)

	c.Universe.SetTransport(transport)

	c.Wallet.SetTransport(transport)

}
