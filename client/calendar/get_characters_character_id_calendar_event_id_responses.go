// Code generated by go-swagger; DO NOT EDIT.

package calendar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDCalendarEventIDReader is a Reader for the GetCharactersCharacterIDCalendarEventID structure.
type GetCharactersCharacterIDCalendarEventIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDCalendarEventIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDCalendarEventIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDCalendarEventIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDCalendarEventIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDCalendarEventIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDCalendarEventIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCharactersCharacterIDCalendarEventIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDCalendarEventIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDCalendarEventIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDCalendarEventIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDCalendarEventIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDCalendarEventIDOK creates a GetCharactersCharacterIDCalendarEventIDOK with default headers values
func NewGetCharactersCharacterIDCalendarEventIDOK() *GetCharactersCharacterIDCalendarEventIDOK {
	return &GetCharactersCharacterIDCalendarEventIDOK{}
}

/*GetCharactersCharacterIDCalendarEventIDOK handles this case with default header values.

Full details of a specific event
*/
type GetCharactersCharacterIDCalendarEventIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetCharactersCharacterIDCalendarEventIDOKBody
}

func (o *GetCharactersCharacterIDCalendarEventIDOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetCharactersCharacterIDCalendarEventIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDNotModified creates a GetCharactersCharacterIDCalendarEventIDNotModified with default headers values
func NewGetCharactersCharacterIDCalendarEventIDNotModified() *GetCharactersCharacterIDCalendarEventIDNotModified {
	return &GetCharactersCharacterIDCalendarEventIDNotModified{}
}

/*GetCharactersCharacterIDCalendarEventIDNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDCalendarEventIDNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDCalendarEventIDNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdNotModified ", 304)
}

func (o *GetCharactersCharacterIDCalendarEventIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDBadRequest creates a GetCharactersCharacterIDCalendarEventIDBadRequest with default headers values
func NewGetCharactersCharacterIDCalendarEventIDBadRequest() *GetCharactersCharacterIDCalendarEventIDBadRequest {
	return &GetCharactersCharacterIDCalendarEventIDBadRequest{}
}

/*GetCharactersCharacterIDCalendarEventIDBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDCalendarEventIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDCalendarEventIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDUnauthorized creates a GetCharactersCharacterIDCalendarEventIDUnauthorized with default headers values
func NewGetCharactersCharacterIDCalendarEventIDUnauthorized() *GetCharactersCharacterIDCalendarEventIDUnauthorized {
	return &GetCharactersCharacterIDCalendarEventIDUnauthorized{}
}

/*GetCharactersCharacterIDCalendarEventIDUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDCalendarEventIDUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDCalendarEventIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDForbidden creates a GetCharactersCharacterIDCalendarEventIDForbidden with default headers values
func NewGetCharactersCharacterIDCalendarEventIDForbidden() *GetCharactersCharacterIDCalendarEventIDForbidden {
	return &GetCharactersCharacterIDCalendarEventIDForbidden{}
}

/*GetCharactersCharacterIDCalendarEventIDForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDCalendarEventIDForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDCalendarEventIDForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDNotFound creates a GetCharactersCharacterIDCalendarEventIDNotFound with default headers values
func NewGetCharactersCharacterIDCalendarEventIDNotFound() *GetCharactersCharacterIDCalendarEventIDNotFound {
	return &GetCharactersCharacterIDCalendarEventIDNotFound{}
}

/*GetCharactersCharacterIDCalendarEventIDNotFound handles this case with default header values.

Not found
*/
type GetCharactersCharacterIDCalendarEventIDNotFound struct {
	Payload *models.GetCharactersCharacterIDCalendarEventIDNotFoundBody
}

func (o *GetCharactersCharacterIDCalendarEventIDNotFound) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdNotFound  %+v", 404, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetCharactersCharacterIDCalendarEventIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDEnhanceYourCalm creates a GetCharactersCharacterIDCalendarEventIDEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDCalendarEventIDEnhanceYourCalm() *GetCharactersCharacterIDCalendarEventIDEnhanceYourCalm {
	return &GetCharactersCharacterIDCalendarEventIDEnhanceYourCalm{}
}

/*GetCharactersCharacterIDCalendarEventIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDCalendarEventIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDCalendarEventIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDInternalServerError creates a GetCharactersCharacterIDCalendarEventIDInternalServerError with default headers values
func NewGetCharactersCharacterIDCalendarEventIDInternalServerError() *GetCharactersCharacterIDCalendarEventIDInternalServerError {
	return &GetCharactersCharacterIDCalendarEventIDInternalServerError{}
}

/*GetCharactersCharacterIDCalendarEventIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDCalendarEventIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDCalendarEventIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDServiceUnavailable creates a GetCharactersCharacterIDCalendarEventIDServiceUnavailable with default headers values
func NewGetCharactersCharacterIDCalendarEventIDServiceUnavailable() *GetCharactersCharacterIDCalendarEventIDServiceUnavailable {
	return &GetCharactersCharacterIDCalendarEventIDServiceUnavailable{}
}

/*GetCharactersCharacterIDCalendarEventIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDCalendarEventIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDCalendarEventIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEventIDGatewayTimeout creates a GetCharactersCharacterIDCalendarEventIDGatewayTimeout with default headers values
func NewGetCharactersCharacterIDCalendarEventIDGatewayTimeout() *GetCharactersCharacterIDCalendarEventIDGatewayTimeout {
	return &GetCharactersCharacterIDCalendarEventIDGatewayTimeout{}
}

/*GetCharactersCharacterIDCalendarEventIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDCalendarEventIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDCalendarEventIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/{event_id}/][%d] getCharactersCharacterIdCalendarEventIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEventIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
