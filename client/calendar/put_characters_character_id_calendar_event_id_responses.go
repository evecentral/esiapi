// Code generated by go-swagger; DO NOT EDIT.

package calendar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// PutCharactersCharacterIDCalendarEventIDReader is a Reader for the PutCharactersCharacterIDCalendarEventID structure.
type PutCharactersCharacterIDCalendarEventIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutCharactersCharacterIDCalendarEventIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPutCharactersCharacterIDCalendarEventIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutCharactersCharacterIDCalendarEventIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutCharactersCharacterIDCalendarEventIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutCharactersCharacterIDCalendarEventIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewPutCharactersCharacterIDCalendarEventIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutCharactersCharacterIDCalendarEventIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewPutCharactersCharacterIDCalendarEventIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewPutCharactersCharacterIDCalendarEventIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutCharactersCharacterIDCalendarEventIDNoContent creates a PutCharactersCharacterIDCalendarEventIDNoContent with default headers values
func NewPutCharactersCharacterIDCalendarEventIDNoContent() *PutCharactersCharacterIDCalendarEventIDNoContent {
	return &PutCharactersCharacterIDCalendarEventIDNoContent{}
}

/*PutCharactersCharacterIDCalendarEventIDNoContent handles this case with default header values.

Event updated
*/
type PutCharactersCharacterIDCalendarEventIDNoContent struct {
}

func (o *PutCharactersCharacterIDCalendarEventIDNoContent) Error() string {
	return fmt.Sprintf("[PUT /characters/{character_id}/calendar/{event_id}/][%d] putCharactersCharacterIdCalendarEventIdNoContent ", 204)
}

func (o *PutCharactersCharacterIDCalendarEventIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutCharactersCharacterIDCalendarEventIDBadRequest creates a PutCharactersCharacterIDCalendarEventIDBadRequest with default headers values
func NewPutCharactersCharacterIDCalendarEventIDBadRequest() *PutCharactersCharacterIDCalendarEventIDBadRequest {
	return &PutCharactersCharacterIDCalendarEventIDBadRequest{}
}

/*PutCharactersCharacterIDCalendarEventIDBadRequest handles this case with default header values.

Bad request
*/
type PutCharactersCharacterIDCalendarEventIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *PutCharactersCharacterIDCalendarEventIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /characters/{character_id}/calendar/{event_id}/][%d] putCharactersCharacterIdCalendarEventIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutCharactersCharacterIDCalendarEventIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDCalendarEventIDUnauthorized creates a PutCharactersCharacterIDCalendarEventIDUnauthorized with default headers values
func NewPutCharactersCharacterIDCalendarEventIDUnauthorized() *PutCharactersCharacterIDCalendarEventIDUnauthorized {
	return &PutCharactersCharacterIDCalendarEventIDUnauthorized{}
}

/*PutCharactersCharacterIDCalendarEventIDUnauthorized handles this case with default header values.

Unauthorized
*/
type PutCharactersCharacterIDCalendarEventIDUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *PutCharactersCharacterIDCalendarEventIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /characters/{character_id}/calendar/{event_id}/][%d] putCharactersCharacterIdCalendarEventIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutCharactersCharacterIDCalendarEventIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDCalendarEventIDForbidden creates a PutCharactersCharacterIDCalendarEventIDForbidden with default headers values
func NewPutCharactersCharacterIDCalendarEventIDForbidden() *PutCharactersCharacterIDCalendarEventIDForbidden {
	return &PutCharactersCharacterIDCalendarEventIDForbidden{}
}

/*PutCharactersCharacterIDCalendarEventIDForbidden handles this case with default header values.

Forbidden
*/
type PutCharactersCharacterIDCalendarEventIDForbidden struct {
	Payload *models.Forbidden
}

func (o *PutCharactersCharacterIDCalendarEventIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /characters/{character_id}/calendar/{event_id}/][%d] putCharactersCharacterIdCalendarEventIdForbidden  %+v", 403, o.Payload)
}

func (o *PutCharactersCharacterIDCalendarEventIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDCalendarEventIDEnhanceYourCalm creates a PutCharactersCharacterIDCalendarEventIDEnhanceYourCalm with default headers values
func NewPutCharactersCharacterIDCalendarEventIDEnhanceYourCalm() *PutCharactersCharacterIDCalendarEventIDEnhanceYourCalm {
	return &PutCharactersCharacterIDCalendarEventIDEnhanceYourCalm{}
}

/*PutCharactersCharacterIDCalendarEventIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type PutCharactersCharacterIDCalendarEventIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *PutCharactersCharacterIDCalendarEventIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[PUT /characters/{character_id}/calendar/{event_id}/][%d] putCharactersCharacterIdCalendarEventIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *PutCharactersCharacterIDCalendarEventIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDCalendarEventIDInternalServerError creates a PutCharactersCharacterIDCalendarEventIDInternalServerError with default headers values
func NewPutCharactersCharacterIDCalendarEventIDInternalServerError() *PutCharactersCharacterIDCalendarEventIDInternalServerError {
	return &PutCharactersCharacterIDCalendarEventIDInternalServerError{}
}

/*PutCharactersCharacterIDCalendarEventIDInternalServerError handles this case with default header values.

Internal server error
*/
type PutCharactersCharacterIDCalendarEventIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *PutCharactersCharacterIDCalendarEventIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /characters/{character_id}/calendar/{event_id}/][%d] putCharactersCharacterIdCalendarEventIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutCharactersCharacterIDCalendarEventIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDCalendarEventIDServiceUnavailable creates a PutCharactersCharacterIDCalendarEventIDServiceUnavailable with default headers values
func NewPutCharactersCharacterIDCalendarEventIDServiceUnavailable() *PutCharactersCharacterIDCalendarEventIDServiceUnavailable {
	return &PutCharactersCharacterIDCalendarEventIDServiceUnavailable{}
}

/*PutCharactersCharacterIDCalendarEventIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type PutCharactersCharacterIDCalendarEventIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *PutCharactersCharacterIDCalendarEventIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /characters/{character_id}/calendar/{event_id}/][%d] putCharactersCharacterIdCalendarEventIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PutCharactersCharacterIDCalendarEventIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCharactersCharacterIDCalendarEventIDGatewayTimeout creates a PutCharactersCharacterIDCalendarEventIDGatewayTimeout with default headers values
func NewPutCharactersCharacterIDCalendarEventIDGatewayTimeout() *PutCharactersCharacterIDCalendarEventIDGatewayTimeout {
	return &PutCharactersCharacterIDCalendarEventIDGatewayTimeout{}
}

/*PutCharactersCharacterIDCalendarEventIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type PutCharactersCharacterIDCalendarEventIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *PutCharactersCharacterIDCalendarEventIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /characters/{character_id}/calendar/{event_id}/][%d] putCharactersCharacterIdCalendarEventIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PutCharactersCharacterIDCalendarEventIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
