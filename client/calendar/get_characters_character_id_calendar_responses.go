// Code generated by go-swagger; DO NOT EDIT.

package calendar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDCalendarReader is a Reader for the GetCharactersCharacterIDCalendar structure.
type GetCharactersCharacterIDCalendarReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDCalendarReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDCalendarOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDCalendarNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDCalendarBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDCalendarUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDCalendarForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDCalendarEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDCalendarInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDCalendarServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDCalendarGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDCalendarOK creates a GetCharactersCharacterIDCalendarOK with default headers values
func NewGetCharactersCharacterIDCalendarOK() *GetCharactersCharacterIDCalendarOK {
	return &GetCharactersCharacterIDCalendarOK{}
}

/*GetCharactersCharacterIDCalendarOK handles this case with default header values.

A collection of event summaries
*/
type GetCharactersCharacterIDCalendarOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetCharactersCharacterIDCalendarOKBodyItems
}

func (o *GetCharactersCharacterIDCalendarOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarNotModified creates a GetCharactersCharacterIDCalendarNotModified with default headers values
func NewGetCharactersCharacterIDCalendarNotModified() *GetCharactersCharacterIDCalendarNotModified {
	return &GetCharactersCharacterIDCalendarNotModified{}
}

/*GetCharactersCharacterIDCalendarNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDCalendarNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDCalendarNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarNotModified ", 304)
}

func (o *GetCharactersCharacterIDCalendarNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDCalendarBadRequest creates a GetCharactersCharacterIDCalendarBadRequest with default headers values
func NewGetCharactersCharacterIDCalendarBadRequest() *GetCharactersCharacterIDCalendarBadRequest {
	return &GetCharactersCharacterIDCalendarBadRequest{}
}

/*GetCharactersCharacterIDCalendarBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDCalendarBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDCalendarBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarUnauthorized creates a GetCharactersCharacterIDCalendarUnauthorized with default headers values
func NewGetCharactersCharacterIDCalendarUnauthorized() *GetCharactersCharacterIDCalendarUnauthorized {
	return &GetCharactersCharacterIDCalendarUnauthorized{}
}

/*GetCharactersCharacterIDCalendarUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDCalendarUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDCalendarUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarForbidden creates a GetCharactersCharacterIDCalendarForbidden with default headers values
func NewGetCharactersCharacterIDCalendarForbidden() *GetCharactersCharacterIDCalendarForbidden {
	return &GetCharactersCharacterIDCalendarForbidden{}
}

/*GetCharactersCharacterIDCalendarForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDCalendarForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDCalendarForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarEnhanceYourCalm creates a GetCharactersCharacterIDCalendarEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDCalendarEnhanceYourCalm() *GetCharactersCharacterIDCalendarEnhanceYourCalm {
	return &GetCharactersCharacterIDCalendarEnhanceYourCalm{}
}

/*GetCharactersCharacterIDCalendarEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDCalendarEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDCalendarEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarInternalServerError creates a GetCharactersCharacterIDCalendarInternalServerError with default headers values
func NewGetCharactersCharacterIDCalendarInternalServerError() *GetCharactersCharacterIDCalendarInternalServerError {
	return &GetCharactersCharacterIDCalendarInternalServerError{}
}

/*GetCharactersCharacterIDCalendarInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDCalendarInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDCalendarInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarServiceUnavailable creates a GetCharactersCharacterIDCalendarServiceUnavailable with default headers values
func NewGetCharactersCharacterIDCalendarServiceUnavailable() *GetCharactersCharacterIDCalendarServiceUnavailable {
	return &GetCharactersCharacterIDCalendarServiceUnavailable{}
}

/*GetCharactersCharacterIDCalendarServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDCalendarServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDCalendarServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCalendarGatewayTimeout creates a GetCharactersCharacterIDCalendarGatewayTimeout with default headers values
func NewGetCharactersCharacterIDCalendarGatewayTimeout() *GetCharactersCharacterIDCalendarGatewayTimeout {
	return &GetCharactersCharacterIDCalendarGatewayTimeout{}
}

/*GetCharactersCharacterIDCalendarGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDCalendarGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDCalendarGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/calendar/][%d] getCharactersCharacterIdCalendarGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDCalendarGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
