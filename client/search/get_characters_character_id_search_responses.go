// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDSearchReader is a Reader for the GetCharactersCharacterIDSearch structure.
type GetCharactersCharacterIDSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDSearchNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDSearchEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDSearchServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDSearchGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDSearchOK creates a GetCharactersCharacterIDSearchOK with default headers values
func NewGetCharactersCharacterIDSearchOK() *GetCharactersCharacterIDSearchOK {
	return &GetCharactersCharacterIDSearchOK{}
}

/*GetCharactersCharacterIDSearchOK handles this case with default header values.

A list of search results
*/
type GetCharactersCharacterIDSearchOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*The language used in the response
	 */
	ContentLanguage string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetCharactersCharacterIDSearchOKBody
}

func (o *GetCharactersCharacterIDSearchOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/search/][%d] getCharactersCharacterIdSearchOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Content-Language
	o.ContentLanguage = response.GetHeader("Content-Language")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetCharactersCharacterIDSearchOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchNotModified creates a GetCharactersCharacterIDSearchNotModified with default headers values
func NewGetCharactersCharacterIDSearchNotModified() *GetCharactersCharacterIDSearchNotModified {
	return &GetCharactersCharacterIDSearchNotModified{}
}

/*GetCharactersCharacterIDSearchNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDSearchNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDSearchNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/search/][%d] getCharactersCharacterIdSearchNotModified ", 304)
}

func (o *GetCharactersCharacterIDSearchNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDSearchBadRequest creates a GetCharactersCharacterIDSearchBadRequest with default headers values
func NewGetCharactersCharacterIDSearchBadRequest() *GetCharactersCharacterIDSearchBadRequest {
	return &GetCharactersCharacterIDSearchBadRequest{}
}

/*GetCharactersCharacterIDSearchBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDSearchBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDSearchBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/search/][%d] getCharactersCharacterIdSearchBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchUnauthorized creates a GetCharactersCharacterIDSearchUnauthorized with default headers values
func NewGetCharactersCharacterIDSearchUnauthorized() *GetCharactersCharacterIDSearchUnauthorized {
	return &GetCharactersCharacterIDSearchUnauthorized{}
}

/*GetCharactersCharacterIDSearchUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDSearchUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDSearchUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/search/][%d] getCharactersCharacterIdSearchUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDSearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchForbidden creates a GetCharactersCharacterIDSearchForbidden with default headers values
func NewGetCharactersCharacterIDSearchForbidden() *GetCharactersCharacterIDSearchForbidden {
	return &GetCharactersCharacterIDSearchForbidden{}
}

/*GetCharactersCharacterIDSearchForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDSearchForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDSearchForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/search/][%d] getCharactersCharacterIdSearchForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchEnhanceYourCalm creates a GetCharactersCharacterIDSearchEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDSearchEnhanceYourCalm() *GetCharactersCharacterIDSearchEnhanceYourCalm {
	return &GetCharactersCharacterIDSearchEnhanceYourCalm{}
}

/*GetCharactersCharacterIDSearchEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDSearchEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/search/][%d] getCharactersCharacterIdSearchEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDSearchEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchInternalServerError creates a GetCharactersCharacterIDSearchInternalServerError with default headers values
func NewGetCharactersCharacterIDSearchInternalServerError() *GetCharactersCharacterIDSearchInternalServerError {
	return &GetCharactersCharacterIDSearchInternalServerError{}
}

/*GetCharactersCharacterIDSearchInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDSearchInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDSearchInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/search/][%d] getCharactersCharacterIdSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchServiceUnavailable creates a GetCharactersCharacterIDSearchServiceUnavailable with default headers values
func NewGetCharactersCharacterIDSearchServiceUnavailable() *GetCharactersCharacterIDSearchServiceUnavailable {
	return &GetCharactersCharacterIDSearchServiceUnavailable{}
}

/*GetCharactersCharacterIDSearchServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDSearchServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDSearchServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/search/][%d] getCharactersCharacterIdSearchServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDSearchServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDSearchGatewayTimeout creates a GetCharactersCharacterIDSearchGatewayTimeout with default headers values
func NewGetCharactersCharacterIDSearchGatewayTimeout() *GetCharactersCharacterIDSearchGatewayTimeout {
	return &GetCharactersCharacterIDSearchGatewayTimeout{}
}

/*GetCharactersCharacterIDSearchGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDSearchGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDSearchGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/search/][%d] getCharactersCharacterIdSearchGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDSearchGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
