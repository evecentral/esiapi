// Code generated by go-swagger; DO NOT EDIT.

package dogma

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetDogmaDynamicItemsTypeIDItemIDReader is a Reader for the GetDogmaDynamicItemsTypeIDItemID structure.
type GetDogmaDynamicItemsTypeIDItemIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDogmaDynamicItemsTypeIDItemIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDogmaDynamicItemsTypeIDItemIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetDogmaDynamicItemsTypeIDItemIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetDogmaDynamicItemsTypeIDItemIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDogmaDynamicItemsTypeIDItemIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetDogmaDynamicItemsTypeIDItemIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDogmaDynamicItemsTypeIDItemIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetDogmaDynamicItemsTypeIDItemIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetDogmaDynamicItemsTypeIDItemIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDogmaDynamicItemsTypeIDItemIDOK creates a GetDogmaDynamicItemsTypeIDItemIDOK with default headers values
func NewGetDogmaDynamicItemsTypeIDItemIDOK() *GetDogmaDynamicItemsTypeIDItemIDOK {
	return &GetDogmaDynamicItemsTypeIDItemIDOK{}
}

/*GetDogmaDynamicItemsTypeIDItemIDOK handles this case with default header values.

Details about a dynamic item
*/
type GetDogmaDynamicItemsTypeIDItemIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetDogmaDynamicItemsTypeIDItemIDOKBody
}

func (o *GetDogmaDynamicItemsTypeIDItemIDOK) Error() string {
	return fmt.Sprintf("[GET /dogma/dynamic/items/{type_id}/{item_id}/][%d] getDogmaDynamicItemsTypeIdItemIdOK  %+v", 200, o.Payload)
}

func (o *GetDogmaDynamicItemsTypeIDItemIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetDogmaDynamicItemsTypeIDItemIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDogmaDynamicItemsTypeIDItemIDNotModified creates a GetDogmaDynamicItemsTypeIDItemIDNotModified with default headers values
func NewGetDogmaDynamicItemsTypeIDItemIDNotModified() *GetDogmaDynamicItemsTypeIDItemIDNotModified {
	return &GetDogmaDynamicItemsTypeIDItemIDNotModified{}
}

/*GetDogmaDynamicItemsTypeIDItemIDNotModified handles this case with default header values.

Not modified
*/
type GetDogmaDynamicItemsTypeIDItemIDNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetDogmaDynamicItemsTypeIDItemIDNotModified) Error() string {
	return fmt.Sprintf("[GET /dogma/dynamic/items/{type_id}/{item_id}/][%d] getDogmaDynamicItemsTypeIdItemIdNotModified ", 304)
}

func (o *GetDogmaDynamicItemsTypeIDItemIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetDogmaDynamicItemsTypeIDItemIDBadRequest creates a GetDogmaDynamicItemsTypeIDItemIDBadRequest with default headers values
func NewGetDogmaDynamicItemsTypeIDItemIDBadRequest() *GetDogmaDynamicItemsTypeIDItemIDBadRequest {
	return &GetDogmaDynamicItemsTypeIDItemIDBadRequest{}
}

/*GetDogmaDynamicItemsTypeIDItemIDBadRequest handles this case with default header values.

Bad request
*/
type GetDogmaDynamicItemsTypeIDItemIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetDogmaDynamicItemsTypeIDItemIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /dogma/dynamic/items/{type_id}/{item_id}/][%d] getDogmaDynamicItemsTypeIdItemIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetDogmaDynamicItemsTypeIDItemIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDogmaDynamicItemsTypeIDItemIDNotFound creates a GetDogmaDynamicItemsTypeIDItemIDNotFound with default headers values
func NewGetDogmaDynamicItemsTypeIDItemIDNotFound() *GetDogmaDynamicItemsTypeIDItemIDNotFound {
	return &GetDogmaDynamicItemsTypeIDItemIDNotFound{}
}

/*GetDogmaDynamicItemsTypeIDItemIDNotFound handles this case with default header values.

Item not found
*/
type GetDogmaDynamicItemsTypeIDItemIDNotFound struct {
	Payload *models.GetDogmaDynamicItemsTypeIDItemIDNotFoundBody
}

func (o *GetDogmaDynamicItemsTypeIDItemIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dogma/dynamic/items/{type_id}/{item_id}/][%d] getDogmaDynamicItemsTypeIdItemIdNotFound  %+v", 404, o.Payload)
}

func (o *GetDogmaDynamicItemsTypeIDItemIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetDogmaDynamicItemsTypeIDItemIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDogmaDynamicItemsTypeIDItemIDEnhanceYourCalm creates a GetDogmaDynamicItemsTypeIDItemIDEnhanceYourCalm with default headers values
func NewGetDogmaDynamicItemsTypeIDItemIDEnhanceYourCalm() *GetDogmaDynamicItemsTypeIDItemIDEnhanceYourCalm {
	return &GetDogmaDynamicItemsTypeIDItemIDEnhanceYourCalm{}
}

/*GetDogmaDynamicItemsTypeIDItemIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetDogmaDynamicItemsTypeIDItemIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetDogmaDynamicItemsTypeIDItemIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /dogma/dynamic/items/{type_id}/{item_id}/][%d] getDogmaDynamicItemsTypeIdItemIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetDogmaDynamicItemsTypeIDItemIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDogmaDynamicItemsTypeIDItemIDInternalServerError creates a GetDogmaDynamicItemsTypeIDItemIDInternalServerError with default headers values
func NewGetDogmaDynamicItemsTypeIDItemIDInternalServerError() *GetDogmaDynamicItemsTypeIDItemIDInternalServerError {
	return &GetDogmaDynamicItemsTypeIDItemIDInternalServerError{}
}

/*GetDogmaDynamicItemsTypeIDItemIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetDogmaDynamicItemsTypeIDItemIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetDogmaDynamicItemsTypeIDItemIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dogma/dynamic/items/{type_id}/{item_id}/][%d] getDogmaDynamicItemsTypeIdItemIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDogmaDynamicItemsTypeIDItemIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDogmaDynamicItemsTypeIDItemIDServiceUnavailable creates a GetDogmaDynamicItemsTypeIDItemIDServiceUnavailable with default headers values
func NewGetDogmaDynamicItemsTypeIDItemIDServiceUnavailable() *GetDogmaDynamicItemsTypeIDItemIDServiceUnavailable {
	return &GetDogmaDynamicItemsTypeIDItemIDServiceUnavailable{}
}

/*GetDogmaDynamicItemsTypeIDItemIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetDogmaDynamicItemsTypeIDItemIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetDogmaDynamicItemsTypeIDItemIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /dogma/dynamic/items/{type_id}/{item_id}/][%d] getDogmaDynamicItemsTypeIdItemIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetDogmaDynamicItemsTypeIDItemIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDogmaDynamicItemsTypeIDItemIDGatewayTimeout creates a GetDogmaDynamicItemsTypeIDItemIDGatewayTimeout with default headers values
func NewGetDogmaDynamicItemsTypeIDItemIDGatewayTimeout() *GetDogmaDynamicItemsTypeIDItemIDGatewayTimeout {
	return &GetDogmaDynamicItemsTypeIDItemIDGatewayTimeout{}
}

/*GetDogmaDynamicItemsTypeIDItemIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetDogmaDynamicItemsTypeIDItemIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetDogmaDynamicItemsTypeIDItemIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /dogma/dynamic/items/{type_id}/{item_id}/][%d] getDogmaDynamicItemsTypeIdItemIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetDogmaDynamicItemsTypeIDItemIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
