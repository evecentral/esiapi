// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDNotificationsContactsReader is a Reader for the GetCharactersCharacterIDNotificationsContacts structure.
type GetCharactersCharacterIDNotificationsContactsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDNotificationsContactsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDNotificationsContactsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDNotificationsContactsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDNotificationsContactsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDNotificationsContactsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDNotificationsContactsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDNotificationsContactsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDNotificationsContactsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDNotificationsContactsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDNotificationsContactsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDNotificationsContactsOK creates a GetCharactersCharacterIDNotificationsContactsOK with default headers values
func NewGetCharactersCharacterIDNotificationsContactsOK() *GetCharactersCharacterIDNotificationsContactsOK {
	return &GetCharactersCharacterIDNotificationsContactsOK{}
}

/*GetCharactersCharacterIDNotificationsContactsOK handles this case with default header values.

A list of contact notifications
*/
type GetCharactersCharacterIDNotificationsContactsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetCharactersCharacterIDNotificationsContactsOKBodyItems
}

func (o *GetCharactersCharacterIDNotificationsContactsOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/contacts/][%d] getCharactersCharacterIdNotificationsContactsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsContactsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsContactsNotModified creates a GetCharactersCharacterIDNotificationsContactsNotModified with default headers values
func NewGetCharactersCharacterIDNotificationsContactsNotModified() *GetCharactersCharacterIDNotificationsContactsNotModified {
	return &GetCharactersCharacterIDNotificationsContactsNotModified{}
}

/*GetCharactersCharacterIDNotificationsContactsNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDNotificationsContactsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDNotificationsContactsNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/contacts/][%d] getCharactersCharacterIdNotificationsContactsNotModified ", 304)
}

func (o *GetCharactersCharacterIDNotificationsContactsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDNotificationsContactsBadRequest creates a GetCharactersCharacterIDNotificationsContactsBadRequest with default headers values
func NewGetCharactersCharacterIDNotificationsContactsBadRequest() *GetCharactersCharacterIDNotificationsContactsBadRequest {
	return &GetCharactersCharacterIDNotificationsContactsBadRequest{}
}

/*GetCharactersCharacterIDNotificationsContactsBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDNotificationsContactsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDNotificationsContactsBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/contacts/][%d] getCharactersCharacterIdNotificationsContactsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsContactsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsContactsUnauthorized creates a GetCharactersCharacterIDNotificationsContactsUnauthorized with default headers values
func NewGetCharactersCharacterIDNotificationsContactsUnauthorized() *GetCharactersCharacterIDNotificationsContactsUnauthorized {
	return &GetCharactersCharacterIDNotificationsContactsUnauthorized{}
}

/*GetCharactersCharacterIDNotificationsContactsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDNotificationsContactsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDNotificationsContactsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/contacts/][%d] getCharactersCharacterIdNotificationsContactsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsContactsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsContactsForbidden creates a GetCharactersCharacterIDNotificationsContactsForbidden with default headers values
func NewGetCharactersCharacterIDNotificationsContactsForbidden() *GetCharactersCharacterIDNotificationsContactsForbidden {
	return &GetCharactersCharacterIDNotificationsContactsForbidden{}
}

/*GetCharactersCharacterIDNotificationsContactsForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDNotificationsContactsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDNotificationsContactsForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/contacts/][%d] getCharactersCharacterIdNotificationsContactsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsContactsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsContactsEnhanceYourCalm creates a GetCharactersCharacterIDNotificationsContactsEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDNotificationsContactsEnhanceYourCalm() *GetCharactersCharacterIDNotificationsContactsEnhanceYourCalm {
	return &GetCharactersCharacterIDNotificationsContactsEnhanceYourCalm{}
}

/*GetCharactersCharacterIDNotificationsContactsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDNotificationsContactsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDNotificationsContactsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/contacts/][%d] getCharactersCharacterIdNotificationsContactsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsContactsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsContactsInternalServerError creates a GetCharactersCharacterIDNotificationsContactsInternalServerError with default headers values
func NewGetCharactersCharacterIDNotificationsContactsInternalServerError() *GetCharactersCharacterIDNotificationsContactsInternalServerError {
	return &GetCharactersCharacterIDNotificationsContactsInternalServerError{}
}

/*GetCharactersCharacterIDNotificationsContactsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDNotificationsContactsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDNotificationsContactsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/contacts/][%d] getCharactersCharacterIdNotificationsContactsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsContactsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsContactsServiceUnavailable creates a GetCharactersCharacterIDNotificationsContactsServiceUnavailable with default headers values
func NewGetCharactersCharacterIDNotificationsContactsServiceUnavailable() *GetCharactersCharacterIDNotificationsContactsServiceUnavailable {
	return &GetCharactersCharacterIDNotificationsContactsServiceUnavailable{}
}

/*GetCharactersCharacterIDNotificationsContactsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDNotificationsContactsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDNotificationsContactsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/contacts/][%d] getCharactersCharacterIdNotificationsContactsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsContactsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsContactsGatewayTimeout creates a GetCharactersCharacterIDNotificationsContactsGatewayTimeout with default headers values
func NewGetCharactersCharacterIDNotificationsContactsGatewayTimeout() *GetCharactersCharacterIDNotificationsContactsGatewayTimeout {
	return &GetCharactersCharacterIDNotificationsContactsGatewayTimeout{}
}

/*GetCharactersCharacterIDNotificationsContactsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDNotificationsContactsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDNotificationsContactsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/contacts/][%d] getCharactersCharacterIdNotificationsContactsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsContactsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
