// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDCorporationhistoryReader is a Reader for the GetCharactersCharacterIDCorporationhistory structure.
type GetCharactersCharacterIDCorporationhistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDCorporationhistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDCorporationhistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetCharactersCharacterIDCorporationhistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDCorporationhistoryOK creates a GetCharactersCharacterIDCorporationhistoryOK with default headers values
func NewGetCharactersCharacterIDCorporationhistoryOK() *GetCharactersCharacterIDCorporationhistoryOK {
	return &GetCharactersCharacterIDCorporationhistoryOK{}
}

/*GetCharactersCharacterIDCorporationhistoryOK handles this case with default header values.

Corporation history for the given character
*/
type GetCharactersCharacterIDCorporationhistoryOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetCharactersCharacterIDCorporationhistoryOKBodyItems0
}

func (o *GetCharactersCharacterIDCorporationhistoryOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/corporationhistory/][%d] getCharactersCharacterIdCorporationhistoryOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDCorporationhistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDCorporationhistoryInternalServerError creates a GetCharactersCharacterIDCorporationhistoryInternalServerError with default headers values
func NewGetCharactersCharacterIDCorporationhistoryInternalServerError() *GetCharactersCharacterIDCorporationhistoryInternalServerError {
	return &GetCharactersCharacterIDCorporationhistoryInternalServerError{}
}

/*GetCharactersCharacterIDCorporationhistoryInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDCorporationhistoryInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDCorporationhistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/corporationhistory/][%d] getCharactersCharacterIdCorporationhistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDCorporationhistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDCorporationhistoryOKBodyItems0 get_characters_character_id_corporationhistory_200_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDCorporationhistoryOKBodyItems0
*/

type GetCharactersCharacterIDCorporationhistoryOKBodyItems0 struct {

	// get_characters_character_id_corporationhistory_corporation_id
	//
	// corporation_id integer
	// Required: true
	CorporationID *int32 `json:"corporation_id"`

	// get_characters_character_id_corporationhistory_is_deleted
	//
	// True if the corporation has been deleted
	IsDeleted bool `json:"is_deleted,omitempty"`

	// get_characters_character_id_corporationhistory_record_id
	//
	// An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous
	// Required: true
	RecordID *int32 `json:"record_id"`

	// get_characters_character_id_corporationhistory_start_date
	//
	// start_date string
	// Required: true
	StartDate *strfmt.DateTime `json:"start_date"`
}

/* polymorph GetCharactersCharacterIDCorporationhistoryOKBodyItems0 corporation_id false */

/* polymorph GetCharactersCharacterIDCorporationhistoryOKBodyItems0 is_deleted false */

/* polymorph GetCharactersCharacterIDCorporationhistoryOKBodyItems0 record_id false */

/* polymorph GetCharactersCharacterIDCorporationhistoryOKBodyItems0 start_date false */

// Validate validates this get characters character ID corporationhistory o k body items0
func (o *GetCharactersCharacterIDCorporationhistoryOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCorporationID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateRecordID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateStartDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDCorporationhistoryOKBodyItems0) validateCorporationID(formats strfmt.Registry) error {

	if err := validate.Required("corporation_id", "body", o.CorporationID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDCorporationhistoryOKBodyItems0) validateRecordID(formats strfmt.Registry) error {

	if err := validate.Required("record_id", "body", o.RecordID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDCorporationhistoryOKBodyItems0) validateStartDate(formats strfmt.Registry) error {

	if err := validate.Required("start_date", "body", o.StartDate); err != nil {
		return err
	}

	if err := validate.FormatOf("start_date", "body", "date-time", o.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDCorporationhistoryOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDCorporationhistoryOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDCorporationhistoryOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
