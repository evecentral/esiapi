// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// PostCharactersCharacterIDCspaReader is a Reader for the PostCharactersCharacterIDCspa structure.
type PostCharactersCharacterIDCspaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCharactersCharacterIDCspaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostCharactersCharacterIDCspaCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostCharactersCharacterIDCspaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostCharactersCharacterIDCspaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostCharactersCharacterIDCspaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewPostCharactersCharacterIDCspaEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostCharactersCharacterIDCspaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewPostCharactersCharacterIDCspaServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewPostCharactersCharacterIDCspaGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostCharactersCharacterIDCspaCreated creates a PostCharactersCharacterIDCspaCreated with default headers values
func NewPostCharactersCharacterIDCspaCreated() *PostCharactersCharacterIDCspaCreated {
	return &PostCharactersCharacterIDCspaCreated{}
}

/*PostCharactersCharacterIDCspaCreated handles this case with default header values.

Aggregate cost of sending a mail from the source character to the target characters, in ISK
*/
type PostCharactersCharacterIDCspaCreated struct {
	Payload float32
}

func (o *PostCharactersCharacterIDCspaCreated) Error() string {
	return fmt.Sprintf("[POST /characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaCreated  %+v", 201, o.Payload)
}

func (o *PostCharactersCharacterIDCspaCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaBadRequest creates a PostCharactersCharacterIDCspaBadRequest with default headers values
func NewPostCharactersCharacterIDCspaBadRequest() *PostCharactersCharacterIDCspaBadRequest {
	return &PostCharactersCharacterIDCspaBadRequest{}
}

/*PostCharactersCharacterIDCspaBadRequest handles this case with default header values.

Bad request
*/
type PostCharactersCharacterIDCspaBadRequest struct {
	Payload *models.BadRequest
}

func (o *PostCharactersCharacterIDCspaBadRequest) Error() string {
	return fmt.Sprintf("[POST /characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaBadRequest  %+v", 400, o.Payload)
}

func (o *PostCharactersCharacterIDCspaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaUnauthorized creates a PostCharactersCharacterIDCspaUnauthorized with default headers values
func NewPostCharactersCharacterIDCspaUnauthorized() *PostCharactersCharacterIDCspaUnauthorized {
	return &PostCharactersCharacterIDCspaUnauthorized{}
}

/*PostCharactersCharacterIDCspaUnauthorized handles this case with default header values.

Unauthorized
*/
type PostCharactersCharacterIDCspaUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *PostCharactersCharacterIDCspaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCharactersCharacterIDCspaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaForbidden creates a PostCharactersCharacterIDCspaForbidden with default headers values
func NewPostCharactersCharacterIDCspaForbidden() *PostCharactersCharacterIDCspaForbidden {
	return &PostCharactersCharacterIDCspaForbidden{}
}

/*PostCharactersCharacterIDCspaForbidden handles this case with default header values.

Forbidden
*/
type PostCharactersCharacterIDCspaForbidden struct {
	Payload *models.Forbidden
}

func (o *PostCharactersCharacterIDCspaForbidden) Error() string {
	return fmt.Sprintf("[POST /characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaForbidden  %+v", 403, o.Payload)
}

func (o *PostCharactersCharacterIDCspaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaEnhanceYourCalm creates a PostCharactersCharacterIDCspaEnhanceYourCalm with default headers values
func NewPostCharactersCharacterIDCspaEnhanceYourCalm() *PostCharactersCharacterIDCspaEnhanceYourCalm {
	return &PostCharactersCharacterIDCspaEnhanceYourCalm{}
}

/*PostCharactersCharacterIDCspaEnhanceYourCalm handles this case with default header values.

Error limited
*/
type PostCharactersCharacterIDCspaEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *PostCharactersCharacterIDCspaEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaInternalServerError creates a PostCharactersCharacterIDCspaInternalServerError with default headers values
func NewPostCharactersCharacterIDCspaInternalServerError() *PostCharactersCharacterIDCspaInternalServerError {
	return &PostCharactersCharacterIDCspaInternalServerError{}
}

/*PostCharactersCharacterIDCspaInternalServerError handles this case with default header values.

Internal server error
*/
type PostCharactersCharacterIDCspaInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *PostCharactersCharacterIDCspaInternalServerError) Error() string {
	return fmt.Sprintf("[POST /characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCharactersCharacterIDCspaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaServiceUnavailable creates a PostCharactersCharacterIDCspaServiceUnavailable with default headers values
func NewPostCharactersCharacterIDCspaServiceUnavailable() *PostCharactersCharacterIDCspaServiceUnavailable {
	return &PostCharactersCharacterIDCspaServiceUnavailable{}
}

/*PostCharactersCharacterIDCspaServiceUnavailable handles this case with default header values.

Service unavailable
*/
type PostCharactersCharacterIDCspaServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *PostCharactersCharacterIDCspaServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostCharactersCharacterIDCspaServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCharactersCharacterIDCspaGatewayTimeout creates a PostCharactersCharacterIDCspaGatewayTimeout with default headers values
func NewPostCharactersCharacterIDCspaGatewayTimeout() *PostCharactersCharacterIDCspaGatewayTimeout {
	return &PostCharactersCharacterIDCspaGatewayTimeout{}
}

/*PostCharactersCharacterIDCspaGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type PostCharactersCharacterIDCspaGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *PostCharactersCharacterIDCspaGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /characters/{character_id}/cspa/][%d] postCharactersCharacterIdCspaGatewayTimeout  %+v", 504, o.Payload)
}

func (o *PostCharactersCharacterIDCspaGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
