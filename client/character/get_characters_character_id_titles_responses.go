// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDTitlesReader is a Reader for the GetCharactersCharacterIDTitles structure.
type GetCharactersCharacterIDTitlesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDTitlesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDTitlesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDTitlesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDTitlesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDTitlesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDTitlesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDTitlesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDTitlesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDTitlesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDTitlesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDTitlesOK creates a GetCharactersCharacterIDTitlesOK with default headers values
func NewGetCharactersCharacterIDTitlesOK() *GetCharactersCharacterIDTitlesOK {
	return &GetCharactersCharacterIDTitlesOK{}
}

/*GetCharactersCharacterIDTitlesOK handles this case with default header values.

A list of titles
*/
type GetCharactersCharacterIDTitlesOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetCharactersCharacterIDTitlesOKBodyItems
}

func (o *GetCharactersCharacterIDTitlesOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/titles/][%d] getCharactersCharacterIdTitlesOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDTitlesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDTitlesNotModified creates a GetCharactersCharacterIDTitlesNotModified with default headers values
func NewGetCharactersCharacterIDTitlesNotModified() *GetCharactersCharacterIDTitlesNotModified {
	return &GetCharactersCharacterIDTitlesNotModified{}
}

/*GetCharactersCharacterIDTitlesNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDTitlesNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDTitlesNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/titles/][%d] getCharactersCharacterIdTitlesNotModified ", 304)
}

func (o *GetCharactersCharacterIDTitlesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDTitlesBadRequest creates a GetCharactersCharacterIDTitlesBadRequest with default headers values
func NewGetCharactersCharacterIDTitlesBadRequest() *GetCharactersCharacterIDTitlesBadRequest {
	return &GetCharactersCharacterIDTitlesBadRequest{}
}

/*GetCharactersCharacterIDTitlesBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDTitlesBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDTitlesBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/titles/][%d] getCharactersCharacterIdTitlesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDTitlesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDTitlesUnauthorized creates a GetCharactersCharacterIDTitlesUnauthorized with default headers values
func NewGetCharactersCharacterIDTitlesUnauthorized() *GetCharactersCharacterIDTitlesUnauthorized {
	return &GetCharactersCharacterIDTitlesUnauthorized{}
}

/*GetCharactersCharacterIDTitlesUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDTitlesUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDTitlesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/titles/][%d] getCharactersCharacterIdTitlesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDTitlesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDTitlesForbidden creates a GetCharactersCharacterIDTitlesForbidden with default headers values
func NewGetCharactersCharacterIDTitlesForbidden() *GetCharactersCharacterIDTitlesForbidden {
	return &GetCharactersCharacterIDTitlesForbidden{}
}

/*GetCharactersCharacterIDTitlesForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDTitlesForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDTitlesForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/titles/][%d] getCharactersCharacterIdTitlesForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDTitlesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDTitlesEnhanceYourCalm creates a GetCharactersCharacterIDTitlesEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDTitlesEnhanceYourCalm() *GetCharactersCharacterIDTitlesEnhanceYourCalm {
	return &GetCharactersCharacterIDTitlesEnhanceYourCalm{}
}

/*GetCharactersCharacterIDTitlesEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDTitlesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDTitlesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/titles/][%d] getCharactersCharacterIdTitlesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDTitlesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDTitlesInternalServerError creates a GetCharactersCharacterIDTitlesInternalServerError with default headers values
func NewGetCharactersCharacterIDTitlesInternalServerError() *GetCharactersCharacterIDTitlesInternalServerError {
	return &GetCharactersCharacterIDTitlesInternalServerError{}
}

/*GetCharactersCharacterIDTitlesInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDTitlesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDTitlesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/titles/][%d] getCharactersCharacterIdTitlesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDTitlesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDTitlesServiceUnavailable creates a GetCharactersCharacterIDTitlesServiceUnavailable with default headers values
func NewGetCharactersCharacterIDTitlesServiceUnavailable() *GetCharactersCharacterIDTitlesServiceUnavailable {
	return &GetCharactersCharacterIDTitlesServiceUnavailable{}
}

/*GetCharactersCharacterIDTitlesServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDTitlesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDTitlesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/titles/][%d] getCharactersCharacterIdTitlesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDTitlesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDTitlesGatewayTimeout creates a GetCharactersCharacterIDTitlesGatewayTimeout with default headers values
func NewGetCharactersCharacterIDTitlesGatewayTimeout() *GetCharactersCharacterIDTitlesGatewayTimeout {
	return &GetCharactersCharacterIDTitlesGatewayTimeout{}
}

/*GetCharactersCharacterIDTitlesGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDTitlesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDTitlesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/titles/][%d] getCharactersCharacterIdTitlesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDTitlesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
