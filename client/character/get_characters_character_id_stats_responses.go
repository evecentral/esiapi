// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDStatsReader is a Reader for the GetCharactersCharacterIDStats structure.
type GetCharactersCharacterIDStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDStatsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDStatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDStatsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDStatsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDStatsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDStatsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDStatsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDStatsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDStatsOK creates a GetCharactersCharacterIDStatsOK with default headers values
func NewGetCharactersCharacterIDStatsOK() *GetCharactersCharacterIDStatsOK {
	return &GetCharactersCharacterIDStatsOK{}
}

/*GetCharactersCharacterIDStatsOK handles this case with default header values.

Character stats
*/
type GetCharactersCharacterIDStatsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetCharactersCharacterIDStatsOKBodyItems
}

func (o *GetCharactersCharacterIDStatsOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/stats/][%d] getCharactersCharacterIdStatsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDStatsNotModified creates a GetCharactersCharacterIDStatsNotModified with default headers values
func NewGetCharactersCharacterIDStatsNotModified() *GetCharactersCharacterIDStatsNotModified {
	return &GetCharactersCharacterIDStatsNotModified{}
}

/*GetCharactersCharacterIDStatsNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDStatsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDStatsNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/stats/][%d] getCharactersCharacterIdStatsNotModified ", 304)
}

func (o *GetCharactersCharacterIDStatsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDStatsBadRequest creates a GetCharactersCharacterIDStatsBadRequest with default headers values
func NewGetCharactersCharacterIDStatsBadRequest() *GetCharactersCharacterIDStatsBadRequest {
	return &GetCharactersCharacterIDStatsBadRequest{}
}

/*GetCharactersCharacterIDStatsBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDStatsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDStatsBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/stats/][%d] getCharactersCharacterIdStatsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDStatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDStatsUnauthorized creates a GetCharactersCharacterIDStatsUnauthorized with default headers values
func NewGetCharactersCharacterIDStatsUnauthorized() *GetCharactersCharacterIDStatsUnauthorized {
	return &GetCharactersCharacterIDStatsUnauthorized{}
}

/*GetCharactersCharacterIDStatsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDStatsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDStatsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/stats/][%d] getCharactersCharacterIdStatsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDStatsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDStatsForbidden creates a GetCharactersCharacterIDStatsForbidden with default headers values
func NewGetCharactersCharacterIDStatsForbidden() *GetCharactersCharacterIDStatsForbidden {
	return &GetCharactersCharacterIDStatsForbidden{}
}

/*GetCharactersCharacterIDStatsForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDStatsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDStatsForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/stats/][%d] getCharactersCharacterIdStatsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDStatsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDStatsEnhanceYourCalm creates a GetCharactersCharacterIDStatsEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDStatsEnhanceYourCalm() *GetCharactersCharacterIDStatsEnhanceYourCalm {
	return &GetCharactersCharacterIDStatsEnhanceYourCalm{}
}

/*GetCharactersCharacterIDStatsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDStatsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDStatsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/stats/][%d] getCharactersCharacterIdStatsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDStatsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDStatsInternalServerError creates a GetCharactersCharacterIDStatsInternalServerError with default headers values
func NewGetCharactersCharacterIDStatsInternalServerError() *GetCharactersCharacterIDStatsInternalServerError {
	return &GetCharactersCharacterIDStatsInternalServerError{}
}

/*GetCharactersCharacterIDStatsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDStatsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDStatsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/stats/][%d] getCharactersCharacterIdStatsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDStatsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDStatsServiceUnavailable creates a GetCharactersCharacterIDStatsServiceUnavailable with default headers values
func NewGetCharactersCharacterIDStatsServiceUnavailable() *GetCharactersCharacterIDStatsServiceUnavailable {
	return &GetCharactersCharacterIDStatsServiceUnavailable{}
}

/*GetCharactersCharacterIDStatsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDStatsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDStatsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/stats/][%d] getCharactersCharacterIdStatsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDStatsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDStatsGatewayTimeout creates a GetCharactersCharacterIDStatsGatewayTimeout with default headers values
func NewGetCharactersCharacterIDStatsGatewayTimeout() *GetCharactersCharacterIDStatsGatewayTimeout {
	return &GetCharactersCharacterIDStatsGatewayTimeout{}
}

/*GetCharactersCharacterIDStatsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDStatsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDStatsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/stats/][%d] getCharactersCharacterIdStatsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDStatsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
