// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDReader is a Reader for the GetCharactersCharacterID structure.
type GetCharactersCharacterIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCharactersCharacterIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDOK creates a GetCharactersCharacterIDOK with default headers values
func NewGetCharactersCharacterIDOK() *GetCharactersCharacterIDOK {
	return &GetCharactersCharacterIDOK{}
}

/*GetCharactersCharacterIDOK handles this case with default header values.

Public data for the given character
*/
type GetCharactersCharacterIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetCharactersCharacterIDOKBody
}

func (o *GetCharactersCharacterIDOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/][%d] getCharactersCharacterIdOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetCharactersCharacterIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotModified creates a GetCharactersCharacterIDNotModified with default headers values
func NewGetCharactersCharacterIDNotModified() *GetCharactersCharacterIDNotModified {
	return &GetCharactersCharacterIDNotModified{}
}

/*GetCharactersCharacterIDNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/][%d] getCharactersCharacterIdNotModified ", 304)
}

func (o *GetCharactersCharacterIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDBadRequest creates a GetCharactersCharacterIDBadRequest with default headers values
func NewGetCharactersCharacterIDBadRequest() *GetCharactersCharacterIDBadRequest {
	return &GetCharactersCharacterIDBadRequest{}
}

/*GetCharactersCharacterIDBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/][%d] getCharactersCharacterIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotFound creates a GetCharactersCharacterIDNotFound with default headers values
func NewGetCharactersCharacterIDNotFound() *GetCharactersCharacterIDNotFound {
	return &GetCharactersCharacterIDNotFound{}
}

/*GetCharactersCharacterIDNotFound handles this case with default header values.

Character not found
*/
type GetCharactersCharacterIDNotFound struct {
	Payload *models.GetCharactersCharacterIDNotFoundBody
}

func (o *GetCharactersCharacterIDNotFound) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/][%d] getCharactersCharacterIdNotFound  %+v", 404, o.Payload)
}

func (o *GetCharactersCharacterIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetCharactersCharacterIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDEnhanceYourCalm creates a GetCharactersCharacterIDEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDEnhanceYourCalm() *GetCharactersCharacterIDEnhanceYourCalm {
	return &GetCharactersCharacterIDEnhanceYourCalm{}
}

/*GetCharactersCharacterIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/][%d] getCharactersCharacterIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDInternalServerError creates a GetCharactersCharacterIDInternalServerError with default headers values
func NewGetCharactersCharacterIDInternalServerError() *GetCharactersCharacterIDInternalServerError {
	return &GetCharactersCharacterIDInternalServerError{}
}

/*GetCharactersCharacterIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/][%d] getCharactersCharacterIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDServiceUnavailable creates a GetCharactersCharacterIDServiceUnavailable with default headers values
func NewGetCharactersCharacterIDServiceUnavailable() *GetCharactersCharacterIDServiceUnavailable {
	return &GetCharactersCharacterIDServiceUnavailable{}
}

/*GetCharactersCharacterIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/][%d] getCharactersCharacterIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDGatewayTimeout creates a GetCharactersCharacterIDGatewayTimeout with default headers values
func NewGetCharactersCharacterIDGatewayTimeout() *GetCharactersCharacterIDGatewayTimeout {
	return &GetCharactersCharacterIDGatewayTimeout{}
}

/*GetCharactersCharacterIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/][%d] getCharactersCharacterIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
