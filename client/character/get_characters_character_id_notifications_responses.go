// Code generated by go-swagger; DO NOT EDIT.

package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDNotificationsReader is a Reader for the GetCharactersCharacterIDNotifications structure.
type GetCharactersCharacterIDNotificationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDNotificationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDNotificationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDNotificationsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDNotificationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDNotificationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDNotificationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDNotificationsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDNotificationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDNotificationsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDNotificationsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDNotificationsOK creates a GetCharactersCharacterIDNotificationsOK with default headers values
func NewGetCharactersCharacterIDNotificationsOK() *GetCharactersCharacterIDNotificationsOK {
	return &GetCharactersCharacterIDNotificationsOK{}
}

/*GetCharactersCharacterIDNotificationsOK handles this case with default header values.

Returns your recent notifications
*/
type GetCharactersCharacterIDNotificationsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetCharactersCharacterIDNotificationsOKBodyItems
}

func (o *GetCharactersCharacterIDNotificationsOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/][%d] getCharactersCharacterIdNotificationsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsNotModified creates a GetCharactersCharacterIDNotificationsNotModified with default headers values
func NewGetCharactersCharacterIDNotificationsNotModified() *GetCharactersCharacterIDNotificationsNotModified {
	return &GetCharactersCharacterIDNotificationsNotModified{}
}

/*GetCharactersCharacterIDNotificationsNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDNotificationsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDNotificationsNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/][%d] getCharactersCharacterIdNotificationsNotModified ", 304)
}

func (o *GetCharactersCharacterIDNotificationsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDNotificationsBadRequest creates a GetCharactersCharacterIDNotificationsBadRequest with default headers values
func NewGetCharactersCharacterIDNotificationsBadRequest() *GetCharactersCharacterIDNotificationsBadRequest {
	return &GetCharactersCharacterIDNotificationsBadRequest{}
}

/*GetCharactersCharacterIDNotificationsBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDNotificationsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDNotificationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/][%d] getCharactersCharacterIdNotificationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsUnauthorized creates a GetCharactersCharacterIDNotificationsUnauthorized with default headers values
func NewGetCharactersCharacterIDNotificationsUnauthorized() *GetCharactersCharacterIDNotificationsUnauthorized {
	return &GetCharactersCharacterIDNotificationsUnauthorized{}
}

/*GetCharactersCharacterIDNotificationsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDNotificationsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDNotificationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/][%d] getCharactersCharacterIdNotificationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsForbidden creates a GetCharactersCharacterIDNotificationsForbidden with default headers values
func NewGetCharactersCharacterIDNotificationsForbidden() *GetCharactersCharacterIDNotificationsForbidden {
	return &GetCharactersCharacterIDNotificationsForbidden{}
}

/*GetCharactersCharacterIDNotificationsForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDNotificationsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDNotificationsForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/][%d] getCharactersCharacterIdNotificationsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsEnhanceYourCalm creates a GetCharactersCharacterIDNotificationsEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDNotificationsEnhanceYourCalm() *GetCharactersCharacterIDNotificationsEnhanceYourCalm {
	return &GetCharactersCharacterIDNotificationsEnhanceYourCalm{}
}

/*GetCharactersCharacterIDNotificationsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDNotificationsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDNotificationsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/][%d] getCharactersCharacterIdNotificationsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsInternalServerError creates a GetCharactersCharacterIDNotificationsInternalServerError with default headers values
func NewGetCharactersCharacterIDNotificationsInternalServerError() *GetCharactersCharacterIDNotificationsInternalServerError {
	return &GetCharactersCharacterIDNotificationsInternalServerError{}
}

/*GetCharactersCharacterIDNotificationsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDNotificationsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDNotificationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/][%d] getCharactersCharacterIdNotificationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsServiceUnavailable creates a GetCharactersCharacterIDNotificationsServiceUnavailable with default headers values
func NewGetCharactersCharacterIDNotificationsServiceUnavailable() *GetCharactersCharacterIDNotificationsServiceUnavailable {
	return &GetCharactersCharacterIDNotificationsServiceUnavailable{}
}

/*GetCharactersCharacterIDNotificationsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDNotificationsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDNotificationsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/][%d] getCharactersCharacterIdNotificationsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDNotificationsGatewayTimeout creates a GetCharactersCharacterIDNotificationsGatewayTimeout with default headers values
func NewGetCharactersCharacterIDNotificationsGatewayTimeout() *GetCharactersCharacterIDNotificationsGatewayTimeout {
	return &GetCharactersCharacterIDNotificationsGatewayTimeout{}
}

/*GetCharactersCharacterIDNotificationsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDNotificationsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDNotificationsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/notifications/][%d] getCharactersCharacterIdNotificationsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDNotificationsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
