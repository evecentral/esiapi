// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationsCorporationIDAlliancehistoryReader is a Reader for the GetCorporationsCorporationIDAlliancehistory structure.
type GetCorporationsCorporationIDAlliancehistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDAlliancehistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationsCorporationIDAlliancehistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationsCorporationIDAlliancehistoryNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationsCorporationIDAlliancehistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationsCorporationIDAlliancehistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationsCorporationIDAlliancehistoryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationsCorporationIDAlliancehistoryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDAlliancehistoryOK creates a GetCorporationsCorporationIDAlliancehistoryOK with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryOK() *GetCorporationsCorporationIDAlliancehistoryOK {
	return &GetCorporationsCorporationIDAlliancehistoryOK{}
}

/*GetCorporationsCorporationIDAlliancehistoryOK handles this case with default header values.

Alliance history for the given corporation
*/
type GetCorporationsCorporationIDAlliancehistoryOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetCorporationsCorporationIDAlliancehistoryOKBodyItems
}

func (o *GetCorporationsCorporationIDAlliancehistoryOK) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryNotModified creates a GetCorporationsCorporationIDAlliancehistoryNotModified with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryNotModified() *GetCorporationsCorporationIDAlliancehistoryNotModified {
	return &GetCorporationsCorporationIDAlliancehistoryNotModified{}
}

/*GetCorporationsCorporationIDAlliancehistoryNotModified handles this case with default header values.

Not modified
*/
type GetCorporationsCorporationIDAlliancehistoryNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryNotModified ", 304)
}

func (o *GetCorporationsCorporationIDAlliancehistoryNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryBadRequest creates a GetCorporationsCorporationIDAlliancehistoryBadRequest with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryBadRequest() *GetCorporationsCorporationIDAlliancehistoryBadRequest {
	return &GetCorporationsCorporationIDAlliancehistoryBadRequest{}
}

/*GetCorporationsCorporationIDAlliancehistoryBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationsCorporationIDAlliancehistoryBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm creates a GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm() *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm {
	return &GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm{}
}

/*GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryInternalServerError creates a GetCorporationsCorporationIDAlliancehistoryInternalServerError with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryInternalServerError() *GetCorporationsCorporationIDAlliancehistoryInternalServerError {
	return &GetCorporationsCorporationIDAlliancehistoryInternalServerError{}
}

/*GetCorporationsCorporationIDAlliancehistoryInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationsCorporationIDAlliancehistoryInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryServiceUnavailable creates a GetCorporationsCorporationIDAlliancehistoryServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryServiceUnavailable() *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable {
	return &GetCorporationsCorporationIDAlliancehistoryServiceUnavailable{}
}

/*GetCorporationsCorporationIDAlliancehistoryServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDAlliancehistoryServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDAlliancehistoryGatewayTimeout creates a GetCorporationsCorporationIDAlliancehistoryGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDAlliancehistoryGatewayTimeout() *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout {
	return &GetCorporationsCorporationIDAlliancehistoryGatewayTimeout{}
}

/*GetCorporationsCorporationIDAlliancehistoryGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDAlliancehistoryGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/alliancehistory/][%d] getCorporationsCorporationIdAlliancehistoryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDAlliancehistoryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
