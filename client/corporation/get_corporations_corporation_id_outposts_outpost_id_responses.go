// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationsCorporationIDOutpostsOutpostIDReader is a Reader for the GetCorporationsCorporationIDOutpostsOutpostID structure.
type GetCorporationsCorporationIDOutpostsOutpostIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDOutpostsOutpostIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationsCorporationIDOutpostsOutpostIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationsCorporationIDOutpostsOutpostIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationsCorporationIDOutpostsOutpostIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCorporationsCorporationIDOutpostsOutpostIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCorporationsCorporationIDOutpostsOutpostIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationsCorporationIDOutpostsOutpostIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationsCorporationIDOutpostsOutpostIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationsCorporationIDOutpostsOutpostIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationsCorporationIDOutpostsOutpostIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDOutpostsOutpostIDOK creates a GetCorporationsCorporationIDOutpostsOutpostIDOK with default headers values
func NewGetCorporationsCorporationIDOutpostsOutpostIDOK() *GetCorporationsCorporationIDOutpostsOutpostIDOK {
	return &GetCorporationsCorporationIDOutpostsOutpostIDOK{}
}

/*GetCorporationsCorporationIDOutpostsOutpostIDOK handles this case with default header values.

Details about the given outpost
*/
type GetCorporationsCorporationIDOutpostsOutpostIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetCorporationsCorporationIDOutpostsOutpostIDOKBody
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDOK) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/{outpost_id}/][%d] getCorporationsCorporationIdOutpostsOutpostIdOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetCorporationsCorporationIDOutpostsOutpostIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsOutpostIDNotModified creates a GetCorporationsCorporationIDOutpostsOutpostIDNotModified with default headers values
func NewGetCorporationsCorporationIDOutpostsOutpostIDNotModified() *GetCorporationsCorporationIDOutpostsOutpostIDNotModified {
	return &GetCorporationsCorporationIDOutpostsOutpostIDNotModified{}
}

/*GetCorporationsCorporationIDOutpostsOutpostIDNotModified handles this case with default header values.

Not modified
*/
type GetCorporationsCorporationIDOutpostsOutpostIDNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDNotModified) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/{outpost_id}/][%d] getCorporationsCorporationIdOutpostsOutpostIdNotModified ", 304)
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationsCorporationIDOutpostsOutpostIDBadRequest creates a GetCorporationsCorporationIDOutpostsOutpostIDBadRequest with default headers values
func NewGetCorporationsCorporationIDOutpostsOutpostIDBadRequest() *GetCorporationsCorporationIDOutpostsOutpostIDBadRequest {
	return &GetCorporationsCorporationIDOutpostsOutpostIDBadRequest{}
}

/*GetCorporationsCorporationIDOutpostsOutpostIDBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationsCorporationIDOutpostsOutpostIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/{outpost_id}/][%d] getCorporationsCorporationIdOutpostsOutpostIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsOutpostIDUnauthorized creates a GetCorporationsCorporationIDOutpostsOutpostIDUnauthorized with default headers values
func NewGetCorporationsCorporationIDOutpostsOutpostIDUnauthorized() *GetCorporationsCorporationIDOutpostsOutpostIDUnauthorized {
	return &GetCorporationsCorporationIDOutpostsOutpostIDUnauthorized{}
}

/*GetCorporationsCorporationIDOutpostsOutpostIDUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDOutpostsOutpostIDUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/{outpost_id}/][%d] getCorporationsCorporationIdOutpostsOutpostIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsOutpostIDForbidden creates a GetCorporationsCorporationIDOutpostsOutpostIDForbidden with default headers values
func NewGetCorporationsCorporationIDOutpostsOutpostIDForbidden() *GetCorporationsCorporationIDOutpostsOutpostIDForbidden {
	return &GetCorporationsCorporationIDOutpostsOutpostIDForbidden{}
}

/*GetCorporationsCorporationIDOutpostsOutpostIDForbidden handles this case with default header values.

Forbidden
*/
type GetCorporationsCorporationIDOutpostsOutpostIDForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDForbidden) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/{outpost_id}/][%d] getCorporationsCorporationIdOutpostsOutpostIdForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsOutpostIDEnhanceYourCalm creates a GetCorporationsCorporationIDOutpostsOutpostIDEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDOutpostsOutpostIDEnhanceYourCalm() *GetCorporationsCorporationIDOutpostsOutpostIDEnhanceYourCalm {
	return &GetCorporationsCorporationIDOutpostsOutpostIDEnhanceYourCalm{}
}

/*GetCorporationsCorporationIDOutpostsOutpostIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationsCorporationIDOutpostsOutpostIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/{outpost_id}/][%d] getCorporationsCorporationIdOutpostsOutpostIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsOutpostIDInternalServerError creates a GetCorporationsCorporationIDOutpostsOutpostIDInternalServerError with default headers values
func NewGetCorporationsCorporationIDOutpostsOutpostIDInternalServerError() *GetCorporationsCorporationIDOutpostsOutpostIDInternalServerError {
	return &GetCorporationsCorporationIDOutpostsOutpostIDInternalServerError{}
}

/*GetCorporationsCorporationIDOutpostsOutpostIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationsCorporationIDOutpostsOutpostIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/{outpost_id}/][%d] getCorporationsCorporationIdOutpostsOutpostIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsOutpostIDServiceUnavailable creates a GetCorporationsCorporationIDOutpostsOutpostIDServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDOutpostsOutpostIDServiceUnavailable() *GetCorporationsCorporationIDOutpostsOutpostIDServiceUnavailable {
	return &GetCorporationsCorporationIDOutpostsOutpostIDServiceUnavailable{}
}

/*GetCorporationsCorporationIDOutpostsOutpostIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDOutpostsOutpostIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/{outpost_id}/][%d] getCorporationsCorporationIdOutpostsOutpostIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsOutpostIDGatewayTimeout creates a GetCorporationsCorporationIDOutpostsOutpostIDGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDOutpostsOutpostIDGatewayTimeout() *GetCorporationsCorporationIDOutpostsOutpostIDGatewayTimeout {
	return &GetCorporationsCorporationIDOutpostsOutpostIDGatewayTimeout{}
}

/*GetCorporationsCorporationIDOutpostsOutpostIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDOutpostsOutpostIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/{outpost_id}/][%d] getCorporationsCorporationIdOutpostsOutpostIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsOutpostIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
