// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationsNamesReader is a Reader for the GetCorporationsNames structure.
type GetCorporationsNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationsNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationsNamesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationsNamesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationsNamesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationsNamesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationsNamesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationsNamesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationsNamesOK creates a GetCorporationsNamesOK with default headers values
func NewGetCorporationsNamesOK() *GetCorporationsNamesOK {
	return &GetCorporationsNamesOK{}
}

/*GetCorporationsNamesOK handles this case with default header values.

List of id/name associations
*/
type GetCorporationsNamesOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetCorporationsNamesOKBodyItems
}

func (o *GetCorporationsNamesOK) Error() string {
	return fmt.Sprintf("[GET /corporations/names/][%d] getCorporationsNamesOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsNamesNotModified creates a GetCorporationsNamesNotModified with default headers values
func NewGetCorporationsNamesNotModified() *GetCorporationsNamesNotModified {
	return &GetCorporationsNamesNotModified{}
}

/*GetCorporationsNamesNotModified handles this case with default header values.

Not modified
*/
type GetCorporationsNamesNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsNamesNotModified) Error() string {
	return fmt.Sprintf("[GET /corporations/names/][%d] getCorporationsNamesNotModified ", 304)
}

func (o *GetCorporationsNamesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationsNamesBadRequest creates a GetCorporationsNamesBadRequest with default headers values
func NewGetCorporationsNamesBadRequest() *GetCorporationsNamesBadRequest {
	return &GetCorporationsNamesBadRequest{}
}

/*GetCorporationsNamesBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationsNamesBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsNamesBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporations/names/][%d] getCorporationsNamesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsNamesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsNamesEnhanceYourCalm creates a GetCorporationsNamesEnhanceYourCalm with default headers values
func NewGetCorporationsNamesEnhanceYourCalm() *GetCorporationsNamesEnhanceYourCalm {
	return &GetCorporationsNamesEnhanceYourCalm{}
}

/*GetCorporationsNamesEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationsNamesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsNamesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporations/names/][%d] getCorporationsNamesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsNamesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsNamesInternalServerError creates a GetCorporationsNamesInternalServerError with default headers values
func NewGetCorporationsNamesInternalServerError() *GetCorporationsNamesInternalServerError {
	return &GetCorporationsNamesInternalServerError{}
}

/*GetCorporationsNamesInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationsNamesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsNamesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporations/names/][%d] getCorporationsNamesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsNamesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsNamesServiceUnavailable creates a GetCorporationsNamesServiceUnavailable with default headers values
func NewGetCorporationsNamesServiceUnavailable() *GetCorporationsNamesServiceUnavailable {
	return &GetCorporationsNamesServiceUnavailable{}
}

/*GetCorporationsNamesServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationsNamesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsNamesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporations/names/][%d] getCorporationsNamesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsNamesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsNamesGatewayTimeout creates a GetCorporationsNamesGatewayTimeout with default headers values
func NewGetCorporationsNamesGatewayTimeout() *GetCorporationsNamesGatewayTimeout {
	return &GetCorporationsNamesGatewayTimeout{}
}

/*GetCorporationsNamesGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationsNamesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsNamesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporations/names/][%d] getCorporationsNamesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsNamesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
