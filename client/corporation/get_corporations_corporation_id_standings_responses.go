// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationsCorporationIDStandingsReader is a Reader for the GetCorporationsCorporationIDStandings structure.
type GetCorporationsCorporationIDStandingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDStandingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationsCorporationIDStandingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationsCorporationIDStandingsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationsCorporationIDStandingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCorporationsCorporationIDStandingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCorporationsCorporationIDStandingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationsCorporationIDStandingsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationsCorporationIDStandingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationsCorporationIDStandingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationsCorporationIDStandingsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDStandingsOK creates a GetCorporationsCorporationIDStandingsOK with default headers values
func NewGetCorporationsCorporationIDStandingsOK() *GetCorporationsCorporationIDStandingsOK {
	return &GetCorporationsCorporationIDStandingsOK{
		XPages: 1,
	}
}

/*GetCorporationsCorporationIDStandingsOK handles this case with default header values.

A list of standings
*/
type GetCorporationsCorporationIDStandingsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetCorporationsCorporationIDStandingsOKBodyItems
}

func (o *GetCorporationsCorporationIDStandingsOK) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/standings/][%d] getCorporationsCorporationIdStandingsOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDStandingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStandingsNotModified creates a GetCorporationsCorporationIDStandingsNotModified with default headers values
func NewGetCorporationsCorporationIDStandingsNotModified() *GetCorporationsCorporationIDStandingsNotModified {
	return &GetCorporationsCorporationIDStandingsNotModified{}
}

/*GetCorporationsCorporationIDStandingsNotModified handles this case with default header values.

Not modified
*/
type GetCorporationsCorporationIDStandingsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDStandingsNotModified) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/standings/][%d] getCorporationsCorporationIdStandingsNotModified ", 304)
}

func (o *GetCorporationsCorporationIDStandingsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationsCorporationIDStandingsBadRequest creates a GetCorporationsCorporationIDStandingsBadRequest with default headers values
func NewGetCorporationsCorporationIDStandingsBadRequest() *GetCorporationsCorporationIDStandingsBadRequest {
	return &GetCorporationsCorporationIDStandingsBadRequest{}
}

/*GetCorporationsCorporationIDStandingsBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationsCorporationIDStandingsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDStandingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/standings/][%d] getCorporationsCorporationIdStandingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDStandingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStandingsUnauthorized creates a GetCorporationsCorporationIDStandingsUnauthorized with default headers values
func NewGetCorporationsCorporationIDStandingsUnauthorized() *GetCorporationsCorporationIDStandingsUnauthorized {
	return &GetCorporationsCorporationIDStandingsUnauthorized{}
}

/*GetCorporationsCorporationIDStandingsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDStandingsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationsCorporationIDStandingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/standings/][%d] getCorporationsCorporationIdStandingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDStandingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStandingsForbidden creates a GetCorporationsCorporationIDStandingsForbidden with default headers values
func NewGetCorporationsCorporationIDStandingsForbidden() *GetCorporationsCorporationIDStandingsForbidden {
	return &GetCorporationsCorporationIDStandingsForbidden{}
}

/*GetCorporationsCorporationIDStandingsForbidden handles this case with default header values.

Forbidden
*/
type GetCorporationsCorporationIDStandingsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationsCorporationIDStandingsForbidden) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/standings/][%d] getCorporationsCorporationIdStandingsForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDStandingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStandingsEnhanceYourCalm creates a GetCorporationsCorporationIDStandingsEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDStandingsEnhanceYourCalm() *GetCorporationsCorporationIDStandingsEnhanceYourCalm {
	return &GetCorporationsCorporationIDStandingsEnhanceYourCalm{}
}

/*GetCorporationsCorporationIDStandingsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationsCorporationIDStandingsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDStandingsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/standings/][%d] getCorporationsCorporationIdStandingsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDStandingsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStandingsInternalServerError creates a GetCorporationsCorporationIDStandingsInternalServerError with default headers values
func NewGetCorporationsCorporationIDStandingsInternalServerError() *GetCorporationsCorporationIDStandingsInternalServerError {
	return &GetCorporationsCorporationIDStandingsInternalServerError{}
}

/*GetCorporationsCorporationIDStandingsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationsCorporationIDStandingsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDStandingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/standings/][%d] getCorporationsCorporationIdStandingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDStandingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStandingsServiceUnavailable creates a GetCorporationsCorporationIDStandingsServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDStandingsServiceUnavailable() *GetCorporationsCorporationIDStandingsServiceUnavailable {
	return &GetCorporationsCorporationIDStandingsServiceUnavailable{}
}

/*GetCorporationsCorporationIDStandingsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDStandingsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDStandingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/standings/][%d] getCorporationsCorporationIdStandingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDStandingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDStandingsGatewayTimeout creates a GetCorporationsCorporationIDStandingsGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDStandingsGatewayTimeout() *GetCorporationsCorporationIDStandingsGatewayTimeout {
	return &GetCorporationsCorporationIDStandingsGatewayTimeout{}
}

/*GetCorporationsCorporationIDStandingsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDStandingsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDStandingsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/standings/][%d] getCorporationsCorporationIdStandingsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDStandingsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
