// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationsCorporationIDMembersLimitReader is a Reader for the GetCorporationsCorporationIDMembersLimit structure.
type GetCorporationsCorporationIDMembersLimitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDMembersLimitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationsCorporationIDMembersLimitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationsCorporationIDMembersLimitNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationsCorporationIDMembersLimitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCorporationsCorporationIDMembersLimitUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCorporationsCorporationIDMembersLimitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationsCorporationIDMembersLimitEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationsCorporationIDMembersLimitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationsCorporationIDMembersLimitServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationsCorporationIDMembersLimitGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDMembersLimitOK creates a GetCorporationsCorporationIDMembersLimitOK with default headers values
func NewGetCorporationsCorporationIDMembersLimitOK() *GetCorporationsCorporationIDMembersLimitOK {
	return &GetCorporationsCorporationIDMembersLimitOK{}
}

/*GetCorporationsCorporationIDMembersLimitOK handles this case with default header values.

The corporation's member limit
*/
type GetCorporationsCorporationIDMembersLimitOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload int32
}

func (o *GetCorporationsCorporationIDMembersLimitOK) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/members/limit/][%d] getCorporationsCorporationIdMembersLimitOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDMembersLimitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDMembersLimitNotModified creates a GetCorporationsCorporationIDMembersLimitNotModified with default headers values
func NewGetCorporationsCorporationIDMembersLimitNotModified() *GetCorporationsCorporationIDMembersLimitNotModified {
	return &GetCorporationsCorporationIDMembersLimitNotModified{}
}

/*GetCorporationsCorporationIDMembersLimitNotModified handles this case with default header values.

Not modified
*/
type GetCorporationsCorporationIDMembersLimitNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDMembersLimitNotModified) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/members/limit/][%d] getCorporationsCorporationIdMembersLimitNotModified ", 304)
}

func (o *GetCorporationsCorporationIDMembersLimitNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationsCorporationIDMembersLimitBadRequest creates a GetCorporationsCorporationIDMembersLimitBadRequest with default headers values
func NewGetCorporationsCorporationIDMembersLimitBadRequest() *GetCorporationsCorporationIDMembersLimitBadRequest {
	return &GetCorporationsCorporationIDMembersLimitBadRequest{}
}

/*GetCorporationsCorporationIDMembersLimitBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationsCorporationIDMembersLimitBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDMembersLimitBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/members/limit/][%d] getCorporationsCorporationIdMembersLimitBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDMembersLimitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDMembersLimitUnauthorized creates a GetCorporationsCorporationIDMembersLimitUnauthorized with default headers values
func NewGetCorporationsCorporationIDMembersLimitUnauthorized() *GetCorporationsCorporationIDMembersLimitUnauthorized {
	return &GetCorporationsCorporationIDMembersLimitUnauthorized{}
}

/*GetCorporationsCorporationIDMembersLimitUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDMembersLimitUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationsCorporationIDMembersLimitUnauthorized) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/members/limit/][%d] getCorporationsCorporationIdMembersLimitUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDMembersLimitUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDMembersLimitForbidden creates a GetCorporationsCorporationIDMembersLimitForbidden with default headers values
func NewGetCorporationsCorporationIDMembersLimitForbidden() *GetCorporationsCorporationIDMembersLimitForbidden {
	return &GetCorporationsCorporationIDMembersLimitForbidden{}
}

/*GetCorporationsCorporationIDMembersLimitForbidden handles this case with default header values.

Forbidden
*/
type GetCorporationsCorporationIDMembersLimitForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationsCorporationIDMembersLimitForbidden) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/members/limit/][%d] getCorporationsCorporationIdMembersLimitForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDMembersLimitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDMembersLimitEnhanceYourCalm creates a GetCorporationsCorporationIDMembersLimitEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDMembersLimitEnhanceYourCalm() *GetCorporationsCorporationIDMembersLimitEnhanceYourCalm {
	return &GetCorporationsCorporationIDMembersLimitEnhanceYourCalm{}
}

/*GetCorporationsCorporationIDMembersLimitEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationsCorporationIDMembersLimitEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDMembersLimitEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/members/limit/][%d] getCorporationsCorporationIdMembersLimitEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDMembersLimitEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDMembersLimitInternalServerError creates a GetCorporationsCorporationIDMembersLimitInternalServerError with default headers values
func NewGetCorporationsCorporationIDMembersLimitInternalServerError() *GetCorporationsCorporationIDMembersLimitInternalServerError {
	return &GetCorporationsCorporationIDMembersLimitInternalServerError{}
}

/*GetCorporationsCorporationIDMembersLimitInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationsCorporationIDMembersLimitInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDMembersLimitInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/members/limit/][%d] getCorporationsCorporationIdMembersLimitInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDMembersLimitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDMembersLimitServiceUnavailable creates a GetCorporationsCorporationIDMembersLimitServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDMembersLimitServiceUnavailable() *GetCorporationsCorporationIDMembersLimitServiceUnavailable {
	return &GetCorporationsCorporationIDMembersLimitServiceUnavailable{}
}

/*GetCorporationsCorporationIDMembersLimitServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDMembersLimitServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDMembersLimitServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/members/limit/][%d] getCorporationsCorporationIdMembersLimitServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDMembersLimitServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDMembersLimitGatewayTimeout creates a GetCorporationsCorporationIDMembersLimitGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDMembersLimitGatewayTimeout() *GetCorporationsCorporationIDMembersLimitGatewayTimeout {
	return &GetCorporationsCorporationIDMembersLimitGatewayTimeout{}
}

/*GetCorporationsCorporationIDMembersLimitGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDMembersLimitGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDMembersLimitGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/members/limit/][%d] getCorporationsCorporationIdMembersLimitGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDMembersLimitGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
