// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationsCorporationIDOutpostsReader is a Reader for the GetCorporationsCorporationIDOutposts structure.
type GetCorporationsCorporationIDOutpostsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDOutpostsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationsCorporationIDOutpostsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationsCorporationIDOutpostsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationsCorporationIDOutpostsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCorporationsCorporationIDOutpostsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCorporationsCorporationIDOutpostsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationsCorporationIDOutpostsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationsCorporationIDOutpostsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationsCorporationIDOutpostsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationsCorporationIDOutpostsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDOutpostsOK creates a GetCorporationsCorporationIDOutpostsOK with default headers values
func NewGetCorporationsCorporationIDOutpostsOK() *GetCorporationsCorporationIDOutpostsOK {
	return &GetCorporationsCorporationIDOutpostsOK{
		XPages: 1,
	}
}

/*GetCorporationsCorporationIDOutpostsOK handles this case with default header values.

List of corporation outpost IDs
*/
type GetCorporationsCorporationIDOutpostsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []int32
}

func (o *GetCorporationsCorporationIDOutpostsOK) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/][%d] getCorporationsCorporationIdOutpostsOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsNotModified creates a GetCorporationsCorporationIDOutpostsNotModified with default headers values
func NewGetCorporationsCorporationIDOutpostsNotModified() *GetCorporationsCorporationIDOutpostsNotModified {
	return &GetCorporationsCorporationIDOutpostsNotModified{}
}

/*GetCorporationsCorporationIDOutpostsNotModified handles this case with default header values.

Not modified
*/
type GetCorporationsCorporationIDOutpostsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDOutpostsNotModified) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/][%d] getCorporationsCorporationIdOutpostsNotModified ", 304)
}

func (o *GetCorporationsCorporationIDOutpostsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationsCorporationIDOutpostsBadRequest creates a GetCorporationsCorporationIDOutpostsBadRequest with default headers values
func NewGetCorporationsCorporationIDOutpostsBadRequest() *GetCorporationsCorporationIDOutpostsBadRequest {
	return &GetCorporationsCorporationIDOutpostsBadRequest{}
}

/*GetCorporationsCorporationIDOutpostsBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationsCorporationIDOutpostsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDOutpostsBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/][%d] getCorporationsCorporationIdOutpostsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsUnauthorized creates a GetCorporationsCorporationIDOutpostsUnauthorized with default headers values
func NewGetCorporationsCorporationIDOutpostsUnauthorized() *GetCorporationsCorporationIDOutpostsUnauthorized {
	return &GetCorporationsCorporationIDOutpostsUnauthorized{}
}

/*GetCorporationsCorporationIDOutpostsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDOutpostsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationsCorporationIDOutpostsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/][%d] getCorporationsCorporationIdOutpostsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsForbidden creates a GetCorporationsCorporationIDOutpostsForbidden with default headers values
func NewGetCorporationsCorporationIDOutpostsForbidden() *GetCorporationsCorporationIDOutpostsForbidden {
	return &GetCorporationsCorporationIDOutpostsForbidden{}
}

/*GetCorporationsCorporationIDOutpostsForbidden handles this case with default header values.

Forbidden
*/
type GetCorporationsCorporationIDOutpostsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationsCorporationIDOutpostsForbidden) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/][%d] getCorporationsCorporationIdOutpostsForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsEnhanceYourCalm creates a GetCorporationsCorporationIDOutpostsEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDOutpostsEnhanceYourCalm() *GetCorporationsCorporationIDOutpostsEnhanceYourCalm {
	return &GetCorporationsCorporationIDOutpostsEnhanceYourCalm{}
}

/*GetCorporationsCorporationIDOutpostsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationsCorporationIDOutpostsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDOutpostsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/][%d] getCorporationsCorporationIdOutpostsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsInternalServerError creates a GetCorporationsCorporationIDOutpostsInternalServerError with default headers values
func NewGetCorporationsCorporationIDOutpostsInternalServerError() *GetCorporationsCorporationIDOutpostsInternalServerError {
	return &GetCorporationsCorporationIDOutpostsInternalServerError{}
}

/*GetCorporationsCorporationIDOutpostsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationsCorporationIDOutpostsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDOutpostsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/][%d] getCorporationsCorporationIdOutpostsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsServiceUnavailable creates a GetCorporationsCorporationIDOutpostsServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDOutpostsServiceUnavailable() *GetCorporationsCorporationIDOutpostsServiceUnavailable {
	return &GetCorporationsCorporationIDOutpostsServiceUnavailable{}
}

/*GetCorporationsCorporationIDOutpostsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDOutpostsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDOutpostsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/][%d] getCorporationsCorporationIdOutpostsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDOutpostsGatewayTimeout creates a GetCorporationsCorporationIDOutpostsGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDOutpostsGatewayTimeout() *GetCorporationsCorporationIDOutpostsGatewayTimeout {
	return &GetCorporationsCorporationIDOutpostsGatewayTimeout{}
}

/*GetCorporationsCorporationIDOutpostsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDOutpostsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDOutpostsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/outposts/][%d] getCorporationsCorporationIdOutpostsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDOutpostsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
