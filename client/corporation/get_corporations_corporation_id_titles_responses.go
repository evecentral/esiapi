// Code generated by go-swagger; DO NOT EDIT.

package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationsCorporationIDTitlesReader is a Reader for the GetCorporationsCorporationIDTitles structure.
type GetCorporationsCorporationIDTitlesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDTitlesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationsCorporationIDTitlesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationsCorporationIDTitlesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationsCorporationIDTitlesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCorporationsCorporationIDTitlesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCorporationsCorporationIDTitlesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationsCorporationIDTitlesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationsCorporationIDTitlesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationsCorporationIDTitlesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationsCorporationIDTitlesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDTitlesOK creates a GetCorporationsCorporationIDTitlesOK with default headers values
func NewGetCorporationsCorporationIDTitlesOK() *GetCorporationsCorporationIDTitlesOK {
	return &GetCorporationsCorporationIDTitlesOK{}
}

/*GetCorporationsCorporationIDTitlesOK handles this case with default header values.

A list of titles
*/
type GetCorporationsCorporationIDTitlesOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetCorporationsCorporationIDTitlesOKBodyItems
}

func (o *GetCorporationsCorporationIDTitlesOK) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesNotModified creates a GetCorporationsCorporationIDTitlesNotModified with default headers values
func NewGetCorporationsCorporationIDTitlesNotModified() *GetCorporationsCorporationIDTitlesNotModified {
	return &GetCorporationsCorporationIDTitlesNotModified{}
}

/*GetCorporationsCorporationIDTitlesNotModified handles this case with default header values.

Not modified
*/
type GetCorporationsCorporationIDTitlesNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDTitlesNotModified) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesNotModified ", 304)
}

func (o *GetCorporationsCorporationIDTitlesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationsCorporationIDTitlesBadRequest creates a GetCorporationsCorporationIDTitlesBadRequest with default headers values
func NewGetCorporationsCorporationIDTitlesBadRequest() *GetCorporationsCorporationIDTitlesBadRequest {
	return &GetCorporationsCorporationIDTitlesBadRequest{}
}

/*GetCorporationsCorporationIDTitlesBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationsCorporationIDTitlesBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDTitlesBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesUnauthorized creates a GetCorporationsCorporationIDTitlesUnauthorized with default headers values
func NewGetCorporationsCorporationIDTitlesUnauthorized() *GetCorporationsCorporationIDTitlesUnauthorized {
	return &GetCorporationsCorporationIDTitlesUnauthorized{}
}

/*GetCorporationsCorporationIDTitlesUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDTitlesUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationsCorporationIDTitlesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesForbidden creates a GetCorporationsCorporationIDTitlesForbidden with default headers values
func NewGetCorporationsCorporationIDTitlesForbidden() *GetCorporationsCorporationIDTitlesForbidden {
	return &GetCorporationsCorporationIDTitlesForbidden{}
}

/*GetCorporationsCorporationIDTitlesForbidden handles this case with default header values.

Forbidden
*/
type GetCorporationsCorporationIDTitlesForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationsCorporationIDTitlesForbidden) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesEnhanceYourCalm creates a GetCorporationsCorporationIDTitlesEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDTitlesEnhanceYourCalm() *GetCorporationsCorporationIDTitlesEnhanceYourCalm {
	return &GetCorporationsCorporationIDTitlesEnhanceYourCalm{}
}

/*GetCorporationsCorporationIDTitlesEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationsCorporationIDTitlesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesInternalServerError creates a GetCorporationsCorporationIDTitlesInternalServerError with default headers values
func NewGetCorporationsCorporationIDTitlesInternalServerError() *GetCorporationsCorporationIDTitlesInternalServerError {
	return &GetCorporationsCorporationIDTitlesInternalServerError{}
}

/*GetCorporationsCorporationIDTitlesInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationsCorporationIDTitlesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDTitlesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesServiceUnavailable creates a GetCorporationsCorporationIDTitlesServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDTitlesServiceUnavailable() *GetCorporationsCorporationIDTitlesServiceUnavailable {
	return &GetCorporationsCorporationIDTitlesServiceUnavailable{}
}

/*GetCorporationsCorporationIDTitlesServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDTitlesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDTitlesGatewayTimeout creates a GetCorporationsCorporationIDTitlesGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDTitlesGatewayTimeout() *GetCorporationsCorporationIDTitlesGatewayTimeout {
	return &GetCorporationsCorporationIDTitlesGatewayTimeout{}
}

/*GetCorporationsCorporationIDTitlesGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDTitlesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/titles/][%d] getCorporationsCorporationIdTitlesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDTitlesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
