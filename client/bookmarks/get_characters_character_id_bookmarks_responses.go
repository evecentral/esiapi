// Code generated by go-swagger; DO NOT EDIT.

package bookmarks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDBookmarksReader is a Reader for the GetCharactersCharacterIDBookmarks structure.
type GetCharactersCharacterIDBookmarksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDBookmarksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDBookmarksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDBookmarksNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDBookmarksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDBookmarksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDBookmarksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDBookmarksEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDBookmarksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDBookmarksServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDBookmarksGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDBookmarksOK creates a GetCharactersCharacterIDBookmarksOK with default headers values
func NewGetCharactersCharacterIDBookmarksOK() *GetCharactersCharacterIDBookmarksOK {
	return &GetCharactersCharacterIDBookmarksOK{
		XPages: 1,
	}
}

/*GetCharactersCharacterIDBookmarksOK handles this case with default header values.

A list of bookmarks
*/
type GetCharactersCharacterIDBookmarksOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetCharactersCharacterIDBookmarksOKBodyItems
}

func (o *GetCharactersCharacterIDBookmarksOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/][%d] getCharactersCharacterIdBookmarksOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksNotModified creates a GetCharactersCharacterIDBookmarksNotModified with default headers values
func NewGetCharactersCharacterIDBookmarksNotModified() *GetCharactersCharacterIDBookmarksNotModified {
	return &GetCharactersCharacterIDBookmarksNotModified{}
}

/*GetCharactersCharacterIDBookmarksNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDBookmarksNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDBookmarksNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/][%d] getCharactersCharacterIdBookmarksNotModified ", 304)
}

func (o *GetCharactersCharacterIDBookmarksNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDBookmarksBadRequest creates a GetCharactersCharacterIDBookmarksBadRequest with default headers values
func NewGetCharactersCharacterIDBookmarksBadRequest() *GetCharactersCharacterIDBookmarksBadRequest {
	return &GetCharactersCharacterIDBookmarksBadRequest{}
}

/*GetCharactersCharacterIDBookmarksBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDBookmarksBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDBookmarksBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/][%d] getCharactersCharacterIdBookmarksBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksUnauthorized creates a GetCharactersCharacterIDBookmarksUnauthorized with default headers values
func NewGetCharactersCharacterIDBookmarksUnauthorized() *GetCharactersCharacterIDBookmarksUnauthorized {
	return &GetCharactersCharacterIDBookmarksUnauthorized{}
}

/*GetCharactersCharacterIDBookmarksUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDBookmarksUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDBookmarksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/][%d] getCharactersCharacterIdBookmarksUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksForbidden creates a GetCharactersCharacterIDBookmarksForbidden with default headers values
func NewGetCharactersCharacterIDBookmarksForbidden() *GetCharactersCharacterIDBookmarksForbidden {
	return &GetCharactersCharacterIDBookmarksForbidden{}
}

/*GetCharactersCharacterIDBookmarksForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDBookmarksForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDBookmarksForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/][%d] getCharactersCharacterIdBookmarksForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksEnhanceYourCalm creates a GetCharactersCharacterIDBookmarksEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDBookmarksEnhanceYourCalm() *GetCharactersCharacterIDBookmarksEnhanceYourCalm {
	return &GetCharactersCharacterIDBookmarksEnhanceYourCalm{}
}

/*GetCharactersCharacterIDBookmarksEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDBookmarksEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDBookmarksEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/][%d] getCharactersCharacterIdBookmarksEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksInternalServerError creates a GetCharactersCharacterIDBookmarksInternalServerError with default headers values
func NewGetCharactersCharacterIDBookmarksInternalServerError() *GetCharactersCharacterIDBookmarksInternalServerError {
	return &GetCharactersCharacterIDBookmarksInternalServerError{}
}

/*GetCharactersCharacterIDBookmarksInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDBookmarksInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDBookmarksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/][%d] getCharactersCharacterIdBookmarksInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksServiceUnavailable creates a GetCharactersCharacterIDBookmarksServiceUnavailable with default headers values
func NewGetCharactersCharacterIDBookmarksServiceUnavailable() *GetCharactersCharacterIDBookmarksServiceUnavailable {
	return &GetCharactersCharacterIDBookmarksServiceUnavailable{}
}

/*GetCharactersCharacterIDBookmarksServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDBookmarksServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDBookmarksServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/][%d] getCharactersCharacterIdBookmarksServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksGatewayTimeout creates a GetCharactersCharacterIDBookmarksGatewayTimeout with default headers values
func NewGetCharactersCharacterIDBookmarksGatewayTimeout() *GetCharactersCharacterIDBookmarksGatewayTimeout {
	return &GetCharactersCharacterIDBookmarksGatewayTimeout{}
}

/*GetCharactersCharacterIDBookmarksGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDBookmarksGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDBookmarksGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/][%d] getCharactersCharacterIdBookmarksGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
