// Code generated by go-swagger; DO NOT EDIT.

package bookmarks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDBookmarksFoldersReader is a Reader for the GetCharactersCharacterIDBookmarksFolders structure.
type GetCharactersCharacterIDBookmarksFoldersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDBookmarksFoldersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDBookmarksFoldersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDBookmarksFoldersNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDBookmarksFoldersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDBookmarksFoldersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDBookmarksFoldersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDBookmarksFoldersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDBookmarksFoldersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDBookmarksFoldersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDBookmarksFoldersOK creates a GetCharactersCharacterIDBookmarksFoldersOK with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersOK() *GetCharactersCharacterIDBookmarksFoldersOK {
	return &GetCharactersCharacterIDBookmarksFoldersOK{
		XPages: 1,
	}
}

/*GetCharactersCharacterIDBookmarksFoldersOK handles this case with default header values.

List of bookmark folders
*/
type GetCharactersCharacterIDBookmarksFoldersOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetCharactersCharacterIDBookmarksFoldersOKBodyItems
}

func (o *GetCharactersCharacterIDBookmarksFoldersOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksFoldersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersNotModified creates a GetCharactersCharacterIDBookmarksFoldersNotModified with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersNotModified() *GetCharactersCharacterIDBookmarksFoldersNotModified {
	return &GetCharactersCharacterIDBookmarksFoldersNotModified{}
}

/*GetCharactersCharacterIDBookmarksFoldersNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDBookmarksFoldersNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDBookmarksFoldersNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersNotModified ", 304)
}

func (o *GetCharactersCharacterIDBookmarksFoldersNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersBadRequest creates a GetCharactersCharacterIDBookmarksFoldersBadRequest with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersBadRequest() *GetCharactersCharacterIDBookmarksFoldersBadRequest {
	return &GetCharactersCharacterIDBookmarksFoldersBadRequest{}
}

/*GetCharactersCharacterIDBookmarksFoldersBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDBookmarksFoldersBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDBookmarksFoldersBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksFoldersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersUnauthorized creates a GetCharactersCharacterIDBookmarksFoldersUnauthorized with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersUnauthorized() *GetCharactersCharacterIDBookmarksFoldersUnauthorized {
	return &GetCharactersCharacterIDBookmarksFoldersUnauthorized{}
}

/*GetCharactersCharacterIDBookmarksFoldersUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDBookmarksFoldersUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDBookmarksFoldersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksFoldersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersForbidden creates a GetCharactersCharacterIDBookmarksFoldersForbidden with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersForbidden() *GetCharactersCharacterIDBookmarksFoldersForbidden {
	return &GetCharactersCharacterIDBookmarksFoldersForbidden{}
}

/*GetCharactersCharacterIDBookmarksFoldersForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDBookmarksFoldersForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDBookmarksFoldersForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksFoldersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm creates a GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm() *GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm {
	return &GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm{}
}

/*GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksFoldersEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersInternalServerError creates a GetCharactersCharacterIDBookmarksFoldersInternalServerError with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersInternalServerError() *GetCharactersCharacterIDBookmarksFoldersInternalServerError {
	return &GetCharactersCharacterIDBookmarksFoldersInternalServerError{}
}

/*GetCharactersCharacterIDBookmarksFoldersInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDBookmarksFoldersInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDBookmarksFoldersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksFoldersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersServiceUnavailable creates a GetCharactersCharacterIDBookmarksFoldersServiceUnavailable with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersServiceUnavailable() *GetCharactersCharacterIDBookmarksFoldersServiceUnavailable {
	return &GetCharactersCharacterIDBookmarksFoldersServiceUnavailable{}
}

/*GetCharactersCharacterIDBookmarksFoldersServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDBookmarksFoldersServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDBookmarksFoldersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksFoldersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDBookmarksFoldersGatewayTimeout creates a GetCharactersCharacterIDBookmarksFoldersGatewayTimeout with default headers values
func NewGetCharactersCharacterIDBookmarksFoldersGatewayTimeout() *GetCharactersCharacterIDBookmarksFoldersGatewayTimeout {
	return &GetCharactersCharacterIDBookmarksFoldersGatewayTimeout{}
}

/*GetCharactersCharacterIDBookmarksFoldersGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDBookmarksFoldersGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDBookmarksFoldersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/bookmarks/folders/][%d] getCharactersCharacterIdBookmarksFoldersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDBookmarksFoldersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
