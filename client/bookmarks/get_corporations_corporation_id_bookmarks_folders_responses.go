// Code generated by go-swagger; DO NOT EDIT.

package bookmarks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationsCorporationIDBookmarksFoldersReader is a Reader for the GetCorporationsCorporationIDBookmarksFolders structure.
type GetCorporationsCorporationIDBookmarksFoldersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDBookmarksFoldersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationsCorporationIDBookmarksFoldersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationsCorporationIDBookmarksFoldersNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationsCorporationIDBookmarksFoldersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCorporationsCorporationIDBookmarksFoldersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCorporationsCorporationIDBookmarksFoldersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationsCorporationIDBookmarksFoldersEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationsCorporationIDBookmarksFoldersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationsCorporationIDBookmarksFoldersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationsCorporationIDBookmarksFoldersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDBookmarksFoldersOK creates a GetCorporationsCorporationIDBookmarksFoldersOK with default headers values
func NewGetCorporationsCorporationIDBookmarksFoldersOK() *GetCorporationsCorporationIDBookmarksFoldersOK {
	return &GetCorporationsCorporationIDBookmarksFoldersOK{
		XPages: 1,
	}
}

/*GetCorporationsCorporationIDBookmarksFoldersOK handles this case with default header values.

List of corporation owned bookmark folders
*/
type GetCorporationsCorporationIDBookmarksFoldersOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetCorporationsCorporationIDBookmarksFoldersOKBodyItems
}

func (o *GetCorporationsCorporationIDBookmarksFoldersOK) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/bookmarks/folders/][%d] getCorporationsCorporationIdBookmarksFoldersOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDBookmarksFoldersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksFoldersNotModified creates a GetCorporationsCorporationIDBookmarksFoldersNotModified with default headers values
func NewGetCorporationsCorporationIDBookmarksFoldersNotModified() *GetCorporationsCorporationIDBookmarksFoldersNotModified {
	return &GetCorporationsCorporationIDBookmarksFoldersNotModified{}
}

/*GetCorporationsCorporationIDBookmarksFoldersNotModified handles this case with default header values.

Not modified
*/
type GetCorporationsCorporationIDBookmarksFoldersNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDBookmarksFoldersNotModified) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/bookmarks/folders/][%d] getCorporationsCorporationIdBookmarksFoldersNotModified ", 304)
}

func (o *GetCorporationsCorporationIDBookmarksFoldersNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationsCorporationIDBookmarksFoldersBadRequest creates a GetCorporationsCorporationIDBookmarksFoldersBadRequest with default headers values
func NewGetCorporationsCorporationIDBookmarksFoldersBadRequest() *GetCorporationsCorporationIDBookmarksFoldersBadRequest {
	return &GetCorporationsCorporationIDBookmarksFoldersBadRequest{}
}

/*GetCorporationsCorporationIDBookmarksFoldersBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationsCorporationIDBookmarksFoldersBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDBookmarksFoldersBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/bookmarks/folders/][%d] getCorporationsCorporationIdBookmarksFoldersBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDBookmarksFoldersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksFoldersUnauthorized creates a GetCorporationsCorporationIDBookmarksFoldersUnauthorized with default headers values
func NewGetCorporationsCorporationIDBookmarksFoldersUnauthorized() *GetCorporationsCorporationIDBookmarksFoldersUnauthorized {
	return &GetCorporationsCorporationIDBookmarksFoldersUnauthorized{}
}

/*GetCorporationsCorporationIDBookmarksFoldersUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDBookmarksFoldersUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationsCorporationIDBookmarksFoldersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/bookmarks/folders/][%d] getCorporationsCorporationIdBookmarksFoldersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDBookmarksFoldersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksFoldersForbidden creates a GetCorporationsCorporationIDBookmarksFoldersForbidden with default headers values
func NewGetCorporationsCorporationIDBookmarksFoldersForbidden() *GetCorporationsCorporationIDBookmarksFoldersForbidden {
	return &GetCorporationsCorporationIDBookmarksFoldersForbidden{}
}

/*GetCorporationsCorporationIDBookmarksFoldersForbidden handles this case with default header values.

Forbidden
*/
type GetCorporationsCorporationIDBookmarksFoldersForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationsCorporationIDBookmarksFoldersForbidden) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/bookmarks/folders/][%d] getCorporationsCorporationIdBookmarksFoldersForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDBookmarksFoldersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksFoldersEnhanceYourCalm creates a GetCorporationsCorporationIDBookmarksFoldersEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDBookmarksFoldersEnhanceYourCalm() *GetCorporationsCorporationIDBookmarksFoldersEnhanceYourCalm {
	return &GetCorporationsCorporationIDBookmarksFoldersEnhanceYourCalm{}
}

/*GetCorporationsCorporationIDBookmarksFoldersEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationsCorporationIDBookmarksFoldersEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDBookmarksFoldersEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/bookmarks/folders/][%d] getCorporationsCorporationIdBookmarksFoldersEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDBookmarksFoldersEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksFoldersInternalServerError creates a GetCorporationsCorporationIDBookmarksFoldersInternalServerError with default headers values
func NewGetCorporationsCorporationIDBookmarksFoldersInternalServerError() *GetCorporationsCorporationIDBookmarksFoldersInternalServerError {
	return &GetCorporationsCorporationIDBookmarksFoldersInternalServerError{}
}

/*GetCorporationsCorporationIDBookmarksFoldersInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationsCorporationIDBookmarksFoldersInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDBookmarksFoldersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/bookmarks/folders/][%d] getCorporationsCorporationIdBookmarksFoldersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDBookmarksFoldersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksFoldersServiceUnavailable creates a GetCorporationsCorporationIDBookmarksFoldersServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDBookmarksFoldersServiceUnavailable() *GetCorporationsCorporationIDBookmarksFoldersServiceUnavailable {
	return &GetCorporationsCorporationIDBookmarksFoldersServiceUnavailable{}
}

/*GetCorporationsCorporationIDBookmarksFoldersServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDBookmarksFoldersServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDBookmarksFoldersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/bookmarks/folders/][%d] getCorporationsCorporationIdBookmarksFoldersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDBookmarksFoldersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDBookmarksFoldersGatewayTimeout creates a GetCorporationsCorporationIDBookmarksFoldersGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDBookmarksFoldersGatewayTimeout() *GetCorporationsCorporationIDBookmarksFoldersGatewayTimeout {
	return &GetCorporationsCorporationIDBookmarksFoldersGatewayTimeout{}
}

/*GetCorporationsCorporationIDBookmarksFoldersGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDBookmarksFoldersGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDBookmarksFoldersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/bookmarks/folders/][%d] getCorporationsCorporationIdBookmarksFoldersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDBookmarksFoldersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
