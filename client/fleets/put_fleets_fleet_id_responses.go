// Code generated by go-swagger; DO NOT EDIT.

package fleets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// PutFleetsFleetIDReader is a Reader for the PutFleetsFleetID structure.
type PutFleetsFleetIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutFleetsFleetIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPutFleetsFleetIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutFleetsFleetIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutFleetsFleetIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutFleetsFleetIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutFleetsFleetIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutFleetsFleetIDNoContent creates a PutFleetsFleetIDNoContent with default headers values
func NewPutFleetsFleetIDNoContent() *PutFleetsFleetIDNoContent {
	return &PutFleetsFleetIDNoContent{}
}

/*PutFleetsFleetIDNoContent handles this case with default header values.

Fleet updated
*/
type PutFleetsFleetIDNoContent struct {
}

func (o *PutFleetsFleetIDNoContent) Error() string {
	return fmt.Sprintf("[PUT /fleets/{fleet_id}/][%d] putFleetsFleetIdNoContent ", 204)
}

func (o *PutFleetsFleetIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutFleetsFleetIDBadRequest creates a PutFleetsFleetIDBadRequest with default headers values
func NewPutFleetsFleetIDBadRequest() *PutFleetsFleetIDBadRequest {
	return &PutFleetsFleetIDBadRequest{}
}

/*PutFleetsFleetIDBadRequest handles this case with default header values.

Invalid request body
*/
type PutFleetsFleetIDBadRequest struct {
	Payload PutFleetsFleetIDBadRequestBody
}

func (o *PutFleetsFleetIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /fleets/{fleet_id}/][%d] putFleetsFleetIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutFleetsFleetIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFleetsFleetIDForbidden creates a PutFleetsFleetIDForbidden with default headers values
func NewPutFleetsFleetIDForbidden() *PutFleetsFleetIDForbidden {
	return &PutFleetsFleetIDForbidden{}
}

/*PutFleetsFleetIDForbidden handles this case with default header values.

Forbidden
*/
type PutFleetsFleetIDForbidden struct {
	Payload *models.Forbidden
}

func (o *PutFleetsFleetIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /fleets/{fleet_id}/][%d] putFleetsFleetIdForbidden  %+v", 403, o.Payload)
}

func (o *PutFleetsFleetIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFleetsFleetIDNotFound creates a PutFleetsFleetIDNotFound with default headers values
func NewPutFleetsFleetIDNotFound() *PutFleetsFleetIDNotFound {
	return &PutFleetsFleetIDNotFound{}
}

/*PutFleetsFleetIDNotFound handles this case with default header values.

The fleet does not exist or you don't have access to it
*/
type PutFleetsFleetIDNotFound struct {
	Payload PutFleetsFleetIDNotFoundBody
}

func (o *PutFleetsFleetIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /fleets/{fleet_id}/][%d] putFleetsFleetIdNotFound  %+v", 404, o.Payload)
}

func (o *PutFleetsFleetIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutFleetsFleetIDInternalServerError creates a PutFleetsFleetIDInternalServerError with default headers values
func NewPutFleetsFleetIDInternalServerError() *PutFleetsFleetIDInternalServerError {
	return &PutFleetsFleetIDInternalServerError{}
}

/*PutFleetsFleetIDInternalServerError handles this case with default header values.

Internal server error
*/
type PutFleetsFleetIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *PutFleetsFleetIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /fleets/{fleet_id}/][%d] putFleetsFleetIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutFleetsFleetIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PutFleetsFleetIDBadRequestBody put_fleets_fleet_id_bad_request
//
// Bad request
swagger:model PutFleetsFleetIDBadRequestBody
*/

type PutFleetsFleetIDBadRequestBody struct {

	// put_fleets_fleet_id_400_bad_request
	//
	// Bad request message
	// Required: true
	Error *string `json:"error"`
}

/* polymorph PutFleetsFleetIDBadRequestBody error false */

// Validate validates this put fleets fleet ID bad request body
func (o *PutFleetsFleetIDBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutFleetsFleetIDBadRequestBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("putFleetsFleetIdBadRequest"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PutFleetsFleetIDBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutFleetsFleetIDBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PutFleetsFleetIDBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutFleetsFleetIDBody put_fleets_fleet_id_new_settings
//
// new_settings object
swagger:model PutFleetsFleetIDBody
*/

type PutFleetsFleetIDBody struct {

	// put_fleets_fleet_id_is_free_move
	//
	// Should free-move be enabled in the fleet
	// Required: true
	IsFreeMove *bool `json:"is_free_move"`

	// put_fleets_fleet_id_motd
	//
	// New fleet MOTD in CCP flavoured HTML
	// Required: true
	Motd *string `json:"motd"`
}

/* polymorph PutFleetsFleetIDBody is_free_move false */

/* polymorph PutFleetsFleetIDBody motd false */

// MarshalBinary interface implementation
func (o *PutFleetsFleetIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutFleetsFleetIDBody) UnmarshalBinary(b []byte) error {
	var res PutFleetsFleetIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutFleetsFleetIDNotFoundBody put_fleets_fleet_id_not_found
//
// Not found
swagger:model PutFleetsFleetIDNotFoundBody
*/

type PutFleetsFleetIDNotFoundBody struct {

	// put_fleets_fleet_id_404_not_found
	//
	// Not found message
	// Required: true
	Error *string `json:"error"`
}

/* polymorph PutFleetsFleetIDNotFoundBody error false */

// Validate validates this put fleets fleet ID not found body
func (o *PutFleetsFleetIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutFleetsFleetIDNotFoundBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("putFleetsFleetIdNotFound"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PutFleetsFleetIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutFleetsFleetIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PutFleetsFleetIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
