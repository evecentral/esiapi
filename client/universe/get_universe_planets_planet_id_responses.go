package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/esiswagger/models"
)

// GetUniversePlanetsPlanetIDReader is a Reader for the GetUniversePlanetsPlanetID structure.
type GetUniversePlanetsPlanetIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniversePlanetsPlanetIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniversePlanetsPlanetIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetUniversePlanetsPlanetIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniversePlanetsPlanetIDOK creates a GetUniversePlanetsPlanetIDOK with default headers values
func NewGetUniversePlanetsPlanetIDOK() *GetUniversePlanetsPlanetIDOK {
	return &GetUniversePlanetsPlanetIDOK{}
}

/*GetUniversePlanetsPlanetIDOK handles this case with default header values.

Data about a planet
*/
type GetUniversePlanetsPlanetIDOK struct {
	Payload *models.GetUniversePlanetsPlanetIDOk
}

func (o *GetUniversePlanetsPlanetIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/planets/{planet_id}/][%d] getUniversePlanetsPlanetIdOK  %+v", 200, o.Payload)
}

func (o *GetUniversePlanetsPlanetIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniversePlanetsPlanetIDOk)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniversePlanetsPlanetIDInternalServerError creates a GetUniversePlanetsPlanetIDInternalServerError with default headers values
func NewGetUniversePlanetsPlanetIDInternalServerError() *GetUniversePlanetsPlanetIDInternalServerError {
	return &GetUniversePlanetsPlanetIDInternalServerError{}
}

/*GetUniversePlanetsPlanetIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniversePlanetsPlanetIDInternalServerError struct {
	Payload *models.GetUniversePlanetsPlanetIDInternalServerError
}

func (o *GetUniversePlanetsPlanetIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/planets/{planet_id}/][%d] getUniversePlanetsPlanetIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniversePlanetsPlanetIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniversePlanetsPlanetIDInternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
