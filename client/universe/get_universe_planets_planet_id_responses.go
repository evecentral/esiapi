// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetUniversePlanetsPlanetIDReader is a Reader for the GetUniversePlanetsPlanetID structure.
type GetUniversePlanetsPlanetIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniversePlanetsPlanetIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniversePlanetsPlanetIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetUniversePlanetsPlanetIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniversePlanetsPlanetIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniversePlanetsPlanetIDOK creates a GetUniversePlanetsPlanetIDOK with default headers values
func NewGetUniversePlanetsPlanetIDOK() *GetUniversePlanetsPlanetIDOK {
	return &GetUniversePlanetsPlanetIDOK{}
}

/*GetUniversePlanetsPlanetIDOK handles this case with default header values.

Information about a planet
*/
type GetUniversePlanetsPlanetIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload GetUniversePlanetsPlanetIDOKBody
}

func (o *GetUniversePlanetsPlanetIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/planets/{planet_id}/][%d] getUniversePlanetsPlanetIdOK  %+v", 200, o.Payload)
}

func (o *GetUniversePlanetsPlanetIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniversePlanetsPlanetIDNotFound creates a GetUniversePlanetsPlanetIDNotFound with default headers values
func NewGetUniversePlanetsPlanetIDNotFound() *GetUniversePlanetsPlanetIDNotFound {
	return &GetUniversePlanetsPlanetIDNotFound{}
}

/*GetUniversePlanetsPlanetIDNotFound handles this case with default header values.

Planet not found
*/
type GetUniversePlanetsPlanetIDNotFound struct {
	Payload GetUniversePlanetsPlanetIDNotFoundBody
}

func (o *GetUniversePlanetsPlanetIDNotFound) Error() string {
	return fmt.Sprintf("[GET /universe/planets/{planet_id}/][%d] getUniversePlanetsPlanetIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniversePlanetsPlanetIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniversePlanetsPlanetIDInternalServerError creates a GetUniversePlanetsPlanetIDInternalServerError with default headers values
func NewGetUniversePlanetsPlanetIDInternalServerError() *GetUniversePlanetsPlanetIDInternalServerError {
	return &GetUniversePlanetsPlanetIDInternalServerError{}
}

/*GetUniversePlanetsPlanetIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniversePlanetsPlanetIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniversePlanetsPlanetIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/planets/{planet_id}/][%d] getUniversePlanetsPlanetIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniversePlanetsPlanetIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetUniversePlanetsPlanetIDNotFoundBody get_universe_planets_planet_id_not_found
//
// Not found
swagger:model GetUniversePlanetsPlanetIDNotFoundBody
*/

type GetUniversePlanetsPlanetIDNotFoundBody struct {

	// get_universe_planets_planet_id_404_not_found
	//
	// Not found message
	// Required: true
	Error *string `json:"error"`
}

/* polymorph GetUniversePlanetsPlanetIDNotFoundBody error false */

// Validate validates this get universe planets planet ID not found body
func (o *GetUniversePlanetsPlanetIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniversePlanetsPlanetIDNotFoundBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getUniversePlanetsPlanetIdNotFound"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUniversePlanetsPlanetIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniversePlanetsPlanetIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetUniversePlanetsPlanetIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUniversePlanetsPlanetIDOKBody get_universe_planets_planet_id_ok
//
// 200 ok object
swagger:model GetUniversePlanetsPlanetIDOKBody
*/

type GetUniversePlanetsPlanetIDOKBody struct {

	// get_universe_planets_planet_id_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`

	// get_universe_planets_planet_id_planet_id
	//
	// planet_id integer
	// Required: true
	PlanetID *int32 `json:"planet_id"`

	// position
	// Required: true
	Position *GetUniversePlanetsPlanetIDOKBodyPosition `json:"position"`

	// get_universe_planets_planet_id_system_id
	//
	// The solar system this planet is in
	// Required: true
	SystemID *int32 `json:"system_id"`

	// get_universe_planets_planet_id_type_id
	//
	// type_id integer
	// Required: true
	TypeID *int32 `json:"type_id"`
}

/* polymorph GetUniversePlanetsPlanetIDOKBody name false */

/* polymorph GetUniversePlanetsPlanetIDOKBody planet_id false */

/* polymorph GetUniversePlanetsPlanetIDOKBody position false */

/* polymorph GetUniversePlanetsPlanetIDOKBody system_id false */

/* polymorph GetUniversePlanetsPlanetIDOKBody type_id false */

// Validate validates this get universe planets planet ID o k body
func (o *GetUniversePlanetsPlanetIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePlanetID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePosition(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateSystemID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniversePlanetsPlanetIDOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getUniversePlanetsPlanetIdOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetUniversePlanetsPlanetIDOKBody) validatePlanetID(formats strfmt.Registry) error {

	if err := validate.Required("getUniversePlanetsPlanetIdOK"+"."+"planet_id", "body", o.PlanetID); err != nil {
		return err
	}

	return nil
}

func (o *GetUniversePlanetsPlanetIDOKBody) validatePosition(formats strfmt.Registry) error {

	if err := validate.Required("getUniversePlanetsPlanetIdOK"+"."+"position", "body", o.Position); err != nil {
		return err
	}

	if o.Position != nil {

		if err := o.Position.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getUniversePlanetsPlanetIdOK" + "." + "position")
			}
			return err
		}
	}

	return nil
}

func (o *GetUniversePlanetsPlanetIDOKBody) validateSystemID(formats strfmt.Registry) error {

	if err := validate.Required("getUniversePlanetsPlanetIdOK"+"."+"system_id", "body", o.SystemID); err != nil {
		return err
	}

	return nil
}

func (o *GetUniversePlanetsPlanetIDOKBody) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("getUniversePlanetsPlanetIdOK"+"."+"type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUniversePlanetsPlanetIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniversePlanetsPlanetIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetUniversePlanetsPlanetIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUniversePlanetsPlanetIDOKBodyPosition get_universe_planets_planet_id_position
//
// position object
swagger:model GetUniversePlanetsPlanetIDOKBodyPosition
*/

type GetUniversePlanetsPlanetIDOKBodyPosition struct {

	// get_universe_planets_planet_id_x
	//
	// x number
	// Required: true
	X *float32 `json:"x"`

	// get_universe_planets_planet_id_y
	//
	// y number
	// Required: true
	Y *float32 `json:"y"`

	// get_universe_planets_planet_id_z
	//
	// z number
	// Required: true
	Z *float32 `json:"z"`
}

/* polymorph GetUniversePlanetsPlanetIDOKBodyPosition x false */

/* polymorph GetUniversePlanetsPlanetIDOKBodyPosition y false */

/* polymorph GetUniversePlanetsPlanetIDOKBodyPosition z false */

// Validate validates this get universe planets planet ID o k body position
func (o *GetUniversePlanetsPlanetIDOKBodyPosition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateX(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateY(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateZ(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniversePlanetsPlanetIDOKBodyPosition) validateX(formats strfmt.Registry) error {

	if err := validate.Required("getUniversePlanetsPlanetIdOK"+"."+"position"+"."+"x", "body", o.X); err != nil {
		return err
	}

	return nil
}

func (o *GetUniversePlanetsPlanetIDOKBodyPosition) validateY(formats strfmt.Registry) error {

	if err := validate.Required("getUniversePlanetsPlanetIdOK"+"."+"position"+"."+"y", "body", o.Y); err != nil {
		return err
	}

	return nil
}

func (o *GetUniversePlanetsPlanetIDOKBodyPosition) validateZ(formats strfmt.Registry) error {

	if err := validate.Required("getUniversePlanetsPlanetIdOK"+"."+"position"+"."+"z", "body", o.Z); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUniversePlanetsPlanetIDOKBodyPosition) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniversePlanetsPlanetIDOKBodyPosition) UnmarshalBinary(b []byte) error {
	var res GetUniversePlanetsPlanetIDOKBodyPosition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
