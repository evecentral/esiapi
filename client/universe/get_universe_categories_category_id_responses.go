// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetUniverseCategoriesCategoryIDReader is a Reader for the GetUniverseCategoriesCategoryID structure.
type GetUniverseCategoriesCategoryIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseCategoriesCategoryIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseCategoriesCategoryIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetUniverseCategoriesCategoryIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseCategoriesCategoryIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseCategoriesCategoryIDOK creates a GetUniverseCategoriesCategoryIDOK with default headers values
func NewGetUniverseCategoriesCategoryIDOK() *GetUniverseCategoriesCategoryIDOK {
	return &GetUniverseCategoriesCategoryIDOK{}
}

/*GetUniverseCategoriesCategoryIDOK handles this case with default header values.

Information about an item category
*/
type GetUniverseCategoriesCategoryIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*The language used in the response
	 */
	ContentLanguage string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload GetUniverseCategoriesCategoryIDOKBody
}

func (o *GetUniverseCategoriesCategoryIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseCategoriesCategoryIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Content-Language
	o.ContentLanguage = response.GetHeader("Content-Language")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesCategoryIDNotFound creates a GetUniverseCategoriesCategoryIDNotFound with default headers values
func NewGetUniverseCategoriesCategoryIDNotFound() *GetUniverseCategoriesCategoryIDNotFound {
	return &GetUniverseCategoriesCategoryIDNotFound{}
}

/*GetUniverseCategoriesCategoryIDNotFound handles this case with default header values.

Category not found
*/
type GetUniverseCategoriesCategoryIDNotFound struct {
	Payload GetUniverseCategoriesCategoryIDNotFoundBody
}

func (o *GetUniverseCategoriesCategoryIDNotFound) Error() string {
	return fmt.Sprintf("[GET /universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseCategoriesCategoryIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseCategoriesCategoryIDInternalServerError creates a GetUniverseCategoriesCategoryIDInternalServerError with default headers values
func NewGetUniverseCategoriesCategoryIDInternalServerError() *GetUniverseCategoriesCategoryIDInternalServerError {
	return &GetUniverseCategoriesCategoryIDInternalServerError{}
}

/*GetUniverseCategoriesCategoryIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseCategoriesCategoryIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseCategoriesCategoryIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/categories/{category_id}/][%d] getUniverseCategoriesCategoryIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseCategoriesCategoryIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetUniverseCategoriesCategoryIDNotFoundBody get_universe_categories_category_id_not_found
//
// Not found
swagger:model GetUniverseCategoriesCategoryIDNotFoundBody
*/

type GetUniverseCategoriesCategoryIDNotFoundBody struct {

	// get_universe_categories_category_id_404_not_found
	//
	// Not found message
	// Required: true
	Error *string `json:"error"`
}

/* polymorph GetUniverseCategoriesCategoryIDNotFoundBody error false */

// Validate validates this get universe categories category ID not found body
func (o *GetUniverseCategoriesCategoryIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseCategoriesCategoryIDNotFoundBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseCategoriesCategoryIdNotFound"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUniverseCategoriesCategoryIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniverseCategoriesCategoryIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetUniverseCategoriesCategoryIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUniverseCategoriesCategoryIDOKBody get_universe_categories_category_id_ok
//
// 200 ok object
swagger:model GetUniverseCategoriesCategoryIDOKBody
*/

type GetUniverseCategoriesCategoryIDOKBody struct {

	// get_universe_categories_category_id_category_id
	//
	// category_id integer
	// Required: true
	CategoryID *int32 `json:"category_id"`

	// get_universe_categories_category_id_groups
	//
	// groups array
	// Required: true
	// Max Items: 10000
	Groups []int32 `json:"groups"`

	// get_universe_categories_category_id_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`

	// get_universe_categories_category_id_published
	//
	// published boolean
	// Required: true
	Published *bool `json:"published"`
}

/* polymorph GetUniverseCategoriesCategoryIDOKBody category_id false */

/* polymorph GetUniverseCategoriesCategoryIDOKBody groups false */

/* polymorph GetUniverseCategoriesCategoryIDOKBody name false */

/* polymorph GetUniverseCategoriesCategoryIDOKBody published false */

// Validate validates this get universe categories category ID o k body
func (o *GetUniverseCategoriesCategoryIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCategoryID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateGroups(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePublished(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseCategoriesCategoryIDOKBody) validateCategoryID(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseCategoriesCategoryIdOK"+"."+"category_id", "body", o.CategoryID); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseCategoriesCategoryIDOKBody) validateGroups(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseCategoriesCategoryIdOK"+"."+"groups", "body", o.Groups); err != nil {
		return err
	}

	iGroupsSize := int64(len(o.Groups))

	if err := validate.MaxItems("getUniverseCategoriesCategoryIdOK"+"."+"groups", "body", iGroupsSize, 10000); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseCategoriesCategoryIDOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseCategoriesCategoryIdOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseCategoriesCategoryIDOKBody) validatePublished(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseCategoriesCategoryIdOK"+"."+"published", "body", o.Published); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUniverseCategoriesCategoryIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniverseCategoriesCategoryIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetUniverseCategoriesCategoryIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
