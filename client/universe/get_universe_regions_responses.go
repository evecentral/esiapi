// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetUniverseRegionsReader is a Reader for the GetUniverseRegions structure.
type GetUniverseRegionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseRegionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseRegionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetUniverseRegionsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetUniverseRegionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetUniverseRegionsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseRegionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetUniverseRegionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetUniverseRegionsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseRegionsOK creates a GetUniverseRegionsOK with default headers values
func NewGetUniverseRegionsOK() *GetUniverseRegionsOK {
	return &GetUniverseRegionsOK{}
}

/*GetUniverseRegionsOK handles this case with default header values.

A list of region ids
*/
type GetUniverseRegionsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []int32
}

func (o *GetUniverseRegionsOK) Error() string {
	return fmt.Sprintf("[GET /universe/regions/][%d] getUniverseRegionsOK  %+v", 200, o.Payload)
}

func (o *GetUniverseRegionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsNotModified creates a GetUniverseRegionsNotModified with default headers values
func NewGetUniverseRegionsNotModified() *GetUniverseRegionsNotModified {
	return &GetUniverseRegionsNotModified{}
}

/*GetUniverseRegionsNotModified handles this case with default header values.

Not modified
*/
type GetUniverseRegionsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetUniverseRegionsNotModified) Error() string {
	return fmt.Sprintf("[GET /universe/regions/][%d] getUniverseRegionsNotModified ", 304)
}

func (o *GetUniverseRegionsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetUniverseRegionsBadRequest creates a GetUniverseRegionsBadRequest with default headers values
func NewGetUniverseRegionsBadRequest() *GetUniverseRegionsBadRequest {
	return &GetUniverseRegionsBadRequest{}
}

/*GetUniverseRegionsBadRequest handles this case with default header values.

Bad request
*/
type GetUniverseRegionsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetUniverseRegionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /universe/regions/][%d] getUniverseRegionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseRegionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsEnhanceYourCalm creates a GetUniverseRegionsEnhanceYourCalm with default headers values
func NewGetUniverseRegionsEnhanceYourCalm() *GetUniverseRegionsEnhanceYourCalm {
	return &GetUniverseRegionsEnhanceYourCalm{}
}

/*GetUniverseRegionsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetUniverseRegionsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetUniverseRegionsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /universe/regions/][%d] getUniverseRegionsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseRegionsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsInternalServerError creates a GetUniverseRegionsInternalServerError with default headers values
func NewGetUniverseRegionsInternalServerError() *GetUniverseRegionsInternalServerError {
	return &GetUniverseRegionsInternalServerError{}
}

/*GetUniverseRegionsInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseRegionsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseRegionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/regions/][%d] getUniverseRegionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseRegionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsServiceUnavailable creates a GetUniverseRegionsServiceUnavailable with default headers values
func NewGetUniverseRegionsServiceUnavailable() *GetUniverseRegionsServiceUnavailable {
	return &GetUniverseRegionsServiceUnavailable{}
}

/*GetUniverseRegionsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetUniverseRegionsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetUniverseRegionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /universe/regions/][%d] getUniverseRegionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseRegionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsGatewayTimeout creates a GetUniverseRegionsGatewayTimeout with default headers values
func NewGetUniverseRegionsGatewayTimeout() *GetUniverseRegionsGatewayTimeout {
	return &GetUniverseRegionsGatewayTimeout{}
}

/*GetUniverseRegionsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetUniverseRegionsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetUniverseRegionsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /universe/regions/][%d] getUniverseRegionsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseRegionsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
