// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetUniverseRacesReader is a Reader for the GetUniverseRaces structure.
type GetUniverseRacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseRacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseRacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetUniverseRacesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetUniverseRacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetUniverseRacesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseRacesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetUniverseRacesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetUniverseRacesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseRacesOK creates a GetUniverseRacesOK with default headers values
func NewGetUniverseRacesOK() *GetUniverseRacesOK {
	return &GetUniverseRacesOK{}
}

/*GetUniverseRacesOK handles this case with default header values.

A list of character races
*/
type GetUniverseRacesOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*The language used in the response
	 */
	ContentLanguage string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetUniverseRacesOKBodyItems
}

func (o *GetUniverseRacesOK) Error() string {
	return fmt.Sprintf("[GET /universe/races/][%d] getUniverseRacesOK  %+v", 200, o.Payload)
}

func (o *GetUniverseRacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Content-Language
	o.ContentLanguage = response.GetHeader("Content-Language")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRacesNotModified creates a GetUniverseRacesNotModified with default headers values
func NewGetUniverseRacesNotModified() *GetUniverseRacesNotModified {
	return &GetUniverseRacesNotModified{}
}

/*GetUniverseRacesNotModified handles this case with default header values.

Not modified
*/
type GetUniverseRacesNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetUniverseRacesNotModified) Error() string {
	return fmt.Sprintf("[GET /universe/races/][%d] getUniverseRacesNotModified ", 304)
}

func (o *GetUniverseRacesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetUniverseRacesBadRequest creates a GetUniverseRacesBadRequest with default headers values
func NewGetUniverseRacesBadRequest() *GetUniverseRacesBadRequest {
	return &GetUniverseRacesBadRequest{}
}

/*GetUniverseRacesBadRequest handles this case with default header values.

Bad request
*/
type GetUniverseRacesBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetUniverseRacesBadRequest) Error() string {
	return fmt.Sprintf("[GET /universe/races/][%d] getUniverseRacesBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseRacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRacesEnhanceYourCalm creates a GetUniverseRacesEnhanceYourCalm with default headers values
func NewGetUniverseRacesEnhanceYourCalm() *GetUniverseRacesEnhanceYourCalm {
	return &GetUniverseRacesEnhanceYourCalm{}
}

/*GetUniverseRacesEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetUniverseRacesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetUniverseRacesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /universe/races/][%d] getUniverseRacesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseRacesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRacesInternalServerError creates a GetUniverseRacesInternalServerError with default headers values
func NewGetUniverseRacesInternalServerError() *GetUniverseRacesInternalServerError {
	return &GetUniverseRacesInternalServerError{}
}

/*GetUniverseRacesInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseRacesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseRacesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/races/][%d] getUniverseRacesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseRacesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRacesServiceUnavailable creates a GetUniverseRacesServiceUnavailable with default headers values
func NewGetUniverseRacesServiceUnavailable() *GetUniverseRacesServiceUnavailable {
	return &GetUniverseRacesServiceUnavailable{}
}

/*GetUniverseRacesServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetUniverseRacesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetUniverseRacesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /universe/races/][%d] getUniverseRacesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseRacesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRacesGatewayTimeout creates a GetUniverseRacesGatewayTimeout with default headers values
func NewGetUniverseRacesGatewayTimeout() *GetUniverseRacesGatewayTimeout {
	return &GetUniverseRacesGatewayTimeout{}
}

/*GetUniverseRacesGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetUniverseRacesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetUniverseRacesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /universe/races/][%d] getUniverseRacesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseRacesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
