// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetUniverseGraphicsGraphicIDReader is a Reader for the GetUniverseGraphicsGraphicID structure.
type GetUniverseGraphicsGraphicIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseGraphicsGraphicIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseGraphicsGraphicIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetUniverseGraphicsGraphicIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetUniverseGraphicsGraphicIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUniverseGraphicsGraphicIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetUniverseGraphicsGraphicIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseGraphicsGraphicIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetUniverseGraphicsGraphicIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetUniverseGraphicsGraphicIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseGraphicsGraphicIDOK creates a GetUniverseGraphicsGraphicIDOK with default headers values
func NewGetUniverseGraphicsGraphicIDOK() *GetUniverseGraphicsGraphicIDOK {
	return &GetUniverseGraphicsGraphicIDOK{}
}

/*GetUniverseGraphicsGraphicIDOK handles this case with default header values.

Information about a graphic
*/
type GetUniverseGraphicsGraphicIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetUniverseGraphicsGraphicIDOKBody
}

func (o *GetUniverseGraphicsGraphicIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/graphics/{graphic_id}/][%d] getUniverseGraphicsGraphicIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseGraphicsGraphicIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetUniverseGraphicsGraphicIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseGraphicsGraphicIDNotModified creates a GetUniverseGraphicsGraphicIDNotModified with default headers values
func NewGetUniverseGraphicsGraphicIDNotModified() *GetUniverseGraphicsGraphicIDNotModified {
	return &GetUniverseGraphicsGraphicIDNotModified{}
}

/*GetUniverseGraphicsGraphicIDNotModified handles this case with default header values.

Not modified
*/
type GetUniverseGraphicsGraphicIDNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetUniverseGraphicsGraphicIDNotModified) Error() string {
	return fmt.Sprintf("[GET /universe/graphics/{graphic_id}/][%d] getUniverseGraphicsGraphicIdNotModified ", 304)
}

func (o *GetUniverseGraphicsGraphicIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetUniverseGraphicsGraphicIDBadRequest creates a GetUniverseGraphicsGraphicIDBadRequest with default headers values
func NewGetUniverseGraphicsGraphicIDBadRequest() *GetUniverseGraphicsGraphicIDBadRequest {
	return &GetUniverseGraphicsGraphicIDBadRequest{}
}

/*GetUniverseGraphicsGraphicIDBadRequest handles this case with default header values.

Bad request
*/
type GetUniverseGraphicsGraphicIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetUniverseGraphicsGraphicIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /universe/graphics/{graphic_id}/][%d] getUniverseGraphicsGraphicIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseGraphicsGraphicIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseGraphicsGraphicIDNotFound creates a GetUniverseGraphicsGraphicIDNotFound with default headers values
func NewGetUniverseGraphicsGraphicIDNotFound() *GetUniverseGraphicsGraphicIDNotFound {
	return &GetUniverseGraphicsGraphicIDNotFound{}
}

/*GetUniverseGraphicsGraphicIDNotFound handles this case with default header values.

Graphic not found
*/
type GetUniverseGraphicsGraphicIDNotFound struct {
	Payload *models.GetUniverseGraphicsGraphicIDNotFoundBody
}

func (o *GetUniverseGraphicsGraphicIDNotFound) Error() string {
	return fmt.Sprintf("[GET /universe/graphics/{graphic_id}/][%d] getUniverseGraphicsGraphicIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseGraphicsGraphicIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniverseGraphicsGraphicIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseGraphicsGraphicIDEnhanceYourCalm creates a GetUniverseGraphicsGraphicIDEnhanceYourCalm with default headers values
func NewGetUniverseGraphicsGraphicIDEnhanceYourCalm() *GetUniverseGraphicsGraphicIDEnhanceYourCalm {
	return &GetUniverseGraphicsGraphicIDEnhanceYourCalm{}
}

/*GetUniverseGraphicsGraphicIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetUniverseGraphicsGraphicIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetUniverseGraphicsGraphicIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /universe/graphics/{graphic_id}/][%d] getUniverseGraphicsGraphicIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseGraphicsGraphicIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseGraphicsGraphicIDInternalServerError creates a GetUniverseGraphicsGraphicIDInternalServerError with default headers values
func NewGetUniverseGraphicsGraphicIDInternalServerError() *GetUniverseGraphicsGraphicIDInternalServerError {
	return &GetUniverseGraphicsGraphicIDInternalServerError{}
}

/*GetUniverseGraphicsGraphicIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseGraphicsGraphicIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseGraphicsGraphicIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/graphics/{graphic_id}/][%d] getUniverseGraphicsGraphicIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseGraphicsGraphicIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseGraphicsGraphicIDServiceUnavailable creates a GetUniverseGraphicsGraphicIDServiceUnavailable with default headers values
func NewGetUniverseGraphicsGraphicIDServiceUnavailable() *GetUniverseGraphicsGraphicIDServiceUnavailable {
	return &GetUniverseGraphicsGraphicIDServiceUnavailable{}
}

/*GetUniverseGraphicsGraphicIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetUniverseGraphicsGraphicIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetUniverseGraphicsGraphicIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /universe/graphics/{graphic_id}/][%d] getUniverseGraphicsGraphicIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseGraphicsGraphicIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseGraphicsGraphicIDGatewayTimeout creates a GetUniverseGraphicsGraphicIDGatewayTimeout with default headers values
func NewGetUniverseGraphicsGraphicIDGatewayTimeout() *GetUniverseGraphicsGraphicIDGatewayTimeout {
	return &GetUniverseGraphicsGraphicIDGatewayTimeout{}
}

/*GetUniverseGraphicsGraphicIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetUniverseGraphicsGraphicIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetUniverseGraphicsGraphicIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /universe/graphics/{graphic_id}/][%d] getUniverseGraphicsGraphicIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseGraphicsGraphicIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
