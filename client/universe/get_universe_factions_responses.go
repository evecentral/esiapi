// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetUniverseFactionsReader is a Reader for the GetUniverseFactions structure.
type GetUniverseFactionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseFactionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseFactionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetUniverseFactionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseFactionsOK creates a GetUniverseFactionsOK with default headers values
func NewGetUniverseFactionsOK() *GetUniverseFactionsOK {
	return &GetUniverseFactionsOK{}
}

/*GetUniverseFactionsOK handles this case with default header values.

A list of factions
*/
type GetUniverseFactionsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*The language used in the response
	 */
	ContentLanguage string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetUniverseFactionsOKBodyItems0
}

func (o *GetUniverseFactionsOK) Error() string {
	return fmt.Sprintf("[GET /universe/factions/][%d] getUniverseFactionsOK  %+v", 200, o.Payload)
}

func (o *GetUniverseFactionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Content-Language
	o.ContentLanguage = response.GetHeader("Content-Language")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseFactionsInternalServerError creates a GetUniverseFactionsInternalServerError with default headers values
func NewGetUniverseFactionsInternalServerError() *GetUniverseFactionsInternalServerError {
	return &GetUniverseFactionsInternalServerError{}
}

/*GetUniverseFactionsInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseFactionsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseFactionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/factions/][%d] getUniverseFactionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseFactionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetUniverseFactionsOKBodyItems0 get_universe_factions_200_ok
//
// 200 ok object
swagger:model GetUniverseFactionsOKBodyItems0
*/

type GetUniverseFactionsOKBodyItems0 struct {

	// get_universe_factions_corporation_id
	//
	// corporation_id integer
	// Required: true
	CorporationID *int32 `json:"corporation_id"`

	// get_universe_factions_description
	//
	// description string
	// Required: true
	Description *string `json:"description"`

	// get_universe_factions_faction_id
	//
	// faction_id integer
	// Required: true
	FactionID *int32 `json:"faction_id"`

	// get_universe_factions_is_unique
	//
	// is_unique boolean
	// Required: true
	IsUnique *bool `json:"is_unique"`

	// get_universe_factions_militia_corporation_id
	//
	// militia_corporation_id integer
	MilitiaCorporationID int32 `json:"militia_corporation_id,omitempty"`

	// get_universe_factions_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`

	// get_universe_factions_size_factor
	//
	// size_factor number
	// Required: true
	SizeFactor *float32 `json:"size_factor"`

	// get_universe_factions_solar_system_id
	//
	// solar_system_id integer
	// Required: true
	SolarSystemID *int32 `json:"solar_system_id"`

	// get_universe_factions_station_count
	//
	// station_count integer
	// Required: true
	StationCount *int32 `json:"station_count"`

	// get_universe_factions_station_system_count
	//
	// station_system_count integer
	// Required: true
	StationSystemCount *int32 `json:"station_system_count"`
}

/* polymorph GetUniverseFactionsOKBodyItems0 corporation_id false */

/* polymorph GetUniverseFactionsOKBodyItems0 description false */

/* polymorph GetUniverseFactionsOKBodyItems0 faction_id false */

/* polymorph GetUniverseFactionsOKBodyItems0 is_unique false */

/* polymorph GetUniverseFactionsOKBodyItems0 militia_corporation_id false */

/* polymorph GetUniverseFactionsOKBodyItems0 name false */

/* polymorph GetUniverseFactionsOKBodyItems0 size_factor false */

/* polymorph GetUniverseFactionsOKBodyItems0 solar_system_id false */

/* polymorph GetUniverseFactionsOKBodyItems0 station_count false */

/* polymorph GetUniverseFactionsOKBodyItems0 station_system_count false */

// Validate validates this get universe factions o k body items0
func (o *GetUniverseFactionsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCorporationID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateDescription(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateFactionID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateIsUnique(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateSizeFactor(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateSolarSystemID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateStationCount(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateStationSystemCount(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseFactionsOKBodyItems0) validateCorporationID(formats strfmt.Registry) error {

	if err := validate.Required("corporation_id", "body", o.CorporationID); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseFactionsOKBodyItems0) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", o.Description); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseFactionsOKBodyItems0) validateFactionID(formats strfmt.Registry) error {

	if err := validate.Required("faction_id", "body", o.FactionID); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseFactionsOKBodyItems0) validateIsUnique(formats strfmt.Registry) error {

	if err := validate.Required("is_unique", "body", o.IsUnique); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseFactionsOKBodyItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseFactionsOKBodyItems0) validateSizeFactor(formats strfmt.Registry) error {

	if err := validate.Required("size_factor", "body", o.SizeFactor); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseFactionsOKBodyItems0) validateSolarSystemID(formats strfmt.Registry) error {

	if err := validate.Required("solar_system_id", "body", o.SolarSystemID); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseFactionsOKBodyItems0) validateStationCount(formats strfmt.Registry) error {

	if err := validate.Required("station_count", "body", o.StationCount); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseFactionsOKBodyItems0) validateStationSystemCount(formats strfmt.Registry) error {

	if err := validate.Required("station_system_count", "body", o.StationSystemCount); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUniverseFactionsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniverseFactionsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetUniverseFactionsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
