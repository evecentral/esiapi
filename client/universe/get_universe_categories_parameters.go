// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetUniverseCategoriesParams creates a new GetUniverseCategoriesParams object
// with the default values initialized.
func NewGetUniverseCategoriesParams() *GetUniverseCategoriesParams {
	var (
		datasourceDefault = string("tranquility")
	)
	return &GetUniverseCategoriesParams{
		Datasource: &datasourceDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetUniverseCategoriesParamsWithTimeout creates a new GetUniverseCategoriesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetUniverseCategoriesParamsWithTimeout(timeout time.Duration) *GetUniverseCategoriesParams {
	var (
		datasourceDefault = string("tranquility")
	)
	return &GetUniverseCategoriesParams{
		Datasource: &datasourceDefault,

		timeout: timeout,
	}
}

// NewGetUniverseCategoriesParamsWithContext creates a new GetUniverseCategoriesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetUniverseCategoriesParamsWithContext(ctx context.Context) *GetUniverseCategoriesParams {
	var (
		datasourceDefault = string("tranquility")
	)
	return &GetUniverseCategoriesParams{
		Datasource: &datasourceDefault,

		Context: ctx,
	}
}

// NewGetUniverseCategoriesParamsWithHTTPClient creates a new GetUniverseCategoriesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetUniverseCategoriesParamsWithHTTPClient(client *http.Client) *GetUniverseCategoriesParams {
	var (
		datasourceDefault = string("tranquility")
	)
	return &GetUniverseCategoriesParams{
		Datasource: &datasourceDefault,
		HTTPClient: client,
	}
}

/*GetUniverseCategoriesParams contains all the parameters to send to the API endpoint
for the get universe categories operation typically these are written to a http.Request
*/
type GetUniverseCategoriesParams struct {

	/*XUserAgent
	  Client identifier, takes precedence over User-Agent

	*/
	XUserAgent *string
	/*Datasource
	  The server name you would like data from

	*/
	Datasource *string
	/*UserAgent
	  Client identifier, takes precedence over headers

	*/
	UserAgent *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get universe categories params
func (o *GetUniverseCategoriesParams) WithTimeout(timeout time.Duration) *GetUniverseCategoriesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get universe categories params
func (o *GetUniverseCategoriesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get universe categories params
func (o *GetUniverseCategoriesParams) WithContext(ctx context.Context) *GetUniverseCategoriesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get universe categories params
func (o *GetUniverseCategoriesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get universe categories params
func (o *GetUniverseCategoriesParams) WithHTTPClient(client *http.Client) *GetUniverseCategoriesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get universe categories params
func (o *GetUniverseCategoriesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXUserAgent adds the xUserAgent to the get universe categories params
func (o *GetUniverseCategoriesParams) WithXUserAgent(xUserAgent *string) *GetUniverseCategoriesParams {
	o.SetXUserAgent(xUserAgent)
	return o
}

// SetXUserAgent adds the xUserAgent to the get universe categories params
func (o *GetUniverseCategoriesParams) SetXUserAgent(xUserAgent *string) {
	o.XUserAgent = xUserAgent
}

// WithDatasource adds the datasource to the get universe categories params
func (o *GetUniverseCategoriesParams) WithDatasource(datasource *string) *GetUniverseCategoriesParams {
	o.SetDatasource(datasource)
	return o
}

// SetDatasource adds the datasource to the get universe categories params
func (o *GetUniverseCategoriesParams) SetDatasource(datasource *string) {
	o.Datasource = datasource
}

// WithUserAgent adds the userAgent to the get universe categories params
func (o *GetUniverseCategoriesParams) WithUserAgent(userAgent *string) *GetUniverseCategoriesParams {
	o.SetUserAgent(userAgent)
	return o
}

// SetUserAgent adds the userAgent to the get universe categories params
func (o *GetUniverseCategoriesParams) SetUserAgent(userAgent *string) {
	o.UserAgent = userAgent
}

// WriteToRequest writes these params to a swagger request
func (o *GetUniverseCategoriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XUserAgent != nil {

		// header param X-User-Agent
		if err := r.SetHeaderParam("X-User-Agent", *o.XUserAgent); err != nil {
			return err
		}

	}

	if o.Datasource != nil {

		// query param datasource
		var qrDatasource string
		if o.Datasource != nil {
			qrDatasource = *o.Datasource
		}
		qDatasource := qrDatasource
		if qDatasource != "" {
			if err := r.SetQueryParam("datasource", qDatasource); err != nil {
				return err
			}
		}

	}

	if o.UserAgent != nil {

		// query param user_agent
		var qrUserAgent string
		if o.UserAgent != nil {
			qrUserAgent = *o.UserAgent
		}
		qUserAgent := qrUserAgent
		if qUserAgent != "" {
			if err := r.SetQueryParam("user_agent", qUserAgent); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
