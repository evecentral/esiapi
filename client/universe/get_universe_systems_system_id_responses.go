// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetUniverseSystemsSystemIDReader is a Reader for the GetUniverseSystemsSystemID structure.
type GetUniverseSystemsSystemIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseSystemsSystemIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseSystemsSystemIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetUniverseSystemsSystemIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetUniverseSystemsSystemIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUniverseSystemsSystemIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetUniverseSystemsSystemIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseSystemsSystemIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetUniverseSystemsSystemIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetUniverseSystemsSystemIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseSystemsSystemIDOK creates a GetUniverseSystemsSystemIDOK with default headers values
func NewGetUniverseSystemsSystemIDOK() *GetUniverseSystemsSystemIDOK {
	return &GetUniverseSystemsSystemIDOK{}
}

/*GetUniverseSystemsSystemIDOK handles this case with default header values.

Information about a solar system
*/
type GetUniverseSystemsSystemIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*The language used in the response
	 */
	ContentLanguage string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetUniverseSystemsSystemIDOKBody
}

func (o *GetUniverseSystemsSystemIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/systems/{system_id}/][%d] getUniverseSystemsSystemIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseSystemsSystemIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Content-Language
	o.ContentLanguage = response.GetHeader("Content-Language")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetUniverseSystemsSystemIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsSystemIDNotModified creates a GetUniverseSystemsSystemIDNotModified with default headers values
func NewGetUniverseSystemsSystemIDNotModified() *GetUniverseSystemsSystemIDNotModified {
	return &GetUniverseSystemsSystemIDNotModified{}
}

/*GetUniverseSystemsSystemIDNotModified handles this case with default header values.

Not modified
*/
type GetUniverseSystemsSystemIDNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetUniverseSystemsSystemIDNotModified) Error() string {
	return fmt.Sprintf("[GET /universe/systems/{system_id}/][%d] getUniverseSystemsSystemIdNotModified ", 304)
}

func (o *GetUniverseSystemsSystemIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetUniverseSystemsSystemIDBadRequest creates a GetUniverseSystemsSystemIDBadRequest with default headers values
func NewGetUniverseSystemsSystemIDBadRequest() *GetUniverseSystemsSystemIDBadRequest {
	return &GetUniverseSystemsSystemIDBadRequest{}
}

/*GetUniverseSystemsSystemIDBadRequest handles this case with default header values.

Bad request
*/
type GetUniverseSystemsSystemIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetUniverseSystemsSystemIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /universe/systems/{system_id}/][%d] getUniverseSystemsSystemIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseSystemsSystemIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsSystemIDNotFound creates a GetUniverseSystemsSystemIDNotFound with default headers values
func NewGetUniverseSystemsSystemIDNotFound() *GetUniverseSystemsSystemIDNotFound {
	return &GetUniverseSystemsSystemIDNotFound{}
}

/*GetUniverseSystemsSystemIDNotFound handles this case with default header values.

Solar system not found
*/
type GetUniverseSystemsSystemIDNotFound struct {
	Payload *models.GetUniverseSystemsSystemIDNotFoundBody
}

func (o *GetUniverseSystemsSystemIDNotFound) Error() string {
	return fmt.Sprintf("[GET /universe/systems/{system_id}/][%d] getUniverseSystemsSystemIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseSystemsSystemIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniverseSystemsSystemIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsSystemIDEnhanceYourCalm creates a GetUniverseSystemsSystemIDEnhanceYourCalm with default headers values
func NewGetUniverseSystemsSystemIDEnhanceYourCalm() *GetUniverseSystemsSystemIDEnhanceYourCalm {
	return &GetUniverseSystemsSystemIDEnhanceYourCalm{}
}

/*GetUniverseSystemsSystemIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetUniverseSystemsSystemIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetUniverseSystemsSystemIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /universe/systems/{system_id}/][%d] getUniverseSystemsSystemIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseSystemsSystemIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsSystemIDInternalServerError creates a GetUniverseSystemsSystemIDInternalServerError with default headers values
func NewGetUniverseSystemsSystemIDInternalServerError() *GetUniverseSystemsSystemIDInternalServerError {
	return &GetUniverseSystemsSystemIDInternalServerError{}
}

/*GetUniverseSystemsSystemIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseSystemsSystemIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseSystemsSystemIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/systems/{system_id}/][%d] getUniverseSystemsSystemIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseSystemsSystemIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsSystemIDServiceUnavailable creates a GetUniverseSystemsSystemIDServiceUnavailable with default headers values
func NewGetUniverseSystemsSystemIDServiceUnavailable() *GetUniverseSystemsSystemIDServiceUnavailable {
	return &GetUniverseSystemsSystemIDServiceUnavailable{}
}

/*GetUniverseSystemsSystemIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetUniverseSystemsSystemIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetUniverseSystemsSystemIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /universe/systems/{system_id}/][%d] getUniverseSystemsSystemIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseSystemsSystemIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsSystemIDGatewayTimeout creates a GetUniverseSystemsSystemIDGatewayTimeout with default headers values
func NewGetUniverseSystemsSystemIDGatewayTimeout() *GetUniverseSystemsSystemIDGatewayTimeout {
	return &GetUniverseSystemsSystemIDGatewayTimeout{}
}

/*GetUniverseSystemsSystemIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetUniverseSystemsSystemIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetUniverseSystemsSystemIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /universe/systems/{system_id}/][%d] getUniverseSystemsSystemIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseSystemsSystemIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
