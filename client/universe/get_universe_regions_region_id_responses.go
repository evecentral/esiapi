// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetUniverseRegionsRegionIDReader is a Reader for the GetUniverseRegionsRegionID structure.
type GetUniverseRegionsRegionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseRegionsRegionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseRegionsRegionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetUniverseRegionsRegionIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetUniverseRegionsRegionIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUniverseRegionsRegionIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetUniverseRegionsRegionIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseRegionsRegionIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetUniverseRegionsRegionIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetUniverseRegionsRegionIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseRegionsRegionIDOK creates a GetUniverseRegionsRegionIDOK with default headers values
func NewGetUniverseRegionsRegionIDOK() *GetUniverseRegionsRegionIDOK {
	return &GetUniverseRegionsRegionIDOK{}
}

/*GetUniverseRegionsRegionIDOK handles this case with default header values.

Information about a region
*/
type GetUniverseRegionsRegionIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*The language used in the response
	 */
	ContentLanguage string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetUniverseRegionsRegionIDOKBody
}

func (o *GetUniverseRegionsRegionIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/regions/{region_id}/][%d] getUniverseRegionsRegionIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseRegionsRegionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Content-Language
	o.ContentLanguage = response.GetHeader("Content-Language")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetUniverseRegionsRegionIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsRegionIDNotModified creates a GetUniverseRegionsRegionIDNotModified with default headers values
func NewGetUniverseRegionsRegionIDNotModified() *GetUniverseRegionsRegionIDNotModified {
	return &GetUniverseRegionsRegionIDNotModified{}
}

/*GetUniverseRegionsRegionIDNotModified handles this case with default header values.

Not modified
*/
type GetUniverseRegionsRegionIDNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetUniverseRegionsRegionIDNotModified) Error() string {
	return fmt.Sprintf("[GET /universe/regions/{region_id}/][%d] getUniverseRegionsRegionIdNotModified ", 304)
}

func (o *GetUniverseRegionsRegionIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetUniverseRegionsRegionIDBadRequest creates a GetUniverseRegionsRegionIDBadRequest with default headers values
func NewGetUniverseRegionsRegionIDBadRequest() *GetUniverseRegionsRegionIDBadRequest {
	return &GetUniverseRegionsRegionIDBadRequest{}
}

/*GetUniverseRegionsRegionIDBadRequest handles this case with default header values.

Bad request
*/
type GetUniverseRegionsRegionIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetUniverseRegionsRegionIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /universe/regions/{region_id}/][%d] getUniverseRegionsRegionIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseRegionsRegionIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsRegionIDNotFound creates a GetUniverseRegionsRegionIDNotFound with default headers values
func NewGetUniverseRegionsRegionIDNotFound() *GetUniverseRegionsRegionIDNotFound {
	return &GetUniverseRegionsRegionIDNotFound{}
}

/*GetUniverseRegionsRegionIDNotFound handles this case with default header values.

Region not found
*/
type GetUniverseRegionsRegionIDNotFound struct {
	Payload *models.GetUniverseRegionsRegionIDNotFoundBody
}

func (o *GetUniverseRegionsRegionIDNotFound) Error() string {
	return fmt.Sprintf("[GET /universe/regions/{region_id}/][%d] getUniverseRegionsRegionIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseRegionsRegionIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniverseRegionsRegionIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsRegionIDEnhanceYourCalm creates a GetUniverseRegionsRegionIDEnhanceYourCalm with default headers values
func NewGetUniverseRegionsRegionIDEnhanceYourCalm() *GetUniverseRegionsRegionIDEnhanceYourCalm {
	return &GetUniverseRegionsRegionIDEnhanceYourCalm{}
}

/*GetUniverseRegionsRegionIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetUniverseRegionsRegionIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetUniverseRegionsRegionIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /universe/regions/{region_id}/][%d] getUniverseRegionsRegionIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseRegionsRegionIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsRegionIDInternalServerError creates a GetUniverseRegionsRegionIDInternalServerError with default headers values
func NewGetUniverseRegionsRegionIDInternalServerError() *GetUniverseRegionsRegionIDInternalServerError {
	return &GetUniverseRegionsRegionIDInternalServerError{}
}

/*GetUniverseRegionsRegionIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseRegionsRegionIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseRegionsRegionIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/regions/{region_id}/][%d] getUniverseRegionsRegionIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseRegionsRegionIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsRegionIDServiceUnavailable creates a GetUniverseRegionsRegionIDServiceUnavailable with default headers values
func NewGetUniverseRegionsRegionIDServiceUnavailable() *GetUniverseRegionsRegionIDServiceUnavailable {
	return &GetUniverseRegionsRegionIDServiceUnavailable{}
}

/*GetUniverseRegionsRegionIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetUniverseRegionsRegionIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetUniverseRegionsRegionIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /universe/regions/{region_id}/][%d] getUniverseRegionsRegionIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseRegionsRegionIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseRegionsRegionIDGatewayTimeout creates a GetUniverseRegionsRegionIDGatewayTimeout with default headers values
func NewGetUniverseRegionsRegionIDGatewayTimeout() *GetUniverseRegionsRegionIDGatewayTimeout {
	return &GetUniverseRegionsRegionIDGatewayTimeout{}
}

/*GetUniverseRegionsRegionIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetUniverseRegionsRegionIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetUniverseRegionsRegionIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /universe/regions/{region_id}/][%d] getUniverseRegionsRegionIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseRegionsRegionIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
