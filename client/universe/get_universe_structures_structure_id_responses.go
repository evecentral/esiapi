// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetUniverseStructuresStructureIDReader is a Reader for the GetUniverseStructuresStructureID structure.
type GetUniverseStructuresStructureIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseStructuresStructureIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseStructuresStructureIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetUniverseStructuresStructureIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetUniverseStructuresStructureIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetUniverseStructuresStructureIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetUniverseStructuresStructureIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUniverseStructuresStructureIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetUniverseStructuresStructureIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseStructuresStructureIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetUniverseStructuresStructureIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetUniverseStructuresStructureIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseStructuresStructureIDOK creates a GetUniverseStructuresStructureIDOK with default headers values
func NewGetUniverseStructuresStructureIDOK() *GetUniverseStructuresStructureIDOK {
	return &GetUniverseStructuresStructureIDOK{}
}

/*GetUniverseStructuresStructureIDOK handles this case with default header values.

Data about a structure
*/
type GetUniverseStructuresStructureIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetUniverseStructuresStructureIDOKBody
}

func (o *GetUniverseStructuresStructureIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseStructuresStructureIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetUniverseStructuresStructureIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDNotModified creates a GetUniverseStructuresStructureIDNotModified with default headers values
func NewGetUniverseStructuresStructureIDNotModified() *GetUniverseStructuresStructureIDNotModified {
	return &GetUniverseStructuresStructureIDNotModified{}
}

/*GetUniverseStructuresStructureIDNotModified handles this case with default header values.

Not modified
*/
type GetUniverseStructuresStructureIDNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetUniverseStructuresStructureIDNotModified) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdNotModified ", 304)
}

func (o *GetUniverseStructuresStructureIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetUniverseStructuresStructureIDBadRequest creates a GetUniverseStructuresStructureIDBadRequest with default headers values
func NewGetUniverseStructuresStructureIDBadRequest() *GetUniverseStructuresStructureIDBadRequest {
	return &GetUniverseStructuresStructureIDBadRequest{}
}

/*GetUniverseStructuresStructureIDBadRequest handles this case with default header values.

Bad request
*/
type GetUniverseStructuresStructureIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetUniverseStructuresStructureIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseStructuresStructureIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDUnauthorized creates a GetUniverseStructuresStructureIDUnauthorized with default headers values
func NewGetUniverseStructuresStructureIDUnauthorized() *GetUniverseStructuresStructureIDUnauthorized {
	return &GetUniverseStructuresStructureIDUnauthorized{}
}

/*GetUniverseStructuresStructureIDUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUniverseStructuresStructureIDUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetUniverseStructuresStructureIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUniverseStructuresStructureIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDForbidden creates a GetUniverseStructuresStructureIDForbidden with default headers values
func NewGetUniverseStructuresStructureIDForbidden() *GetUniverseStructuresStructureIDForbidden {
	return &GetUniverseStructuresStructureIDForbidden{}
}

/*GetUniverseStructuresStructureIDForbidden handles this case with default header values.

Forbidden
*/
type GetUniverseStructuresStructureIDForbidden struct {
	Payload *models.Forbidden
}

func (o *GetUniverseStructuresStructureIDForbidden) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdForbidden  %+v", 403, o.Payload)
}

func (o *GetUniverseStructuresStructureIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDNotFound creates a GetUniverseStructuresStructureIDNotFound with default headers values
func NewGetUniverseStructuresStructureIDNotFound() *GetUniverseStructuresStructureIDNotFound {
	return &GetUniverseStructuresStructureIDNotFound{}
}

/*GetUniverseStructuresStructureIDNotFound handles this case with default header values.

Structure not found
*/
type GetUniverseStructuresStructureIDNotFound struct {
	Payload *models.GetUniverseStructuresStructureIDNotFoundBody
}

func (o *GetUniverseStructuresStructureIDNotFound) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseStructuresStructureIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniverseStructuresStructureIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDEnhanceYourCalm creates a GetUniverseStructuresStructureIDEnhanceYourCalm with default headers values
func NewGetUniverseStructuresStructureIDEnhanceYourCalm() *GetUniverseStructuresStructureIDEnhanceYourCalm {
	return &GetUniverseStructuresStructureIDEnhanceYourCalm{}
}

/*GetUniverseStructuresStructureIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetUniverseStructuresStructureIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetUniverseStructuresStructureIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseStructuresStructureIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDInternalServerError creates a GetUniverseStructuresStructureIDInternalServerError with default headers values
func NewGetUniverseStructuresStructureIDInternalServerError() *GetUniverseStructuresStructureIDInternalServerError {
	return &GetUniverseStructuresStructureIDInternalServerError{}
}

/*GetUniverseStructuresStructureIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseStructuresStructureIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseStructuresStructureIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseStructuresStructureIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDServiceUnavailable creates a GetUniverseStructuresStructureIDServiceUnavailable with default headers values
func NewGetUniverseStructuresStructureIDServiceUnavailable() *GetUniverseStructuresStructureIDServiceUnavailable {
	return &GetUniverseStructuresStructureIDServiceUnavailable{}
}

/*GetUniverseStructuresStructureIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetUniverseStructuresStructureIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetUniverseStructuresStructureIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseStructuresStructureIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDGatewayTimeout creates a GetUniverseStructuresStructureIDGatewayTimeout with default headers values
func NewGetUniverseStructuresStructureIDGatewayTimeout() *GetUniverseStructuresStructureIDGatewayTimeout {
	return &GetUniverseStructuresStructureIDGatewayTimeout{}
}

/*GetUniverseStructuresStructureIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetUniverseStructuresStructureIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetUniverseStructuresStructureIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseStructuresStructureIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
