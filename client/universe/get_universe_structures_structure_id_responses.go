package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/esiswagger/models"
)

// GetUniverseStructuresStructureIDReader is a Reader for the GetUniverseStructuresStructureID structure.
type GetUniverseStructuresStructureIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseStructuresStructureIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseStructuresStructureIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetUniverseStructuresStructureIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUniverseStructuresStructureIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseStructuresStructureIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseStructuresStructureIDOK creates a GetUniverseStructuresStructureIDOK with default headers values
func NewGetUniverseStructuresStructureIDOK() *GetUniverseStructuresStructureIDOK {
	return &GetUniverseStructuresStructureIDOK{}
}

/*GetUniverseStructuresStructureIDOK handles this case with default header values.

Data about a structure
*/
type GetUniverseStructuresStructureIDOK struct {
	Payload *models.GetUniverseStructuresStructureIDOk
}

func (o *GetUniverseStructuresStructureIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseStructuresStructureIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniverseStructuresStructureIDOk)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDForbidden creates a GetUniverseStructuresStructureIDForbidden with default headers values
func NewGetUniverseStructuresStructureIDForbidden() *GetUniverseStructuresStructureIDForbidden {
	return &GetUniverseStructuresStructureIDForbidden{}
}

/*GetUniverseStructuresStructureIDForbidden handles this case with default header values.

Forbidden
*/
type GetUniverseStructuresStructureIDForbidden struct {
	Payload *models.GetUniverseStructuresStructureIDForbidden
}

func (o *GetUniverseStructuresStructureIDForbidden) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdForbidden  %+v", 403, o.Payload)
}

func (o *GetUniverseStructuresStructureIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniverseStructuresStructureIDForbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDNotFound creates a GetUniverseStructuresStructureIDNotFound with default headers values
func NewGetUniverseStructuresStructureIDNotFound() *GetUniverseStructuresStructureIDNotFound {
	return &GetUniverseStructuresStructureIDNotFound{}
}

/*GetUniverseStructuresStructureIDNotFound handles this case with default header values.

Structure not found
*/
type GetUniverseStructuresStructureIDNotFound struct {
	Payload *models.GetUniverseStructuresStructureIDNotFound
}

func (o *GetUniverseStructuresStructureIDNotFound) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseStructuresStructureIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniverseStructuresStructureIDNotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStructuresStructureIDInternalServerError creates a GetUniverseStructuresStructureIDInternalServerError with default headers values
func NewGetUniverseStructuresStructureIDInternalServerError() *GetUniverseStructuresStructureIDInternalServerError {
	return &GetUniverseStructuresStructureIDInternalServerError{}
}

/*GetUniverseStructuresStructureIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseStructuresStructureIDInternalServerError struct {
	Payload *models.GetUniverseStructuresStructureIDInternalServerError
}

func (o *GetUniverseStructuresStructureIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/structures/{structure_id}/][%d] getUniverseStructuresStructureIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseStructuresStructureIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniverseStructuresStructureIDInternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
