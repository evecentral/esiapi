// Code generated by go-swagger; DO NOT EDIT.

package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetUniverseSystemsReader is a Reader for the GetUniverseSystems structure.
type GetUniverseSystemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseSystemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseSystemsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetUniverseSystemsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetUniverseSystemsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetUniverseSystemsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseSystemsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetUniverseSystemsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetUniverseSystemsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseSystemsOK creates a GetUniverseSystemsOK with default headers values
func NewGetUniverseSystemsOK() *GetUniverseSystemsOK {
	return &GetUniverseSystemsOK{}
}

/*GetUniverseSystemsOK handles this case with default header values.

A list of solar system ids
*/
type GetUniverseSystemsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []int32
}

func (o *GetUniverseSystemsOK) Error() string {
	return fmt.Sprintf("[GET /universe/systems/][%d] getUniverseSystemsOK  %+v", 200, o.Payload)
}

func (o *GetUniverseSystemsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsNotModified creates a GetUniverseSystemsNotModified with default headers values
func NewGetUniverseSystemsNotModified() *GetUniverseSystemsNotModified {
	return &GetUniverseSystemsNotModified{}
}

/*GetUniverseSystemsNotModified handles this case with default header values.

Not modified
*/
type GetUniverseSystemsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetUniverseSystemsNotModified) Error() string {
	return fmt.Sprintf("[GET /universe/systems/][%d] getUniverseSystemsNotModified ", 304)
}

func (o *GetUniverseSystemsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetUniverseSystemsBadRequest creates a GetUniverseSystemsBadRequest with default headers values
func NewGetUniverseSystemsBadRequest() *GetUniverseSystemsBadRequest {
	return &GetUniverseSystemsBadRequest{}
}

/*GetUniverseSystemsBadRequest handles this case with default header values.

Bad request
*/
type GetUniverseSystemsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetUniverseSystemsBadRequest) Error() string {
	return fmt.Sprintf("[GET /universe/systems/][%d] getUniverseSystemsBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseSystemsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsEnhanceYourCalm creates a GetUniverseSystemsEnhanceYourCalm with default headers values
func NewGetUniverseSystemsEnhanceYourCalm() *GetUniverseSystemsEnhanceYourCalm {
	return &GetUniverseSystemsEnhanceYourCalm{}
}

/*GetUniverseSystemsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetUniverseSystemsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetUniverseSystemsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /universe/systems/][%d] getUniverseSystemsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseSystemsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsInternalServerError creates a GetUniverseSystemsInternalServerError with default headers values
func NewGetUniverseSystemsInternalServerError() *GetUniverseSystemsInternalServerError {
	return &GetUniverseSystemsInternalServerError{}
}

/*GetUniverseSystemsInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseSystemsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseSystemsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/systems/][%d] getUniverseSystemsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseSystemsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsServiceUnavailable creates a GetUniverseSystemsServiceUnavailable with default headers values
func NewGetUniverseSystemsServiceUnavailable() *GetUniverseSystemsServiceUnavailable {
	return &GetUniverseSystemsServiceUnavailable{}
}

/*GetUniverseSystemsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetUniverseSystemsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetUniverseSystemsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /universe/systems/][%d] getUniverseSystemsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseSystemsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSystemsGatewayTimeout creates a GetUniverseSystemsGatewayTimeout with default headers values
func NewGetUniverseSystemsGatewayTimeout() *GetUniverseSystemsGatewayTimeout {
	return &GetUniverseSystemsGatewayTimeout{}
}

/*GetUniverseSystemsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetUniverseSystemsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetUniverseSystemsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /universe/systems/][%d] getUniverseSystemsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseSystemsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
