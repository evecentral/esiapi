// Code generated by go-swagger; DO NOT EDIT.

package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDContactsReader is a Reader for the GetCharactersCharacterIDContacts structure.
type GetCharactersCharacterIDContactsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDContactsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDContactsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDContactsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDContactsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDContactsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDContactsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDContactsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDContactsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDContactsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDContactsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDContactsOK creates a GetCharactersCharacterIDContactsOK with default headers values
func NewGetCharactersCharacterIDContactsOK() *GetCharactersCharacterIDContactsOK {
	return &GetCharactersCharacterIDContactsOK{
		XPages: 1,
	}
}

/*GetCharactersCharacterIDContactsOK handles this case with default header values.

A list of contacts
*/
type GetCharactersCharacterIDContactsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetCharactersCharacterIDContactsOKBodyItems
}

func (o *GetCharactersCharacterIDContactsOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contacts/][%d] getCharactersCharacterIdContactsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDContactsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsNotModified creates a GetCharactersCharacterIDContactsNotModified with default headers values
func NewGetCharactersCharacterIDContactsNotModified() *GetCharactersCharacterIDContactsNotModified {
	return &GetCharactersCharacterIDContactsNotModified{}
}

/*GetCharactersCharacterIDContactsNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDContactsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDContactsNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contacts/][%d] getCharactersCharacterIdContactsNotModified ", 304)
}

func (o *GetCharactersCharacterIDContactsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDContactsBadRequest creates a GetCharactersCharacterIDContactsBadRequest with default headers values
func NewGetCharactersCharacterIDContactsBadRequest() *GetCharactersCharacterIDContactsBadRequest {
	return &GetCharactersCharacterIDContactsBadRequest{}
}

/*GetCharactersCharacterIDContactsBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDContactsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDContactsBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contacts/][%d] getCharactersCharacterIdContactsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDContactsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsUnauthorized creates a GetCharactersCharacterIDContactsUnauthorized with default headers values
func NewGetCharactersCharacterIDContactsUnauthorized() *GetCharactersCharacterIDContactsUnauthorized {
	return &GetCharactersCharacterIDContactsUnauthorized{}
}

/*GetCharactersCharacterIDContactsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDContactsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDContactsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contacts/][%d] getCharactersCharacterIdContactsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDContactsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsForbidden creates a GetCharactersCharacterIDContactsForbidden with default headers values
func NewGetCharactersCharacterIDContactsForbidden() *GetCharactersCharacterIDContactsForbidden {
	return &GetCharactersCharacterIDContactsForbidden{}
}

/*GetCharactersCharacterIDContactsForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDContactsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDContactsForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contacts/][%d] getCharactersCharacterIdContactsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDContactsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsEnhanceYourCalm creates a GetCharactersCharacterIDContactsEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDContactsEnhanceYourCalm() *GetCharactersCharacterIDContactsEnhanceYourCalm {
	return &GetCharactersCharacterIDContactsEnhanceYourCalm{}
}

/*GetCharactersCharacterIDContactsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDContactsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDContactsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contacts/][%d] getCharactersCharacterIdContactsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDContactsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsInternalServerError creates a GetCharactersCharacterIDContactsInternalServerError with default headers values
func NewGetCharactersCharacterIDContactsInternalServerError() *GetCharactersCharacterIDContactsInternalServerError {
	return &GetCharactersCharacterIDContactsInternalServerError{}
}

/*GetCharactersCharacterIDContactsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDContactsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDContactsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contacts/][%d] getCharactersCharacterIdContactsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDContactsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsServiceUnavailable creates a GetCharactersCharacterIDContactsServiceUnavailable with default headers values
func NewGetCharactersCharacterIDContactsServiceUnavailable() *GetCharactersCharacterIDContactsServiceUnavailable {
	return &GetCharactersCharacterIDContactsServiceUnavailable{}
}

/*GetCharactersCharacterIDContactsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDContactsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDContactsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contacts/][%d] getCharactersCharacterIdContactsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDContactsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContactsGatewayTimeout creates a GetCharactersCharacterIDContactsGatewayTimeout with default headers values
func NewGetCharactersCharacterIDContactsGatewayTimeout() *GetCharactersCharacterIDContactsGatewayTimeout {
	return &GetCharactersCharacterIDContactsGatewayTimeout{}
}

/*GetCharactersCharacterIDContactsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDContactsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDContactsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contacts/][%d] getCharactersCharacterIdContactsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDContactsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
