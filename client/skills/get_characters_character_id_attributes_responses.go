// Code generated by go-swagger; DO NOT EDIT.

package skills

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDAttributesReader is a Reader for the GetCharactersCharacterIDAttributes structure.
type GetCharactersCharacterIDAttributesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDAttributesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDAttributesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetCharactersCharacterIDAttributesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDAttributesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDAttributesOK creates a GetCharactersCharacterIDAttributesOK with default headers values
func NewGetCharactersCharacterIDAttributesOK() *GetCharactersCharacterIDAttributesOK {
	return &GetCharactersCharacterIDAttributesOK{}
}

/*GetCharactersCharacterIDAttributesOK handles this case with default header values.

Attributes of a character
*/
type GetCharactersCharacterIDAttributesOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload GetCharactersCharacterIDAttributesOKBody
}

func (o *GetCharactersCharacterIDAttributesOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/attributes/][%d] getCharactersCharacterIdAttributesOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDAttributesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDAttributesForbidden creates a GetCharactersCharacterIDAttributesForbidden with default headers values
func NewGetCharactersCharacterIDAttributesForbidden() *GetCharactersCharacterIDAttributesForbidden {
	return &GetCharactersCharacterIDAttributesForbidden{}
}

/*GetCharactersCharacterIDAttributesForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDAttributesForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDAttributesForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/attributes/][%d] getCharactersCharacterIdAttributesForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDAttributesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDAttributesInternalServerError creates a GetCharactersCharacterIDAttributesInternalServerError with default headers values
func NewGetCharactersCharacterIDAttributesInternalServerError() *GetCharactersCharacterIDAttributesInternalServerError {
	return &GetCharactersCharacterIDAttributesInternalServerError{}
}

/*GetCharactersCharacterIDAttributesInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDAttributesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDAttributesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/attributes/][%d] getCharactersCharacterIdAttributesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDAttributesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDAttributesOKBody get_characters_character_id_attributes_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDAttributesOKBody
*/

type GetCharactersCharacterIDAttributesOKBody struct {

	// get_characters_character_id_attributes_accrued_remap_cooldown_date
	//
	// Neural remapping cooldown after a character uses remap accrued over time
	// Required: true
	AccruedRemapCooldownDate *strfmt.DateTime `json:"accrued_remap_cooldown_date"`

	// get_characters_character_id_attributes_bonus_remaps
	//
	// Number of available bonus character neural remaps
	// Required: true
	BonusRemaps *int32 `json:"bonus_remaps"`

	// get_characters_character_id_attributes_charisma
	//
	// charisma integer
	// Required: true
	Charisma *int32 `json:"charisma"`

	// get_characters_character_id_attributes_intelligence
	//
	// intelligence integer
	// Required: true
	Intelligence *int32 `json:"intelligence"`

	// get_characters_character_id_attributes_last_remap_date
	//
	// Datetime of last neural remap, including usage of bonus remaps
	// Required: true
	LastRemapDate *strfmt.DateTime `json:"last_remap_date"`

	// get_characters_character_id_attributes_memory
	//
	// memory integer
	// Required: true
	Memory *int32 `json:"memory"`

	// get_characters_character_id_attributes_perception
	//
	// perception integer
	// Required: true
	Perception *int32 `json:"perception"`

	// get_characters_character_id_attributes_willpower
	//
	// willpower integer
	// Required: true
	Willpower *int32 `json:"willpower"`
}

/* polymorph GetCharactersCharacterIDAttributesOKBody accrued_remap_cooldown_date false */

/* polymorph GetCharactersCharacterIDAttributesOKBody bonus_remaps false */

/* polymorph GetCharactersCharacterIDAttributesOKBody charisma false */

/* polymorph GetCharactersCharacterIDAttributesOKBody intelligence false */

/* polymorph GetCharactersCharacterIDAttributesOKBody last_remap_date false */

/* polymorph GetCharactersCharacterIDAttributesOKBody memory false */

/* polymorph GetCharactersCharacterIDAttributesOKBody perception false */

/* polymorph GetCharactersCharacterIDAttributesOKBody willpower false */

// Validate validates this get characters character ID attributes o k body
func (o *GetCharactersCharacterIDAttributesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccruedRemapCooldownDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateBonusRemaps(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateCharisma(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateIntelligence(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLastRemapDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateMemory(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePerception(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateWillpower(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDAttributesOKBody) validateAccruedRemapCooldownDate(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdAttributesOK"+"."+"accrued_remap_cooldown_date", "body", o.AccruedRemapCooldownDate); err != nil {
		return err
	}

	if err := validate.FormatOf("getCharactersCharacterIdAttributesOK"+"."+"accrued_remap_cooldown_date", "body", "date-time", o.AccruedRemapCooldownDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDAttributesOKBody) validateBonusRemaps(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdAttributesOK"+"."+"bonus_remaps", "body", o.BonusRemaps); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDAttributesOKBody) validateCharisma(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdAttributesOK"+"."+"charisma", "body", o.Charisma); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDAttributesOKBody) validateIntelligence(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdAttributesOK"+"."+"intelligence", "body", o.Intelligence); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDAttributesOKBody) validateLastRemapDate(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdAttributesOK"+"."+"last_remap_date", "body", o.LastRemapDate); err != nil {
		return err
	}

	if err := validate.FormatOf("getCharactersCharacterIdAttributesOK"+"."+"last_remap_date", "body", "date-time", o.LastRemapDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDAttributesOKBody) validateMemory(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdAttributesOK"+"."+"memory", "body", o.Memory); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDAttributesOKBody) validatePerception(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdAttributesOK"+"."+"perception", "body", o.Perception); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDAttributesOKBody) validateWillpower(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdAttributesOK"+"."+"willpower", "body", o.Willpower); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDAttributesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDAttributesOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDAttributesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
