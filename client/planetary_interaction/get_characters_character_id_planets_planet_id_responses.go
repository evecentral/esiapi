// Code generated by go-swagger; DO NOT EDIT.

package planetary_interaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDPlanetsPlanetIDReader is a Reader for the GetCharactersCharacterIDPlanetsPlanetID structure.
type GetCharactersCharacterIDPlanetsPlanetIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDPlanetsPlanetIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDPlanetsPlanetIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetCharactersCharacterIDPlanetsPlanetIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCharactersCharacterIDPlanetsPlanetIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDPlanetsPlanetIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDPlanetsPlanetIDOK creates a GetCharactersCharacterIDPlanetsPlanetIDOK with default headers values
func NewGetCharactersCharacterIDPlanetsPlanetIDOK() *GetCharactersCharacterIDPlanetsPlanetIDOK {
	return &GetCharactersCharacterIDPlanetsPlanetIDOK{}
}

/*GetCharactersCharacterIDPlanetsPlanetIDOK handles this case with default header values.

Colony layout
*/
type GetCharactersCharacterIDPlanetsPlanetIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload GetCharactersCharacterIDPlanetsPlanetIDOKBody
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/planets/{planet_id}/][%d] getCharactersCharacterIdPlanetsPlanetIdOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDPlanetsPlanetIDForbidden creates a GetCharactersCharacterIDPlanetsPlanetIDForbidden with default headers values
func NewGetCharactersCharacterIDPlanetsPlanetIDForbidden() *GetCharactersCharacterIDPlanetsPlanetIDForbidden {
	return &GetCharactersCharacterIDPlanetsPlanetIDForbidden{}
}

/*GetCharactersCharacterIDPlanetsPlanetIDForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDPlanetsPlanetIDForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/planets/{planet_id}/][%d] getCharactersCharacterIdPlanetsPlanetIdForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDPlanetsPlanetIDNotFound creates a GetCharactersCharacterIDPlanetsPlanetIDNotFound with default headers values
func NewGetCharactersCharacterIDPlanetsPlanetIDNotFound() *GetCharactersCharacterIDPlanetsPlanetIDNotFound {
	return &GetCharactersCharacterIDPlanetsPlanetIDNotFound{}
}

/*GetCharactersCharacterIDPlanetsPlanetIDNotFound handles this case with default header values.

Colony not found
*/
type GetCharactersCharacterIDPlanetsPlanetIDNotFound struct {
	Payload GetCharactersCharacterIDPlanetsPlanetIDNotFoundBody
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDNotFound) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/planets/{planet_id}/][%d] getCharactersCharacterIdPlanetsPlanetIdNotFound  %+v", 404, o.Payload)
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDPlanetsPlanetIDInternalServerError creates a GetCharactersCharacterIDPlanetsPlanetIDInternalServerError with default headers values
func NewGetCharactersCharacterIDPlanetsPlanetIDInternalServerError() *GetCharactersCharacterIDPlanetsPlanetIDInternalServerError {
	return &GetCharactersCharacterIDPlanetsPlanetIDInternalServerError{}
}

/*GetCharactersCharacterIDPlanetsPlanetIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDPlanetsPlanetIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/planets/{planet_id}/][%d] getCharactersCharacterIdPlanetsPlanetIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDPlanetsPlanetIDNotFoundBody get_characters_character_id_planets_planet_id_not_found
//
// Colony not found
swagger:model GetCharactersCharacterIDPlanetsPlanetIDNotFoundBody
*/

type GetCharactersCharacterIDPlanetsPlanetIDNotFoundBody struct {

	// get_characters_character_id_planets_planet_id_error
	//
	// error message
	// Required: true
	Error *string `json:"error"`
}

/* polymorph GetCharactersCharacterIDPlanetsPlanetIDNotFoundBody error false */

// Validate validates this get characters character ID planets planet ID not found body
func (o *GetCharactersCharacterIDPlanetsPlanetIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDNotFoundBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdPlanetsPlanetIdNotFound"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDPlanetsPlanetIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDPlanetsPlanetIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDPlanetsPlanetIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetCharactersCharacterIDPlanetsPlanetIDOKBody get_characters_character_id_planets_planet_id_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDPlanetsPlanetIDOKBody
*/

type GetCharactersCharacterIDPlanetsPlanetIDOKBody struct {

	// get_characters_character_id_planets_planet_id_links
	//
	// links array
	// Required: true
	// Max Items: 500
	Links []*LinksItems0 `json:"links"`

	// get_characters_character_id_planets_planet_id_pins
	//
	// pins array
	// Required: true
	// Max Items: 100
	Pins []*PinsItems0 `json:"pins"`

	// get_characters_character_id_planets_planet_id_routes
	//
	// routes array
	// Required: true
	// Max Items: 1000
	Routes []*RoutesItems0 `json:"routes"`
}

/* polymorph GetCharactersCharacterIDPlanetsPlanetIDOKBody links false */

/* polymorph GetCharactersCharacterIDPlanetsPlanetIDOKBody pins false */

/* polymorph GetCharactersCharacterIDPlanetsPlanetIDOKBody routes false */

// Validate validates this get characters character ID planets planet ID o k body
func (o *GetCharactersCharacterIDPlanetsPlanetIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePins(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateRoutes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDOKBody) validateLinks(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdPlanetsPlanetIdOK"+"."+"links", "body", o.Links); err != nil {
		return err
	}

	iLinksSize := int64(len(o.Links))

	if err := validate.MaxItems("getCharactersCharacterIdPlanetsPlanetIdOK"+"."+"links", "body", iLinksSize, 500); err != nil {
		return err
	}

	for i := 0; i < len(o.Links); i++ {

		if swag.IsZero(o.Links[i]) { // not required
			continue
		}

		if o.Links[i] != nil {

			if err := o.Links[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCharactersCharacterIdPlanetsPlanetIdOK" + "." + "links" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDOKBody) validatePins(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdPlanetsPlanetIdOK"+"."+"pins", "body", o.Pins); err != nil {
		return err
	}

	iPinsSize := int64(len(o.Pins))

	if err := validate.MaxItems("getCharactersCharacterIdPlanetsPlanetIdOK"+"."+"pins", "body", iPinsSize, 100); err != nil {
		return err
	}

	for i := 0; i < len(o.Pins); i++ {

		if swag.IsZero(o.Pins[i]) { // not required
			continue
		}

		if o.Pins[i] != nil {

			if err := o.Pins[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCharactersCharacterIdPlanetsPlanetIdOK" + "." + "pins" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetCharactersCharacterIDPlanetsPlanetIDOKBody) validateRoutes(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdPlanetsPlanetIdOK"+"."+"routes", "body", o.Routes); err != nil {
		return err
	}

	iRoutesSize := int64(len(o.Routes))

	if err := validate.MaxItems("getCharactersCharacterIdPlanetsPlanetIdOK"+"."+"routes", "body", iRoutesSize, 1000); err != nil {
		return err
	}

	for i := 0; i < len(o.Routes); i++ {

		if swag.IsZero(o.Routes[i]) { // not required
			continue
		}

		if o.Routes[i] != nil {

			if err := o.Routes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCharactersCharacterIdPlanetsPlanetIdOK" + "." + "routes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDPlanetsPlanetIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDPlanetsPlanetIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDPlanetsPlanetIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LinksItems0 get_characters_character_id_planets_planet_id_link
//
// link object
swagger:model LinksItems0
*/

type LinksItems0 struct {

	// get_characters_character_id_planets_planet_id_destination_pin_id
	//
	// destination_pin_id integer
	// Required: true
	DestinationPinID *int64 `json:"destination_pin_id"`

	// get_characters_character_id_planets_planet_id_link_level
	//
	// link_level integer
	// Required: true
	// Maximum: 10
	// Minimum: 0
	LinkLevel *int32 `json:"link_level"`

	// get_characters_character_id_planets_planet_id_source_pin_id
	//
	// source_pin_id integer
	// Required: true
	SourcePinID *int64 `json:"source_pin_id"`
}

/* polymorph LinksItems0 destination_pin_id false */

/* polymorph LinksItems0 link_level false */

/* polymorph LinksItems0 source_pin_id false */

// Validate validates this links items0
func (o *LinksItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDestinationPinID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLinkLevel(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateSourcePinID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *LinksItems0) validateDestinationPinID(formats strfmt.Registry) error {

	if err := validate.Required("destination_pin_id", "body", o.DestinationPinID); err != nil {
		return err
	}

	return nil
}

func (o *LinksItems0) validateLinkLevel(formats strfmt.Registry) error {

	if err := validate.Required("link_level", "body", o.LinkLevel); err != nil {
		return err
	}

	if err := validate.MinimumInt("link_level", "body", int64(*o.LinkLevel), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("link_level", "body", int64(*o.LinkLevel), 10, false); err != nil {
		return err
	}

	return nil
}

func (o *LinksItems0) validateSourcePinID(formats strfmt.Registry) error {

	if err := validate.Required("source_pin_id", "body", o.SourcePinID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *LinksItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LinksItems0) UnmarshalBinary(b []byte) error {
	var res LinksItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PinsItems0 get_characters_character_id_planets_planet_id_pin
//
// pin object
swagger:model PinsItems0
*/

type PinsItems0 struct {

	// get_characters_character_id_planets_planet_id_expiry_time
	//
	// expiry_time string
	ExpiryTime strfmt.DateTime `json:"expiry_time,omitempty"`

	// extractor details
	ExtractorDetails *PinsItems0ExtractorDetails `json:"extractor_details,omitempty"`

	// factory details
	FactoryDetails *PinsItems0FactoryDetails `json:"factory_details,omitempty"`

	// get_characters_character_id_planets_planet_id_install_time
	//
	// install_time string
	InstallTime strfmt.DateTime `json:"install_time,omitempty"`

	// get_characters_character_id_planets_planet_id_last_cycle_start
	//
	// last_cycle_start string
	LastCycleStart strfmt.DateTime `json:"last_cycle_start,omitempty"`

	// get_characters_character_id_planets_planet_id_latitude
	//
	// latitude number
	// Required: true
	Latitude *float32 `json:"latitude"`

	// get_characters_character_id_planets_planet_id_longitude
	//
	// longitude number
	// Required: true
	Longitude *float32 `json:"longitude"`

	// get_characters_character_id_planets_planet_id_pin_id
	//
	// pin_id integer
	// Required: true
	PinID *int64 `json:"pin_id"`

	// get_characters_character_id_planets_planet_id_schematic_id
	//
	// schematic_id integer
	SchematicID int32 `json:"schematic_id,omitempty"`

	// get_characters_character_id_planets_planet_id_type_id
	//
	// type_id integer
	// Required: true
	TypeID *int32 `json:"type_id"`
}

/* polymorph PinsItems0 expiry_time false */

/* polymorph PinsItems0 extractor_details false */

/* polymorph PinsItems0 factory_details false */

/* polymorph PinsItems0 install_time false */

/* polymorph PinsItems0 last_cycle_start false */

/* polymorph PinsItems0 latitude false */

/* polymorph PinsItems0 longitude false */

/* polymorph PinsItems0 pin_id false */

/* polymorph PinsItems0 schematic_id false */

/* polymorph PinsItems0 type_id false */

// Validate validates this pins items0
func (o *PinsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExtractorDetails(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateFactoryDetails(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLatitude(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLongitude(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePinID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PinsItems0) validateExtractorDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.ExtractorDetails) { // not required
		return nil
	}

	if o.ExtractorDetails != nil {

		if err := o.ExtractorDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("extractor_details")
			}
			return err
		}
	}

	return nil
}

func (o *PinsItems0) validateFactoryDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.FactoryDetails) { // not required
		return nil
	}

	if o.FactoryDetails != nil {

		if err := o.FactoryDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("factory_details")
			}
			return err
		}
	}

	return nil
}

func (o *PinsItems0) validateLatitude(formats strfmt.Registry) error {

	if err := validate.Required("latitude", "body", o.Latitude); err != nil {
		return err
	}

	return nil
}

func (o *PinsItems0) validateLongitude(formats strfmt.Registry) error {

	if err := validate.Required("longitude", "body", o.Longitude); err != nil {
		return err
	}

	return nil
}

func (o *PinsItems0) validatePinID(formats strfmt.Registry) error {

	if err := validate.Required("pin_id", "body", o.PinID); err != nil {
		return err
	}

	return nil
}

func (o *PinsItems0) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PinsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PinsItems0) UnmarshalBinary(b []byte) error {
	var res PinsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PinsItems0ExtractorDetails get_characters_character_id_planets_planet_id_extractor_details
//
// extractor_details object
swagger:model PinsItems0ExtractorDetails
*/

type PinsItems0ExtractorDetails struct {

	// get_characters_character_id_planets_planet_id_cycle_time
	//
	// in seconds
	CycleTime int32 `json:"cycle_time,omitempty"`

	// get_characters_character_id_planets_planet_id_head_radius
	//
	// head_radius number
	HeadRadius float32 `json:"head_radius,omitempty"`

	// get_characters_character_id_planets_planet_id_heads
	//
	// heads array
	// Required: true
	// Max Items: 10
	Heads []*PinsItems0ExtractorDetailsHeadsItems0 `json:"heads"`

	// get_characters_character_id_planets_planet_id_product_type_id
	//
	// product_type_id integer
	ProductTypeID int32 `json:"product_type_id,omitempty"`

	// get_characters_character_id_planets_planet_id_qty_per_cycle
	//
	// qty_per_cycle integer
	QtyPerCycle int32 `json:"qty_per_cycle,omitempty"`
}

/* polymorph PinsItems0ExtractorDetails cycle_time false */

/* polymorph PinsItems0ExtractorDetails head_radius false */

/* polymorph PinsItems0ExtractorDetails heads false */

/* polymorph PinsItems0ExtractorDetails product_type_id false */

/* polymorph PinsItems0ExtractorDetails qty_per_cycle false */

// Validate validates this pins items0 extractor details
func (o *PinsItems0ExtractorDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHeads(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PinsItems0ExtractorDetails) validateHeads(formats strfmt.Registry) error {

	if err := validate.Required("extractor_details"+"."+"heads", "body", o.Heads); err != nil {
		return err
	}

	iHeadsSize := int64(len(o.Heads))

	if err := validate.MaxItems("extractor_details"+"."+"heads", "body", iHeadsSize, 10); err != nil {
		return err
	}

	for i := 0; i < len(o.Heads); i++ {

		if swag.IsZero(o.Heads[i]) { // not required
			continue
		}

		if o.Heads[i] != nil {

			if err := o.Heads[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("extractor_details" + "." + "heads" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PinsItems0ExtractorDetails) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PinsItems0ExtractorDetails) UnmarshalBinary(b []byte) error {
	var res PinsItems0ExtractorDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PinsItems0ExtractorDetailsHeadsItems0 get_characters_character_id_planets_planet_id_head
//
// head object
swagger:model PinsItems0ExtractorDetailsHeadsItems0
*/

type PinsItems0ExtractorDetailsHeadsItems0 struct {

	// get_characters_character_id_planets_planet_id_head_id
	//
	// head_id integer
	// Required: true
	// Maximum: 9
	// Minimum: 0
	HeadID *int32 `json:"head_id"`

	// get_characters_character_id_planets_planet_id_latitude
	//
	// latitude number
	// Required: true
	Latitude *float32 `json:"latitude"`

	// get_characters_character_id_planets_planet_id_longitude
	//
	// longitude number
	// Required: true
	Longitude *float32 `json:"longitude"`
}

/* polymorph PinsItems0ExtractorDetailsHeadsItems0 head_id false */

/* polymorph PinsItems0ExtractorDetailsHeadsItems0 latitude false */

/* polymorph PinsItems0ExtractorDetailsHeadsItems0 longitude false */

// Validate validates this pins items0 extractor details heads items0
func (o *PinsItems0ExtractorDetailsHeadsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHeadID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLatitude(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLongitude(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PinsItems0ExtractorDetailsHeadsItems0) validateHeadID(formats strfmt.Registry) error {

	if err := validate.Required("head_id", "body", o.HeadID); err != nil {
		return err
	}

	if err := validate.MinimumInt("head_id", "body", int64(*o.HeadID), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("head_id", "body", int64(*o.HeadID), 9, false); err != nil {
		return err
	}

	return nil
}

func (o *PinsItems0ExtractorDetailsHeadsItems0) validateLatitude(formats strfmt.Registry) error {

	if err := validate.Required("latitude", "body", o.Latitude); err != nil {
		return err
	}

	return nil
}

func (o *PinsItems0ExtractorDetailsHeadsItems0) validateLongitude(formats strfmt.Registry) error {

	if err := validate.Required("longitude", "body", o.Longitude); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PinsItems0ExtractorDetailsHeadsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PinsItems0ExtractorDetailsHeadsItems0) UnmarshalBinary(b []byte) error {
	var res PinsItems0ExtractorDetailsHeadsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PinsItems0FactoryDetails get_characters_character_id_planets_planet_id_factory_details
//
// factory_details object
swagger:model PinsItems0FactoryDetails
*/

type PinsItems0FactoryDetails struct {

	// get_characters_character_id_planets_planet_id_schematic_id
	//
	// schematic_id integer
	// Required: true
	SchematicID *int32 `json:"schematic_id"`
}

/* polymorph PinsItems0FactoryDetails schematic_id false */

// Validate validates this pins items0 factory details
func (o *PinsItems0FactoryDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSchematicID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PinsItems0FactoryDetails) validateSchematicID(formats strfmt.Registry) error {

	if err := validate.Required("factory_details"+"."+"schematic_id", "body", o.SchematicID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PinsItems0FactoryDetails) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PinsItems0FactoryDetails) UnmarshalBinary(b []byte) error {
	var res PinsItems0FactoryDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RoutesItems0 get_characters_character_id_planets_planet_id_route
//
// route object
swagger:model RoutesItems0
*/

type RoutesItems0 struct {

	// get_characters_character_id_planets_planet_id_content_type_id
	//
	// content_type_id integer
	// Required: true
	ContentTypeID *int32 `json:"content_type_id"`

	// get_characters_character_id_planets_planet_id_destination_pin_id
	//
	// destination_pin_id integer
	// Required: true
	DestinationPinID *int64 `json:"destination_pin_id"`

	// get_characters_character_id_planets_planet_id_quantity
	//
	// quantity number
	// Required: true
	Quantity *float32 `json:"quantity"`

	// get_characters_character_id_planets_planet_id_route_id
	//
	// route_id integer
	// Required: true
	RouteID *int64 `json:"route_id"`

	// get_characters_character_id_planets_planet_id_source_pin_id
	//
	// source_pin_id integer
	// Required: true
	SourcePinID *int64 `json:"source_pin_id"`

	// get_characters_character_id_planets_planet_id_waypoints
	//
	// waypoints array
	// Max Items: 5
	Waypoints []*RoutesItems0WaypointsItems0 `json:"waypoints"`
}

/* polymorph RoutesItems0 content_type_id false */

/* polymorph RoutesItems0 destination_pin_id false */

/* polymorph RoutesItems0 quantity false */

/* polymorph RoutesItems0 route_id false */

/* polymorph RoutesItems0 source_pin_id false */

/* polymorph RoutesItems0 waypoints false */

// Validate validates this routes items0
func (o *RoutesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateContentTypeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateDestinationPinID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateQuantity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateRouteID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateSourcePinID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateWaypoints(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RoutesItems0) validateContentTypeID(formats strfmt.Registry) error {

	if err := validate.Required("content_type_id", "body", o.ContentTypeID); err != nil {
		return err
	}

	return nil
}

func (o *RoutesItems0) validateDestinationPinID(formats strfmt.Registry) error {

	if err := validate.Required("destination_pin_id", "body", o.DestinationPinID); err != nil {
		return err
	}

	return nil
}

func (o *RoutesItems0) validateQuantity(formats strfmt.Registry) error {

	if err := validate.Required("quantity", "body", o.Quantity); err != nil {
		return err
	}

	return nil
}

func (o *RoutesItems0) validateRouteID(formats strfmt.Registry) error {

	if err := validate.Required("route_id", "body", o.RouteID); err != nil {
		return err
	}

	return nil
}

func (o *RoutesItems0) validateSourcePinID(formats strfmt.Registry) error {

	if err := validate.Required("source_pin_id", "body", o.SourcePinID); err != nil {
		return err
	}

	return nil
}

func (o *RoutesItems0) validateWaypoints(formats strfmt.Registry) error {

	if swag.IsZero(o.Waypoints) { // not required
		return nil
	}

	iWaypointsSize := int64(len(o.Waypoints))

	if err := validate.MaxItems("waypoints", "body", iWaypointsSize, 5); err != nil {
		return err
	}

	for i := 0; i < len(o.Waypoints); i++ {

		if swag.IsZero(o.Waypoints[i]) { // not required
			continue
		}

		if o.Waypoints[i] != nil {

			if err := o.Waypoints[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("waypoints" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RoutesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RoutesItems0) UnmarshalBinary(b []byte) error {
	var res RoutesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RoutesItems0WaypointsItems0 get_characters_character_id_planets_planet_id_waypoint
//
// waypoint object
swagger:model RoutesItems0WaypointsItems0
*/

type RoutesItems0WaypointsItems0 struct {

	// get_characters_character_id_planets_planet_id_order
	//
	// order integer
	// Required: true
	// Maximum: 5
	// Minimum: 1
	Order *int32 `json:"order"`

	// get_characters_character_id_planets_planet_id_pin_id
	//
	// pin_id integer
	// Required: true
	PinID *int64 `json:"pin_id"`
}

/* polymorph RoutesItems0WaypointsItems0 order false */

/* polymorph RoutesItems0WaypointsItems0 pin_id false */

// Validate validates this routes items0 waypoints items0
func (o *RoutesItems0WaypointsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateOrder(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePinID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RoutesItems0WaypointsItems0) validateOrder(formats strfmt.Registry) error {

	if err := validate.Required("order", "body", o.Order); err != nil {
		return err
	}

	if err := validate.MinimumInt("order", "body", int64(*o.Order), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("order", "body", int64(*o.Order), 5, false); err != nil {
		return err
	}

	return nil
}

func (o *RoutesItems0WaypointsItems0) validatePinID(formats strfmt.Registry) error {

	if err := validate.Required("pin_id", "body", o.PinID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RoutesItems0WaypointsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RoutesItems0WaypointsItems0) UnmarshalBinary(b []byte) error {
	var res RoutesItems0WaypointsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
