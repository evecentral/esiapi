// Code generated by go-swagger; DO NOT EDIT.

package planetary_interaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetUniverseSchematicsSchematicIDReader is a Reader for the GetUniverseSchematicsSchematicID structure.
type GetUniverseSchematicsSchematicIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseSchematicsSchematicIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseSchematicsSchematicIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetUniverseSchematicsSchematicIDNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetUniverseSchematicsSchematicIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUniverseSchematicsSchematicIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetUniverseSchematicsSchematicIDEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseSchematicsSchematicIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetUniverseSchematicsSchematicIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetUniverseSchematicsSchematicIDGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseSchematicsSchematicIDOK creates a GetUniverseSchematicsSchematicIDOK with default headers values
func NewGetUniverseSchematicsSchematicIDOK() *GetUniverseSchematicsSchematicIDOK {
	return &GetUniverseSchematicsSchematicIDOK{}
}

/*GetUniverseSchematicsSchematicIDOK handles this case with default header values.

Public data about a schematic
*/
type GetUniverseSchematicsSchematicIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetUniverseSchematicsSchematicIDOKBody
}

func (o *GetUniverseSchematicsSchematicIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetUniverseSchematicsSchematicIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDNotModified creates a GetUniverseSchematicsSchematicIDNotModified with default headers values
func NewGetUniverseSchematicsSchematicIDNotModified() *GetUniverseSchematicsSchematicIDNotModified {
	return &GetUniverseSchematicsSchematicIDNotModified{}
}

/*GetUniverseSchematicsSchematicIDNotModified handles this case with default header values.

Not modified
*/
type GetUniverseSchematicsSchematicIDNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetUniverseSchematicsSchematicIDNotModified) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdNotModified ", 304)
}

func (o *GetUniverseSchematicsSchematicIDNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetUniverseSchematicsSchematicIDBadRequest creates a GetUniverseSchematicsSchematicIDBadRequest with default headers values
func NewGetUniverseSchematicsSchematicIDBadRequest() *GetUniverseSchematicsSchematicIDBadRequest {
	return &GetUniverseSchematicsSchematicIDBadRequest{}
}

/*GetUniverseSchematicsSchematicIDBadRequest handles this case with default header values.

Bad request
*/
type GetUniverseSchematicsSchematicIDBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetUniverseSchematicsSchematicIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDNotFound creates a GetUniverseSchematicsSchematicIDNotFound with default headers values
func NewGetUniverseSchematicsSchematicIDNotFound() *GetUniverseSchematicsSchematicIDNotFound {
	return &GetUniverseSchematicsSchematicIDNotFound{}
}

/*GetUniverseSchematicsSchematicIDNotFound handles this case with default header values.

Schematic not found
*/
type GetUniverseSchematicsSchematicIDNotFound struct {
	Payload *models.GetUniverseSchematicsSchematicIDNotFoundBody
}

func (o *GetUniverseSchematicsSchematicIDNotFound) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUniverseSchematicsSchematicIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDEnhanceYourCalm creates a GetUniverseSchematicsSchematicIDEnhanceYourCalm with default headers values
func NewGetUniverseSchematicsSchematicIDEnhanceYourCalm() *GetUniverseSchematicsSchematicIDEnhanceYourCalm {
	return &GetUniverseSchematicsSchematicIDEnhanceYourCalm{}
}

/*GetUniverseSchematicsSchematicIDEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetUniverseSchematicsSchematicIDEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDInternalServerError creates a GetUniverseSchematicsSchematicIDInternalServerError with default headers values
func NewGetUniverseSchematicsSchematicIDInternalServerError() *GetUniverseSchematicsSchematicIDInternalServerError {
	return &GetUniverseSchematicsSchematicIDInternalServerError{}
}

/*GetUniverseSchematicsSchematicIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseSchematicsSchematicIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseSchematicsSchematicIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDServiceUnavailable creates a GetUniverseSchematicsSchematicIDServiceUnavailable with default headers values
func NewGetUniverseSchematicsSchematicIDServiceUnavailable() *GetUniverseSchematicsSchematicIDServiceUnavailable {
	return &GetUniverseSchematicsSchematicIDServiceUnavailable{}
}

/*GetUniverseSchematicsSchematicIDServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetUniverseSchematicsSchematicIDServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDGatewayTimeout creates a GetUniverseSchematicsSchematicIDGatewayTimeout with default headers values
func NewGetUniverseSchematicsSchematicIDGatewayTimeout() *GetUniverseSchematicsSchematicIDGatewayTimeout {
	return &GetUniverseSchematicsSchematicIDGatewayTimeout{}
}

/*GetUniverseSchematicsSchematicIDGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetUniverseSchematicsSchematicIDGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
