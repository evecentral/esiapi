// Code generated by go-swagger; DO NOT EDIT.

package planetary_interaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetUniverseSchematicsSchematicIDReader is a Reader for the GetUniverseSchematicsSchematicID structure.
type GetUniverseSchematicsSchematicIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseSchematicsSchematicIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseSchematicsSchematicIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetUniverseSchematicsSchematicIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseSchematicsSchematicIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseSchematicsSchematicIDOK creates a GetUniverseSchematicsSchematicIDOK with default headers values
func NewGetUniverseSchematicsSchematicIDOK() *GetUniverseSchematicsSchematicIDOK {
	return &GetUniverseSchematicsSchematicIDOK{}
}

/*GetUniverseSchematicsSchematicIDOK handles this case with default header values.

Public data about a schematic
*/
type GetUniverseSchematicsSchematicIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload GetUniverseSchematicsSchematicIDOKBody
}

func (o *GetUniverseSchematicsSchematicIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDNotFound creates a GetUniverseSchematicsSchematicIDNotFound with default headers values
func NewGetUniverseSchematicsSchematicIDNotFound() *GetUniverseSchematicsSchematicIDNotFound {
	return &GetUniverseSchematicsSchematicIDNotFound{}
}

/*GetUniverseSchematicsSchematicIDNotFound handles this case with default header values.

Schematic not found
*/
type GetUniverseSchematicsSchematicIDNotFound struct {
	Payload GetUniverseSchematicsSchematicIDNotFoundBody
}

func (o *GetUniverseSchematicsSchematicIDNotFound) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseSchematicsSchematicIDInternalServerError creates a GetUniverseSchematicsSchematicIDInternalServerError with default headers values
func NewGetUniverseSchematicsSchematicIDInternalServerError() *GetUniverseSchematicsSchematicIDInternalServerError {
	return &GetUniverseSchematicsSchematicIDInternalServerError{}
}

/*GetUniverseSchematicsSchematicIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseSchematicsSchematicIDInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetUniverseSchematicsSchematicIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/schematics/{schematic_id}/][%d] getUniverseSchematicsSchematicIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseSchematicsSchematicIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetUniverseSchematicsSchematicIDNotFoundBody get_universe_schematics_schematic_id_not_found
//
// Schematic not found
swagger:model GetUniverseSchematicsSchematicIDNotFoundBody
*/

type GetUniverseSchematicsSchematicIDNotFoundBody struct {

	// get_universe_schematics_schematic_id_error
	//
	// error message
	// Required: true
	Error *string `json:"error"`
}

/* polymorph GetUniverseSchematicsSchematicIDNotFoundBody error false */

// Validate validates this get universe schematics schematic ID not found body
func (o *GetUniverseSchematicsSchematicIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseSchematicsSchematicIDNotFoundBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseSchematicsSchematicIdNotFound"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUniverseSchematicsSchematicIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniverseSchematicsSchematicIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetUniverseSchematicsSchematicIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUniverseSchematicsSchematicIDOKBody get_universe_schematics_schematic_id_ok
//
// 200 ok object
swagger:model GetUniverseSchematicsSchematicIDOKBody
*/

type GetUniverseSchematicsSchematicIDOKBody struct {

	// get_universe_schematics_schematic_id_cycle_time
	//
	// Time in seconds to process a run
	// Required: true
	CycleTime *int32 `json:"cycle_time"`

	// get_universe_schematics_schematic_id_schematic_name
	//
	// schematic_name string
	// Required: true
	SchematicName *string `json:"schematic_name"`
}

/* polymorph GetUniverseSchematicsSchematicIDOKBody cycle_time false */

/* polymorph GetUniverseSchematicsSchematicIDOKBody schematic_name false */

// Validate validates this get universe schematics schematic ID o k body
func (o *GetUniverseSchematicsSchematicIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCycleTime(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateSchematicName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseSchematicsSchematicIDOKBody) validateCycleTime(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseSchematicsSchematicIdOK"+"."+"cycle_time", "body", o.CycleTime); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseSchematicsSchematicIDOKBody) validateSchematicName(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseSchematicsSchematicIdOK"+"."+"schematic_name", "body", o.SchematicName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUniverseSchematicsSchematicIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUniverseSchematicsSchematicIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetUniverseSchematicsSchematicIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
