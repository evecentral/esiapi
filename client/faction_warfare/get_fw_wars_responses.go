// Code generated by go-swagger; DO NOT EDIT.

package faction_warfare

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetFwWarsReader is a Reader for the GetFwWars structure.
type GetFwWarsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFwWarsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFwWarsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetFwWarsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetFwWarsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetFwWarsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetFwWarsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetFwWarsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetFwWarsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFwWarsOK creates a GetFwWarsOK with default headers values
func NewGetFwWarsOK() *GetFwWarsOK {
	return &GetFwWarsOK{}
}

/*GetFwWarsOK handles this case with default header values.

A list of NPC factions at war
*/
type GetFwWarsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetFwWarsOKBodyItems
}

func (o *GetFwWarsOK) Error() string {
	return fmt.Sprintf("[GET /fw/wars/][%d] getFwWarsOK  %+v", 200, o.Payload)
}

func (o *GetFwWarsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwWarsNotModified creates a GetFwWarsNotModified with default headers values
func NewGetFwWarsNotModified() *GetFwWarsNotModified {
	return &GetFwWarsNotModified{}
}

/*GetFwWarsNotModified handles this case with default header values.

Not modified
*/
type GetFwWarsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetFwWarsNotModified) Error() string {
	return fmt.Sprintf("[GET /fw/wars/][%d] getFwWarsNotModified ", 304)
}

func (o *GetFwWarsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetFwWarsBadRequest creates a GetFwWarsBadRequest with default headers values
func NewGetFwWarsBadRequest() *GetFwWarsBadRequest {
	return &GetFwWarsBadRequest{}
}

/*GetFwWarsBadRequest handles this case with default header values.

Bad request
*/
type GetFwWarsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetFwWarsBadRequest) Error() string {
	return fmt.Sprintf("[GET /fw/wars/][%d] getFwWarsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFwWarsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwWarsEnhanceYourCalm creates a GetFwWarsEnhanceYourCalm with default headers values
func NewGetFwWarsEnhanceYourCalm() *GetFwWarsEnhanceYourCalm {
	return &GetFwWarsEnhanceYourCalm{}
}

/*GetFwWarsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetFwWarsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetFwWarsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /fw/wars/][%d] getFwWarsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetFwWarsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwWarsInternalServerError creates a GetFwWarsInternalServerError with default headers values
func NewGetFwWarsInternalServerError() *GetFwWarsInternalServerError {
	return &GetFwWarsInternalServerError{}
}

/*GetFwWarsInternalServerError handles this case with default header values.

Internal server error
*/
type GetFwWarsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetFwWarsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /fw/wars/][%d] getFwWarsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFwWarsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwWarsServiceUnavailable creates a GetFwWarsServiceUnavailable with default headers values
func NewGetFwWarsServiceUnavailable() *GetFwWarsServiceUnavailable {
	return &GetFwWarsServiceUnavailable{}
}

/*GetFwWarsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetFwWarsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetFwWarsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /fw/wars/][%d] getFwWarsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFwWarsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwWarsGatewayTimeout creates a GetFwWarsGatewayTimeout with default headers values
func NewGetFwWarsGatewayTimeout() *GetFwWarsGatewayTimeout {
	return &GetFwWarsGatewayTimeout{}
}

/*GetFwWarsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetFwWarsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetFwWarsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /fw/wars/][%d] getFwWarsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFwWarsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
