// Code generated by go-swagger; DO NOT EDIT.

package faction_warfare

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetFwLeaderboardsCorporationsReader is a Reader for the GetFwLeaderboardsCorporations structure.
type GetFwLeaderboardsCorporationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFwLeaderboardsCorporationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFwLeaderboardsCorporationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetFwLeaderboardsCorporationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFwLeaderboardsCorporationsOK creates a GetFwLeaderboardsCorporationsOK with default headers values
func NewGetFwLeaderboardsCorporationsOK() *GetFwLeaderboardsCorporationsOK {
	return &GetFwLeaderboardsCorporationsOK{}
}

/*GetFwLeaderboardsCorporationsOK handles this case with default header values.

Corporation leaderboard of kills and victory points within faction warfare.
*/
type GetFwLeaderboardsCorporationsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload GetFwLeaderboardsCorporationsOKBody
}

func (o *GetFwLeaderboardsCorporationsOK) Error() string {
	return fmt.Sprintf("[GET /fw/leaderboards/corporations/][%d] getFwLeaderboardsCorporationsOK  %+v", 200, o.Payload)
}

func (o *GetFwLeaderboardsCorporationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwLeaderboardsCorporationsInternalServerError creates a GetFwLeaderboardsCorporationsInternalServerError with default headers values
func NewGetFwLeaderboardsCorporationsInternalServerError() *GetFwLeaderboardsCorporationsInternalServerError {
	return &GetFwLeaderboardsCorporationsInternalServerError{}
}

/*GetFwLeaderboardsCorporationsInternalServerError handles this case with default header values.

Internal server error
*/
type GetFwLeaderboardsCorporationsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetFwLeaderboardsCorporationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /fw/leaderboards/corporations/][%d] getFwLeaderboardsCorporationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFwLeaderboardsCorporationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetFwLeaderboardsCorporationsOKBody get_fw_leaderboards_corporations_ok
//
// 200 ok object
swagger:model GetFwLeaderboardsCorporationsOKBody
*/

type GetFwLeaderboardsCorporationsOKBody struct {

	// kills
	// Required: true
	Kills *GetFwLeaderboardsCorporationsOKBodyKills `json:"kills"`

	// victory points
	// Required: true
	VictoryPoints *GetFwLeaderboardsCorporationsOKBodyVictoryPoints `json:"victory_points"`
}

/* polymorph GetFwLeaderboardsCorporationsOKBody kills false */

/* polymorph GetFwLeaderboardsCorporationsOKBody victory_points false */

// Validate validates this get fw leaderboards corporations o k body
func (o *GetFwLeaderboardsCorporationsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKills(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateVictoryPoints(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwLeaderboardsCorporationsOKBody) validateKills(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCorporationsOK"+"."+"kills", "body", o.Kills); err != nil {
		return err
	}

	if o.Kills != nil {

		if err := o.Kills.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getFwLeaderboardsCorporationsOK" + "." + "kills")
			}
			return err
		}
	}

	return nil
}

func (o *GetFwLeaderboardsCorporationsOKBody) validateVictoryPoints(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCorporationsOK"+"."+"victory_points", "body", o.VictoryPoints); err != nil {
		return err
	}

	if o.VictoryPoints != nil {

		if err := o.VictoryPoints.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getFwLeaderboardsCorporationsOK" + "." + "victory_points")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBody) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCorporationsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCorporationsOKBodyKills get_fw_leaderboards_corporations_kills
//
// Top 10 rankings of corporations by number of kills from yesterday, last week and in total.
swagger:model GetFwLeaderboardsCorporationsOKBodyKills
*/

type GetFwLeaderboardsCorporationsOKBodyKills struct {

	// get_fw_leaderboards_corporations_active_total
	//
	// Top 10 ranking of corporations active in faction warfare by total kills. A corporation is considered "active" if they have participated in faction warfare in the past 14 days.
	// Required: true
	// Max Items: 10
	ActiveTotal []*GetFwLeaderboardsCorporationsOKBodyKillsActiveTotalItems0 `json:"active_total"`

	// get_fw_leaderboards_corporations_last_week
	//
	// Top 10 ranking of corporations by kills in the past week
	// Required: true
	// Max Items: 10
	LastWeek []*GetFwLeaderboardsCorporationsOKBodyKillsLastWeekItems0 `json:"last_week"`

	// get_fw_leaderboards_corporations_yesterday
	//
	// Top 10 ranking of corporations by kills in the past day
	// Required: true
	// Max Items: 10
	Yesterday []*GetFwLeaderboardsCorporationsOKBodyKillsYesterdayItems0 `json:"yesterday"`
}

/* polymorph GetFwLeaderboardsCorporationsOKBodyKills active_total false */

/* polymorph GetFwLeaderboardsCorporationsOKBodyKills last_week false */

/* polymorph GetFwLeaderboardsCorporationsOKBodyKills yesterday false */

// Validate validates this get fw leaderboards corporations o k body kills
func (o *GetFwLeaderboardsCorporationsOKBodyKills) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActiveTotal(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLastWeek(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateYesterday(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwLeaderboardsCorporationsOKBodyKills) validateActiveTotal(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCorporationsOK"+"."+"kills"+"."+"active_total", "body", o.ActiveTotal); err != nil {
		return err
	}

	iActiveTotalSize := int64(len(o.ActiveTotal))

	if err := validate.MaxItems("getFwLeaderboardsCorporationsOK"+"."+"kills"+"."+"active_total", "body", iActiveTotalSize, 10); err != nil {
		return err
	}

	for i := 0; i < len(o.ActiveTotal); i++ {

		if swag.IsZero(o.ActiveTotal[i]) { // not required
			continue
		}

		if o.ActiveTotal[i] != nil {

			if err := o.ActiveTotal[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCorporationsOK" + "." + "kills" + "." + "active_total" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCorporationsOKBodyKills) validateLastWeek(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCorporationsOK"+"."+"kills"+"."+"last_week", "body", o.LastWeek); err != nil {
		return err
	}

	iLastWeekSize := int64(len(o.LastWeek))

	if err := validate.MaxItems("getFwLeaderboardsCorporationsOK"+"."+"kills"+"."+"last_week", "body", iLastWeekSize, 10); err != nil {
		return err
	}

	for i := 0; i < len(o.LastWeek); i++ {

		if swag.IsZero(o.LastWeek[i]) { // not required
			continue
		}

		if o.LastWeek[i] != nil {

			if err := o.LastWeek[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCorporationsOK" + "." + "kills" + "." + "last_week" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCorporationsOKBodyKills) validateYesterday(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCorporationsOK"+"."+"kills"+"."+"yesterday", "body", o.Yesterday); err != nil {
		return err
	}

	iYesterdaySize := int64(len(o.Yesterday))

	if err := validate.MaxItems("getFwLeaderboardsCorporationsOK"+"."+"kills"+"."+"yesterday", "body", iYesterdaySize, 10); err != nil {
		return err
	}

	for i := 0; i < len(o.Yesterday); i++ {

		if swag.IsZero(o.Yesterday[i]) { // not required
			continue
		}

		if o.Yesterday[i] != nil {

			if err := o.Yesterday[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCorporationsOK" + "." + "kills" + "." + "yesterday" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyKills) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyKills) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCorporationsOKBodyKills
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCorporationsOKBodyKillsActiveTotalItems0 get_fw_leaderboards_corporations_active_total
//
// active_total object
swagger:model GetFwLeaderboardsCorporationsOKBodyKillsActiveTotalItems0
*/

type GetFwLeaderboardsCorporationsOKBodyKillsActiveTotalItems0 struct {

	// get_fw_leaderboards_corporations_amount
	//
	// Amount of kills
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_corporations_corporation_id
	//
	// corporation_id integer
	CorporationID int32 `json:"corporation_id,omitempty"`
}

/* polymorph GetFwLeaderboardsCorporationsOKBodyKillsActiveTotalItems0 amount false */

/* polymorph GetFwLeaderboardsCorporationsOKBodyKillsActiveTotalItems0 corporation_id false */

// Validate validates this get fw leaderboards corporations o k body kills active total items0
func (o *GetFwLeaderboardsCorporationsOKBodyKillsActiveTotalItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyKillsActiveTotalItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyKillsActiveTotalItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCorporationsOKBodyKillsActiveTotalItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCorporationsOKBodyKillsLastWeekItems0 get_fw_leaderboards_corporations_last_week
//
// last_week object
swagger:model GetFwLeaderboardsCorporationsOKBodyKillsLastWeekItems0
*/

type GetFwLeaderboardsCorporationsOKBodyKillsLastWeekItems0 struct {

	// get_fw_leaderboards_corporations_amount
	//
	// Amount of kills
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_corporations_corporation_id
	//
	// corporation_id integer
	CorporationID int32 `json:"corporation_id,omitempty"`
}

/* polymorph GetFwLeaderboardsCorporationsOKBodyKillsLastWeekItems0 amount false */

/* polymorph GetFwLeaderboardsCorporationsOKBodyKillsLastWeekItems0 corporation_id false */

// Validate validates this get fw leaderboards corporations o k body kills last week items0
func (o *GetFwLeaderboardsCorporationsOKBodyKillsLastWeekItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyKillsLastWeekItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyKillsLastWeekItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCorporationsOKBodyKillsLastWeekItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCorporationsOKBodyKillsYesterdayItems0 get_fw_leaderboards_corporations_yesterday
//
// yesterday object
swagger:model GetFwLeaderboardsCorporationsOKBodyKillsYesterdayItems0
*/

type GetFwLeaderboardsCorporationsOKBodyKillsYesterdayItems0 struct {

	// get_fw_leaderboards_corporations_amount
	//
	// Amount of kills
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_corporations_corporation_id
	//
	// corporation_id integer
	CorporationID int32 `json:"corporation_id,omitempty"`
}

/* polymorph GetFwLeaderboardsCorporationsOKBodyKillsYesterdayItems0 amount false */

/* polymorph GetFwLeaderboardsCorporationsOKBodyKillsYesterdayItems0 corporation_id false */

// Validate validates this get fw leaderboards corporations o k body kills yesterday items0
func (o *GetFwLeaderboardsCorporationsOKBodyKillsYesterdayItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyKillsYesterdayItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyKillsYesterdayItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCorporationsOKBodyKillsYesterdayItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCorporationsOKBodyVictoryPoints get_fw_leaderboards_corporations_victory_points
//
// Top 10 rankings of corporations by victory points from yesterday, last week and in total
swagger:model GetFwLeaderboardsCorporationsOKBodyVictoryPoints
*/

type GetFwLeaderboardsCorporationsOKBodyVictoryPoints struct {

	// get_fw_leaderboards_corporations_active_total
	//
	// Top 10 ranking of corporations active in faction warfare by total victory points. A corporation is considered "active" if they have participated in faction warfare in the past 14 days.
	// Required: true
	// Max Items: 10
	ActiveTotal []*GetFwLeaderboardsCorporationsOKBodyVictoryPointsActiveTotalItems0 `json:"active_total"`

	// get_fw_leaderboards_corporations_last_week
	//
	// Top 10 ranking of corporations by victory points in the past week
	// Required: true
	// Max Items: 10
	LastWeek []*GetFwLeaderboardsCorporationsOKBodyVictoryPointsLastWeekItems0 `json:"last_week"`

	// get_fw_leaderboards_corporations_yesterday
	//
	// Top 10 ranking of corporations by victory points in the past day
	// Required: true
	// Max Items: 10
	Yesterday []*GetFwLeaderboardsCorporationsOKBodyVictoryPointsYesterdayItems0 `json:"yesterday"`
}

/* polymorph GetFwLeaderboardsCorporationsOKBodyVictoryPoints active_total false */

/* polymorph GetFwLeaderboardsCorporationsOKBodyVictoryPoints last_week false */

/* polymorph GetFwLeaderboardsCorporationsOKBodyVictoryPoints yesterday false */

// Validate validates this get fw leaderboards corporations o k body victory points
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPoints) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActiveTotal(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLastWeek(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateYesterday(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPoints) validateActiveTotal(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCorporationsOK"+"."+"victory_points"+"."+"active_total", "body", o.ActiveTotal); err != nil {
		return err
	}

	iActiveTotalSize := int64(len(o.ActiveTotal))

	if err := validate.MaxItems("getFwLeaderboardsCorporationsOK"+"."+"victory_points"+"."+"active_total", "body", iActiveTotalSize, 10); err != nil {
		return err
	}

	for i := 0; i < len(o.ActiveTotal); i++ {

		if swag.IsZero(o.ActiveTotal[i]) { // not required
			continue
		}

		if o.ActiveTotal[i] != nil {

			if err := o.ActiveTotal[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCorporationsOK" + "." + "victory_points" + "." + "active_total" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPoints) validateLastWeek(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCorporationsOK"+"."+"victory_points"+"."+"last_week", "body", o.LastWeek); err != nil {
		return err
	}

	iLastWeekSize := int64(len(o.LastWeek))

	if err := validate.MaxItems("getFwLeaderboardsCorporationsOK"+"."+"victory_points"+"."+"last_week", "body", iLastWeekSize, 10); err != nil {
		return err
	}

	for i := 0; i < len(o.LastWeek); i++ {

		if swag.IsZero(o.LastWeek[i]) { // not required
			continue
		}

		if o.LastWeek[i] != nil {

			if err := o.LastWeek[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCorporationsOK" + "." + "victory_points" + "." + "last_week" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPoints) validateYesterday(formats strfmt.Registry) error {

	if err := validate.Required("getFwLeaderboardsCorporationsOK"+"."+"victory_points"+"."+"yesterday", "body", o.Yesterday); err != nil {
		return err
	}

	iYesterdaySize := int64(len(o.Yesterday))

	if err := validate.MaxItems("getFwLeaderboardsCorporationsOK"+"."+"victory_points"+"."+"yesterday", "body", iYesterdaySize, 10); err != nil {
		return err
	}

	for i := 0; i < len(o.Yesterday); i++ {

		if swag.IsZero(o.Yesterday[i]) { // not required
			continue
		}

		if o.Yesterday[i] != nil {

			if err := o.Yesterday[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getFwLeaderboardsCorporationsOK" + "." + "victory_points" + "." + "yesterday" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPoints) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPoints) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCorporationsOKBodyVictoryPoints
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCorporationsOKBodyVictoryPointsActiveTotalItems0 get_fw_leaderboards_corporations_active_total
//
// active_total object
swagger:model GetFwLeaderboardsCorporationsOKBodyVictoryPointsActiveTotalItems0
*/

type GetFwLeaderboardsCorporationsOKBodyVictoryPointsActiveTotalItems0 struct {

	// get_fw_leaderboards_corporations_amount
	//
	// Amount of victory points
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_corporations_corporation_id
	//
	// corporation_id integer
	CorporationID int32 `json:"corporation_id,omitempty"`
}

/* polymorph GetFwLeaderboardsCorporationsOKBodyVictoryPointsActiveTotalItems0 amount false */

/* polymorph GetFwLeaderboardsCorporationsOKBodyVictoryPointsActiveTotalItems0 corporation_id false */

// Validate validates this get fw leaderboards corporations o k body victory points active total items0
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPointsActiveTotalItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPointsActiveTotalItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPointsActiveTotalItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCorporationsOKBodyVictoryPointsActiveTotalItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCorporationsOKBodyVictoryPointsLastWeekItems0 get_fw_leaderboards_corporations_last_week
//
// last_week object
swagger:model GetFwLeaderboardsCorporationsOKBodyVictoryPointsLastWeekItems0
*/

type GetFwLeaderboardsCorporationsOKBodyVictoryPointsLastWeekItems0 struct {

	// get_fw_leaderboards_corporations_amount
	//
	// Amount of victory points
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_corporations_corporation_id
	//
	// corporation_id integer
	CorporationID int32 `json:"corporation_id,omitempty"`
}

/* polymorph GetFwLeaderboardsCorporationsOKBodyVictoryPointsLastWeekItems0 amount false */

/* polymorph GetFwLeaderboardsCorporationsOKBodyVictoryPointsLastWeekItems0 corporation_id false */

// Validate validates this get fw leaderboards corporations o k body victory points last week items0
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPointsLastWeekItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPointsLastWeekItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPointsLastWeekItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCorporationsOKBodyVictoryPointsLastWeekItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetFwLeaderboardsCorporationsOKBodyVictoryPointsYesterdayItems0 get_fw_leaderboards_corporations_yesterday
//
// yesterday object
swagger:model GetFwLeaderboardsCorporationsOKBodyVictoryPointsYesterdayItems0
*/

type GetFwLeaderboardsCorporationsOKBodyVictoryPointsYesterdayItems0 struct {

	// get_fw_leaderboards_corporations_amount
	//
	// Amount of victory points
	Amount int32 `json:"amount,omitempty"`

	// get_fw_leaderboards_corporations_corporation_id
	//
	// corporation_id integer
	CorporationID int32 `json:"corporation_id,omitempty"`
}

/* polymorph GetFwLeaderboardsCorporationsOKBodyVictoryPointsYesterdayItems0 amount false */

/* polymorph GetFwLeaderboardsCorporationsOKBodyVictoryPointsYesterdayItems0 corporation_id false */

// Validate validates this get fw leaderboards corporations o k body victory points yesterday items0
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPointsYesterdayItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPointsYesterdayItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetFwLeaderboardsCorporationsOKBodyVictoryPointsYesterdayItems0) UnmarshalBinary(b []byte) error {
	var res GetFwLeaderboardsCorporationsOKBodyVictoryPointsYesterdayItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
