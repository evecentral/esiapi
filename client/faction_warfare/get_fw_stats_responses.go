// Code generated by go-swagger; DO NOT EDIT.

package faction_warfare

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetFwStatsReader is a Reader for the GetFwStats structure.
type GetFwStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFwStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFwStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetFwStatsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetFwStatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetFwStatsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetFwStatsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetFwStatsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetFwStatsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFwStatsOK creates a GetFwStatsOK with default headers values
func NewGetFwStatsOK() *GetFwStatsOK {
	return &GetFwStatsOK{}
}

/*GetFwStatsOK handles this case with default header values.

Per faction breakdown of faction warfare statistics
*/
type GetFwStatsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetFwStatsOKBodyItems
}

func (o *GetFwStatsOK) Error() string {
	return fmt.Sprintf("[GET /fw/stats/][%d] getFwStatsOK  %+v", 200, o.Payload)
}

func (o *GetFwStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwStatsNotModified creates a GetFwStatsNotModified with default headers values
func NewGetFwStatsNotModified() *GetFwStatsNotModified {
	return &GetFwStatsNotModified{}
}

/*GetFwStatsNotModified handles this case with default header values.

Not modified
*/
type GetFwStatsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetFwStatsNotModified) Error() string {
	return fmt.Sprintf("[GET /fw/stats/][%d] getFwStatsNotModified ", 304)
}

func (o *GetFwStatsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetFwStatsBadRequest creates a GetFwStatsBadRequest with default headers values
func NewGetFwStatsBadRequest() *GetFwStatsBadRequest {
	return &GetFwStatsBadRequest{}
}

/*GetFwStatsBadRequest handles this case with default header values.

Bad request
*/
type GetFwStatsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetFwStatsBadRequest) Error() string {
	return fmt.Sprintf("[GET /fw/stats/][%d] getFwStatsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFwStatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwStatsEnhanceYourCalm creates a GetFwStatsEnhanceYourCalm with default headers values
func NewGetFwStatsEnhanceYourCalm() *GetFwStatsEnhanceYourCalm {
	return &GetFwStatsEnhanceYourCalm{}
}

/*GetFwStatsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetFwStatsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetFwStatsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /fw/stats/][%d] getFwStatsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetFwStatsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwStatsInternalServerError creates a GetFwStatsInternalServerError with default headers values
func NewGetFwStatsInternalServerError() *GetFwStatsInternalServerError {
	return &GetFwStatsInternalServerError{}
}

/*GetFwStatsInternalServerError handles this case with default header values.

Internal server error
*/
type GetFwStatsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetFwStatsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /fw/stats/][%d] getFwStatsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFwStatsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwStatsServiceUnavailable creates a GetFwStatsServiceUnavailable with default headers values
func NewGetFwStatsServiceUnavailable() *GetFwStatsServiceUnavailable {
	return &GetFwStatsServiceUnavailable{}
}

/*GetFwStatsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetFwStatsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetFwStatsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /fw/stats/][%d] getFwStatsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetFwStatsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFwStatsGatewayTimeout creates a GetFwStatsGatewayTimeout with default headers values
func NewGetFwStatsGatewayTimeout() *GetFwStatsGatewayTimeout {
	return &GetFwStatsGatewayTimeout{}
}

/*GetFwStatsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetFwStatsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetFwStatsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /fw/stats/][%d] getFwStatsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetFwStatsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
