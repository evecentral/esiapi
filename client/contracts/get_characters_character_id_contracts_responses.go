// Code generated by go-swagger; DO NOT EDIT.

package contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDContractsReader is a Reader for the GetCharactersCharacterIDContracts structure.
type GetCharactersCharacterIDContractsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDContractsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDContractsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDContractsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDContractsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDContractsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDContractsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDContractsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDContractsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDContractsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDContractsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDContractsOK creates a GetCharactersCharacterIDContractsOK with default headers values
func NewGetCharactersCharacterIDContractsOK() *GetCharactersCharacterIDContractsOK {
	return &GetCharactersCharacterIDContractsOK{
		XPages: 1,
	}
}

/*GetCharactersCharacterIDContractsOK handles this case with default header values.

A list of contracts
*/
type GetCharactersCharacterIDContractsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetCharactersCharacterIDContractsOKBodyItems
}

func (o *GetCharactersCharacterIDContractsOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contracts/][%d] getCharactersCharacterIdContractsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDContractsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContractsNotModified creates a GetCharactersCharacterIDContractsNotModified with default headers values
func NewGetCharactersCharacterIDContractsNotModified() *GetCharactersCharacterIDContractsNotModified {
	return &GetCharactersCharacterIDContractsNotModified{}
}

/*GetCharactersCharacterIDContractsNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDContractsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDContractsNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contracts/][%d] getCharactersCharacterIdContractsNotModified ", 304)
}

func (o *GetCharactersCharacterIDContractsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDContractsBadRequest creates a GetCharactersCharacterIDContractsBadRequest with default headers values
func NewGetCharactersCharacterIDContractsBadRequest() *GetCharactersCharacterIDContractsBadRequest {
	return &GetCharactersCharacterIDContractsBadRequest{}
}

/*GetCharactersCharacterIDContractsBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDContractsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDContractsBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contracts/][%d] getCharactersCharacterIdContractsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDContractsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContractsUnauthorized creates a GetCharactersCharacterIDContractsUnauthorized with default headers values
func NewGetCharactersCharacterIDContractsUnauthorized() *GetCharactersCharacterIDContractsUnauthorized {
	return &GetCharactersCharacterIDContractsUnauthorized{}
}

/*GetCharactersCharacterIDContractsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDContractsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDContractsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contracts/][%d] getCharactersCharacterIdContractsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDContractsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContractsForbidden creates a GetCharactersCharacterIDContractsForbidden with default headers values
func NewGetCharactersCharacterIDContractsForbidden() *GetCharactersCharacterIDContractsForbidden {
	return &GetCharactersCharacterIDContractsForbidden{}
}

/*GetCharactersCharacterIDContractsForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDContractsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDContractsForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contracts/][%d] getCharactersCharacterIdContractsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDContractsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContractsEnhanceYourCalm creates a GetCharactersCharacterIDContractsEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDContractsEnhanceYourCalm() *GetCharactersCharacterIDContractsEnhanceYourCalm {
	return &GetCharactersCharacterIDContractsEnhanceYourCalm{}
}

/*GetCharactersCharacterIDContractsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDContractsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDContractsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contracts/][%d] getCharactersCharacterIdContractsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDContractsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContractsInternalServerError creates a GetCharactersCharacterIDContractsInternalServerError with default headers values
func NewGetCharactersCharacterIDContractsInternalServerError() *GetCharactersCharacterIDContractsInternalServerError {
	return &GetCharactersCharacterIDContractsInternalServerError{}
}

/*GetCharactersCharacterIDContractsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDContractsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDContractsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contracts/][%d] getCharactersCharacterIdContractsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDContractsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContractsServiceUnavailable creates a GetCharactersCharacterIDContractsServiceUnavailable with default headers values
func NewGetCharactersCharacterIDContractsServiceUnavailable() *GetCharactersCharacterIDContractsServiceUnavailable {
	return &GetCharactersCharacterIDContractsServiceUnavailable{}
}

/*GetCharactersCharacterIDContractsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDContractsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDContractsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contracts/][%d] getCharactersCharacterIdContractsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDContractsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDContractsGatewayTimeout creates a GetCharactersCharacterIDContractsGatewayTimeout with default headers values
func NewGetCharactersCharacterIDContractsGatewayTimeout() *GetCharactersCharacterIDContractsGatewayTimeout {
	return &GetCharactersCharacterIDContractsGatewayTimeout{}
}

/*GetCharactersCharacterIDContractsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDContractsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDContractsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/contracts/][%d] getCharactersCharacterIdContractsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDContractsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
