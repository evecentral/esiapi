// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDOrdersReader is a Reader for the GetCharactersCharacterIDOrders structure.
type GetCharactersCharacterIDOrdersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDOrdersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDOrdersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDOrdersNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDOrdersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDOrdersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDOrdersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDOrdersEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDOrdersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDOrdersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDOrdersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDOrdersOK creates a GetCharactersCharacterIDOrdersOK with default headers values
func NewGetCharactersCharacterIDOrdersOK() *GetCharactersCharacterIDOrdersOK {
	return &GetCharactersCharacterIDOrdersOK{}
}

/*GetCharactersCharacterIDOrdersOK handles this case with default header values.

Open market orders placed by a character
*/
type GetCharactersCharacterIDOrdersOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetCharactersCharacterIDOrdersOKBodyItems
}

func (o *GetCharactersCharacterIDOrdersOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/orders/][%d] getCharactersCharacterIdOrdersOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDOrdersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOrdersNotModified creates a GetCharactersCharacterIDOrdersNotModified with default headers values
func NewGetCharactersCharacterIDOrdersNotModified() *GetCharactersCharacterIDOrdersNotModified {
	return &GetCharactersCharacterIDOrdersNotModified{}
}

/*GetCharactersCharacterIDOrdersNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDOrdersNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDOrdersNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/orders/][%d] getCharactersCharacterIdOrdersNotModified ", 304)
}

func (o *GetCharactersCharacterIDOrdersNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDOrdersBadRequest creates a GetCharactersCharacterIDOrdersBadRequest with default headers values
func NewGetCharactersCharacterIDOrdersBadRequest() *GetCharactersCharacterIDOrdersBadRequest {
	return &GetCharactersCharacterIDOrdersBadRequest{}
}

/*GetCharactersCharacterIDOrdersBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDOrdersBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDOrdersBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/orders/][%d] getCharactersCharacterIdOrdersBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDOrdersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOrdersUnauthorized creates a GetCharactersCharacterIDOrdersUnauthorized with default headers values
func NewGetCharactersCharacterIDOrdersUnauthorized() *GetCharactersCharacterIDOrdersUnauthorized {
	return &GetCharactersCharacterIDOrdersUnauthorized{}
}

/*GetCharactersCharacterIDOrdersUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDOrdersUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDOrdersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/orders/][%d] getCharactersCharacterIdOrdersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDOrdersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOrdersForbidden creates a GetCharactersCharacterIDOrdersForbidden with default headers values
func NewGetCharactersCharacterIDOrdersForbidden() *GetCharactersCharacterIDOrdersForbidden {
	return &GetCharactersCharacterIDOrdersForbidden{}
}

/*GetCharactersCharacterIDOrdersForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDOrdersForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDOrdersForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/orders/][%d] getCharactersCharacterIdOrdersForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDOrdersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOrdersEnhanceYourCalm creates a GetCharactersCharacterIDOrdersEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDOrdersEnhanceYourCalm() *GetCharactersCharacterIDOrdersEnhanceYourCalm {
	return &GetCharactersCharacterIDOrdersEnhanceYourCalm{}
}

/*GetCharactersCharacterIDOrdersEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDOrdersEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDOrdersEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/orders/][%d] getCharactersCharacterIdOrdersEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDOrdersEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOrdersInternalServerError creates a GetCharactersCharacterIDOrdersInternalServerError with default headers values
func NewGetCharactersCharacterIDOrdersInternalServerError() *GetCharactersCharacterIDOrdersInternalServerError {
	return &GetCharactersCharacterIDOrdersInternalServerError{}
}

/*GetCharactersCharacterIDOrdersInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDOrdersInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDOrdersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/orders/][%d] getCharactersCharacterIdOrdersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDOrdersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOrdersServiceUnavailable creates a GetCharactersCharacterIDOrdersServiceUnavailable with default headers values
func NewGetCharactersCharacterIDOrdersServiceUnavailable() *GetCharactersCharacterIDOrdersServiceUnavailable {
	return &GetCharactersCharacterIDOrdersServiceUnavailable{}
}

/*GetCharactersCharacterIDOrdersServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDOrdersServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDOrdersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/orders/][%d] getCharactersCharacterIdOrdersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDOrdersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDOrdersGatewayTimeout creates a GetCharactersCharacterIDOrdersGatewayTimeout with default headers values
func NewGetCharactersCharacterIDOrdersGatewayTimeout() *GetCharactersCharacterIDOrdersGatewayTimeout {
	return &GetCharactersCharacterIDOrdersGatewayTimeout{}
}

/*GetCharactersCharacterIDOrdersGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDOrdersGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDOrdersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/orders/][%d] getCharactersCharacterIdOrdersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDOrdersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
