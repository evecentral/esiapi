// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetMarketsRegionIDOrdersReader is a Reader for the GetMarketsRegionIDOrders structure.
type GetMarketsRegionIDOrdersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMarketsRegionIDOrdersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMarketsRegionIDOrdersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetMarketsRegionIDOrdersNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetMarketsRegionIDOrdersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetMarketsRegionIDOrdersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetMarketsRegionIDOrdersEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewGetMarketsRegionIDOrdersUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetMarketsRegionIDOrdersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetMarketsRegionIDOrdersServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetMarketsRegionIDOrdersGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMarketsRegionIDOrdersOK creates a GetMarketsRegionIDOrdersOK with default headers values
func NewGetMarketsRegionIDOrdersOK() *GetMarketsRegionIDOrdersOK {
	return &GetMarketsRegionIDOrdersOK{
		XPages: 1,
	}
}

/*GetMarketsRegionIDOrdersOK handles this case with default header values.

A list of orders
*/
type GetMarketsRegionIDOrdersOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetMarketsRegionIDOrdersOKBodyItems
}

func (o *GetMarketsRegionIDOrdersOK) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersOK  %+v", 200, o.Payload)
}

func (o *GetMarketsRegionIDOrdersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersNotModified creates a GetMarketsRegionIDOrdersNotModified with default headers values
func NewGetMarketsRegionIDOrdersNotModified() *GetMarketsRegionIDOrdersNotModified {
	return &GetMarketsRegionIDOrdersNotModified{}
}

/*GetMarketsRegionIDOrdersNotModified handles this case with default header values.

Not modified
*/
type GetMarketsRegionIDOrdersNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetMarketsRegionIDOrdersNotModified) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersNotModified ", 304)
}

func (o *GetMarketsRegionIDOrdersNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetMarketsRegionIDOrdersBadRequest creates a GetMarketsRegionIDOrdersBadRequest with default headers values
func NewGetMarketsRegionIDOrdersBadRequest() *GetMarketsRegionIDOrdersBadRequest {
	return &GetMarketsRegionIDOrdersBadRequest{}
}

/*GetMarketsRegionIDOrdersBadRequest handles this case with default header values.

Bad request
*/
type GetMarketsRegionIDOrdersBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetMarketsRegionIDOrdersBadRequest) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersBadRequest  %+v", 400, o.Payload)
}

func (o *GetMarketsRegionIDOrdersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersNotFound creates a GetMarketsRegionIDOrdersNotFound with default headers values
func NewGetMarketsRegionIDOrdersNotFound() *GetMarketsRegionIDOrdersNotFound {
	return &GetMarketsRegionIDOrdersNotFound{}
}

/*GetMarketsRegionIDOrdersNotFound handles this case with default header values.

Not found
*/
type GetMarketsRegionIDOrdersNotFound struct {
	Payload *models.GetMarketsRegionIDOrdersNotFoundBody
}

func (o *GetMarketsRegionIDOrdersNotFound) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersNotFound  %+v", 404, o.Payload)
}

func (o *GetMarketsRegionIDOrdersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetMarketsRegionIDOrdersNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersEnhanceYourCalm creates a GetMarketsRegionIDOrdersEnhanceYourCalm with default headers values
func NewGetMarketsRegionIDOrdersEnhanceYourCalm() *GetMarketsRegionIDOrdersEnhanceYourCalm {
	return &GetMarketsRegionIDOrdersEnhanceYourCalm{}
}

/*GetMarketsRegionIDOrdersEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetMarketsRegionIDOrdersEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetMarketsRegionIDOrdersEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersUnprocessableEntity creates a GetMarketsRegionIDOrdersUnprocessableEntity with default headers values
func NewGetMarketsRegionIDOrdersUnprocessableEntity() *GetMarketsRegionIDOrdersUnprocessableEntity {
	return &GetMarketsRegionIDOrdersUnprocessableEntity{}
}

/*GetMarketsRegionIDOrdersUnprocessableEntity handles this case with default header values.

Not found
*/
type GetMarketsRegionIDOrdersUnprocessableEntity struct {
	Payload *models.GetMarketsRegionIDOrdersUnprocessableEntityBody
}

func (o *GetMarketsRegionIDOrdersUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetMarketsRegionIDOrdersUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetMarketsRegionIDOrdersUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersInternalServerError creates a GetMarketsRegionIDOrdersInternalServerError with default headers values
func NewGetMarketsRegionIDOrdersInternalServerError() *GetMarketsRegionIDOrdersInternalServerError {
	return &GetMarketsRegionIDOrdersInternalServerError{}
}

/*GetMarketsRegionIDOrdersInternalServerError handles this case with default header values.

Internal server error
*/
type GetMarketsRegionIDOrdersInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetMarketsRegionIDOrdersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMarketsRegionIDOrdersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersServiceUnavailable creates a GetMarketsRegionIDOrdersServiceUnavailable with default headers values
func NewGetMarketsRegionIDOrdersServiceUnavailable() *GetMarketsRegionIDOrdersServiceUnavailable {
	return &GetMarketsRegionIDOrdersServiceUnavailable{}
}

/*GetMarketsRegionIDOrdersServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetMarketsRegionIDOrdersServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetMarketsRegionIDOrdersServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetMarketsRegionIDOrdersServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDOrdersGatewayTimeout creates a GetMarketsRegionIDOrdersGatewayTimeout with default headers values
func NewGetMarketsRegionIDOrdersGatewayTimeout() *GetMarketsRegionIDOrdersGatewayTimeout {
	return &GetMarketsRegionIDOrdersGatewayTimeout{}
}

/*GetMarketsRegionIDOrdersGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetMarketsRegionIDOrdersGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetMarketsRegionIDOrdersGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/orders/][%d] getMarketsRegionIdOrdersGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetMarketsRegionIDOrdersGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
