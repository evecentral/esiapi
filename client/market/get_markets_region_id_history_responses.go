// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetMarketsRegionIDHistoryReader is a Reader for the GetMarketsRegionIDHistory structure.
type GetMarketsRegionIDHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMarketsRegionIDHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMarketsRegionIDHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 422:
		result := NewGetMarketsRegionIDHistoryUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetMarketsRegionIDHistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMarketsRegionIDHistoryOK creates a GetMarketsRegionIDHistoryOK with default headers values
func NewGetMarketsRegionIDHistoryOK() *GetMarketsRegionIDHistoryOK {
	return &GetMarketsRegionIDHistoryOK{}
}

/*GetMarketsRegionIDHistoryOK handles this case with default header values.

A list of historical market statistics
*/
type GetMarketsRegionIDHistoryOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetMarketsRegionIDHistoryOKBodyItems0
}

func (o *GetMarketsRegionIDHistoryOK) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryOK  %+v", 200, o.Payload)
}

func (o *GetMarketsRegionIDHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDHistoryUnprocessableEntity creates a GetMarketsRegionIDHistoryUnprocessableEntity with default headers values
func NewGetMarketsRegionIDHistoryUnprocessableEntity() *GetMarketsRegionIDHistoryUnprocessableEntity {
	return &GetMarketsRegionIDHistoryUnprocessableEntity{}
}

/*GetMarketsRegionIDHistoryUnprocessableEntity handles this case with default header values.

Not found
*/
type GetMarketsRegionIDHistoryUnprocessableEntity struct {
	Payload GetMarketsRegionIDHistoryUnprocessableEntityBody
}

func (o *GetMarketsRegionIDHistoryUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetMarketsRegionIDHistoryUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDHistoryInternalServerError creates a GetMarketsRegionIDHistoryInternalServerError with default headers values
func NewGetMarketsRegionIDHistoryInternalServerError() *GetMarketsRegionIDHistoryInternalServerError {
	return &GetMarketsRegionIDHistoryInternalServerError{}
}

/*GetMarketsRegionIDHistoryInternalServerError handles this case with default header values.

Internal server error
*/
type GetMarketsRegionIDHistoryInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetMarketsRegionIDHistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMarketsRegionIDHistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetMarketsRegionIDHistoryOKBodyItems0 get_markets_region_id_history_200_ok
//
// 200 ok object
swagger:model GetMarketsRegionIDHistoryOKBodyItems0
*/

type GetMarketsRegionIDHistoryOKBodyItems0 struct {

	// get_markets_region_id_history_average
	//
	// average number
	// Required: true
	Average *float32 `json:"average"`

	// get_markets_region_id_history_date
	//
	// The date of this historical statistic entry
	// Required: true
	Date *strfmt.Date `json:"date"`

	// get_markets_region_id_history_highest
	//
	// highest number
	// Required: true
	Highest *float32 `json:"highest"`

	// get_markets_region_id_history_lowest
	//
	// lowest number
	// Required: true
	Lowest *float32 `json:"lowest"`

	// get_markets_region_id_history_order_count
	//
	// Total number of orders happened that day
	// Required: true
	OrderCount *int64 `json:"order_count"`

	// get_markets_region_id_history_volume
	//
	// Total
	// Required: true
	Volume *int64 `json:"volume"`
}

/* polymorph GetMarketsRegionIDHistoryOKBodyItems0 average false */

/* polymorph GetMarketsRegionIDHistoryOKBodyItems0 date false */

/* polymorph GetMarketsRegionIDHistoryOKBodyItems0 highest false */

/* polymorph GetMarketsRegionIDHistoryOKBodyItems0 lowest false */

/* polymorph GetMarketsRegionIDHistoryOKBodyItems0 order_count false */

/* polymorph GetMarketsRegionIDHistoryOKBodyItems0 volume false */

// Validate validates this get markets region ID history o k body items0
func (o *GetMarketsRegionIDHistoryOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAverage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateHighest(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLowest(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateOrderCount(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateVolume(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetMarketsRegionIDHistoryOKBodyItems0) validateAverage(formats strfmt.Registry) error {

	if err := validate.Required("average", "body", o.Average); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDHistoryOKBodyItems0) validateDate(formats strfmt.Registry) error {

	if err := validate.Required("date", "body", o.Date); err != nil {
		return err
	}

	if err := validate.FormatOf("date", "body", "date", o.Date.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDHistoryOKBodyItems0) validateHighest(formats strfmt.Registry) error {

	if err := validate.Required("highest", "body", o.Highest); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDHistoryOKBodyItems0) validateLowest(formats strfmt.Registry) error {

	if err := validate.Required("lowest", "body", o.Lowest); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDHistoryOKBodyItems0) validateOrderCount(formats strfmt.Registry) error {

	if err := validate.Required("order_count", "body", o.OrderCount); err != nil {
		return err
	}

	return nil
}

func (o *GetMarketsRegionIDHistoryOKBodyItems0) validateVolume(formats strfmt.Registry) error {

	if err := validate.Required("volume", "body", o.Volume); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetMarketsRegionIDHistoryOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMarketsRegionIDHistoryOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetMarketsRegionIDHistoryOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetMarketsRegionIDHistoryUnprocessableEntityBody get_markets_region_id_history_unprocessable_entity
//
// Unprocessable entity
swagger:model GetMarketsRegionIDHistoryUnprocessableEntityBody
*/

type GetMarketsRegionIDHistoryUnprocessableEntityBody struct {

	// get_markets_region_id_history_422_unprocessable_entity
	//
	// Unprocessable entity message
	// Required: true
	Error *string `json:"error"`
}

/* polymorph GetMarketsRegionIDHistoryUnprocessableEntityBody error false */

// Validate validates this get markets region ID history unprocessable entity body
func (o *GetMarketsRegionIDHistoryUnprocessableEntityBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetMarketsRegionIDHistoryUnprocessableEntityBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getMarketsRegionIdHistoryUnprocessableEntity"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetMarketsRegionIDHistoryUnprocessableEntityBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMarketsRegionIDHistoryUnprocessableEntityBody) UnmarshalBinary(b []byte) error {
	var res GetMarketsRegionIDHistoryUnprocessableEntityBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
