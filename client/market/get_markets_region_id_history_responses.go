// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetMarketsRegionIDHistoryReader is a Reader for the GetMarketsRegionIDHistory structure.
type GetMarketsRegionIDHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMarketsRegionIDHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMarketsRegionIDHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetMarketsRegionIDHistoryNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetMarketsRegionIDHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetMarketsRegionIDHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetMarketsRegionIDHistoryEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewGetMarketsRegionIDHistoryUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetMarketsRegionIDHistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetMarketsRegionIDHistoryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetMarketsRegionIDHistoryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 520:
		result := NewGetMarketsRegionIDHistory()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMarketsRegionIDHistoryOK creates a GetMarketsRegionIDHistoryOK with default headers values
func NewGetMarketsRegionIDHistoryOK() *GetMarketsRegionIDHistoryOK {
	return &GetMarketsRegionIDHistoryOK{}
}

/*GetMarketsRegionIDHistoryOK handles this case with default header values.

A list of historical market statistics
*/
type GetMarketsRegionIDHistoryOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetMarketsRegionIDHistoryOKBodyItems
}

func (o *GetMarketsRegionIDHistoryOK) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryOK  %+v", 200, o.Payload)
}

func (o *GetMarketsRegionIDHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDHistoryNotModified creates a GetMarketsRegionIDHistoryNotModified with default headers values
func NewGetMarketsRegionIDHistoryNotModified() *GetMarketsRegionIDHistoryNotModified {
	return &GetMarketsRegionIDHistoryNotModified{}
}

/*GetMarketsRegionIDHistoryNotModified handles this case with default header values.

Not modified
*/
type GetMarketsRegionIDHistoryNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetMarketsRegionIDHistoryNotModified) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryNotModified ", 304)
}

func (o *GetMarketsRegionIDHistoryNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetMarketsRegionIDHistoryBadRequest creates a GetMarketsRegionIDHistoryBadRequest with default headers values
func NewGetMarketsRegionIDHistoryBadRequest() *GetMarketsRegionIDHistoryBadRequest {
	return &GetMarketsRegionIDHistoryBadRequest{}
}

/*GetMarketsRegionIDHistoryBadRequest handles this case with default header values.

Bad request
*/
type GetMarketsRegionIDHistoryBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetMarketsRegionIDHistoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryBadRequest  %+v", 400, o.Payload)
}

func (o *GetMarketsRegionIDHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDHistoryNotFound creates a GetMarketsRegionIDHistoryNotFound with default headers values
func NewGetMarketsRegionIDHistoryNotFound() *GetMarketsRegionIDHistoryNotFound {
	return &GetMarketsRegionIDHistoryNotFound{}
}

/*GetMarketsRegionIDHistoryNotFound handles this case with default header values.

Type not found
*/
type GetMarketsRegionIDHistoryNotFound struct {
	Payload *models.GetMarketsRegionIDHistoryNotFoundBody
}

func (o *GetMarketsRegionIDHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryNotFound  %+v", 404, o.Payload)
}

func (o *GetMarketsRegionIDHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetMarketsRegionIDHistoryNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDHistoryEnhanceYourCalm creates a GetMarketsRegionIDHistoryEnhanceYourCalm with default headers values
func NewGetMarketsRegionIDHistoryEnhanceYourCalm() *GetMarketsRegionIDHistoryEnhanceYourCalm {
	return &GetMarketsRegionIDHistoryEnhanceYourCalm{}
}

/*GetMarketsRegionIDHistoryEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetMarketsRegionIDHistoryEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetMarketsRegionIDHistoryEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetMarketsRegionIDHistoryEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDHistoryUnprocessableEntity creates a GetMarketsRegionIDHistoryUnprocessableEntity with default headers values
func NewGetMarketsRegionIDHistoryUnprocessableEntity() *GetMarketsRegionIDHistoryUnprocessableEntity {
	return &GetMarketsRegionIDHistoryUnprocessableEntity{}
}

/*GetMarketsRegionIDHistoryUnprocessableEntity handles this case with default header values.

Not found
*/
type GetMarketsRegionIDHistoryUnprocessableEntity struct {
	Payload *models.GetMarketsRegionIDHistoryUnprocessableEntityBody
}

func (o *GetMarketsRegionIDHistoryUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetMarketsRegionIDHistoryUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetMarketsRegionIDHistoryUnprocessableEntityBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDHistoryInternalServerError creates a GetMarketsRegionIDHistoryInternalServerError with default headers values
func NewGetMarketsRegionIDHistoryInternalServerError() *GetMarketsRegionIDHistoryInternalServerError {
	return &GetMarketsRegionIDHistoryInternalServerError{}
}

/*GetMarketsRegionIDHistoryInternalServerError handles this case with default header values.

Internal server error
*/
type GetMarketsRegionIDHistoryInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetMarketsRegionIDHistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMarketsRegionIDHistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDHistoryServiceUnavailable creates a GetMarketsRegionIDHistoryServiceUnavailable with default headers values
func NewGetMarketsRegionIDHistoryServiceUnavailable() *GetMarketsRegionIDHistoryServiceUnavailable {
	return &GetMarketsRegionIDHistoryServiceUnavailable{}
}

/*GetMarketsRegionIDHistoryServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetMarketsRegionIDHistoryServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetMarketsRegionIDHistoryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetMarketsRegionIDHistoryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDHistoryGatewayTimeout creates a GetMarketsRegionIDHistoryGatewayTimeout with default headers values
func NewGetMarketsRegionIDHistoryGatewayTimeout() *GetMarketsRegionIDHistoryGatewayTimeout {
	return &GetMarketsRegionIDHistoryGatewayTimeout{}
}

/*GetMarketsRegionIDHistoryGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetMarketsRegionIDHistoryGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetMarketsRegionIDHistoryGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistoryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetMarketsRegionIDHistoryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDHistory creates a GetMarketsRegionIDHistory with default headers values
func NewGetMarketsRegionIDHistory() *GetMarketsRegionIDHistory {
	return &GetMarketsRegionIDHistory{}
}

/*GetMarketsRegionIDHistory handles this case with default header values.

Internal error thrown from the EVE server.
*/
type GetMarketsRegionIDHistory struct {
	Payload *models.GetMarketsRegionIDHistoryBody
}

func (o *GetMarketsRegionIDHistory) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/history/][%d] getMarketsRegionIdHistory  %+v", 520, o.Payload)
}

func (o *GetMarketsRegionIDHistory) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetMarketsRegionIDHistoryBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
