// Code generated by go-swagger; DO NOT EDIT.

package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetMarketsRegionIDTypesReader is a Reader for the GetMarketsRegionIDTypes structure.
type GetMarketsRegionIDTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMarketsRegionIDTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMarketsRegionIDTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetMarketsRegionIDTypesNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetMarketsRegionIDTypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetMarketsRegionIDTypesEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetMarketsRegionIDTypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetMarketsRegionIDTypesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetMarketsRegionIDTypesGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMarketsRegionIDTypesOK creates a GetMarketsRegionIDTypesOK with default headers values
func NewGetMarketsRegionIDTypesOK() *GetMarketsRegionIDTypesOK {
	return &GetMarketsRegionIDTypesOK{
		XPages: 1,
	}
}

/*GetMarketsRegionIDTypesOK handles this case with default header values.

A list of type IDs
*/
type GetMarketsRegionIDTypesOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []int32
}

func (o *GetMarketsRegionIDTypesOK) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/types/][%d] getMarketsRegionIdTypesOK  %+v", 200, o.Payload)
}

func (o *GetMarketsRegionIDTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDTypesNotModified creates a GetMarketsRegionIDTypesNotModified with default headers values
func NewGetMarketsRegionIDTypesNotModified() *GetMarketsRegionIDTypesNotModified {
	return &GetMarketsRegionIDTypesNotModified{}
}

/*GetMarketsRegionIDTypesNotModified handles this case with default header values.

Not modified
*/
type GetMarketsRegionIDTypesNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetMarketsRegionIDTypesNotModified) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/types/][%d] getMarketsRegionIdTypesNotModified ", 304)
}

func (o *GetMarketsRegionIDTypesNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetMarketsRegionIDTypesBadRequest creates a GetMarketsRegionIDTypesBadRequest with default headers values
func NewGetMarketsRegionIDTypesBadRequest() *GetMarketsRegionIDTypesBadRequest {
	return &GetMarketsRegionIDTypesBadRequest{}
}

/*GetMarketsRegionIDTypesBadRequest handles this case with default header values.

Bad request
*/
type GetMarketsRegionIDTypesBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetMarketsRegionIDTypesBadRequest) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/types/][%d] getMarketsRegionIdTypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetMarketsRegionIDTypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDTypesEnhanceYourCalm creates a GetMarketsRegionIDTypesEnhanceYourCalm with default headers values
func NewGetMarketsRegionIDTypesEnhanceYourCalm() *GetMarketsRegionIDTypesEnhanceYourCalm {
	return &GetMarketsRegionIDTypesEnhanceYourCalm{}
}

/*GetMarketsRegionIDTypesEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetMarketsRegionIDTypesEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetMarketsRegionIDTypesEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/types/][%d] getMarketsRegionIdTypesEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetMarketsRegionIDTypesEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDTypesInternalServerError creates a GetMarketsRegionIDTypesInternalServerError with default headers values
func NewGetMarketsRegionIDTypesInternalServerError() *GetMarketsRegionIDTypesInternalServerError {
	return &GetMarketsRegionIDTypesInternalServerError{}
}

/*GetMarketsRegionIDTypesInternalServerError handles this case with default header values.

Internal server error
*/
type GetMarketsRegionIDTypesInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetMarketsRegionIDTypesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/types/][%d] getMarketsRegionIdTypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMarketsRegionIDTypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDTypesServiceUnavailable creates a GetMarketsRegionIDTypesServiceUnavailable with default headers values
func NewGetMarketsRegionIDTypesServiceUnavailable() *GetMarketsRegionIDTypesServiceUnavailable {
	return &GetMarketsRegionIDTypesServiceUnavailable{}
}

/*GetMarketsRegionIDTypesServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetMarketsRegionIDTypesServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetMarketsRegionIDTypesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/types/][%d] getMarketsRegionIdTypesServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetMarketsRegionIDTypesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsRegionIDTypesGatewayTimeout creates a GetMarketsRegionIDTypesGatewayTimeout with default headers values
func NewGetMarketsRegionIDTypesGatewayTimeout() *GetMarketsRegionIDTypesGatewayTimeout {
	return &GetMarketsRegionIDTypesGatewayTimeout{}
}

/*GetMarketsRegionIDTypesGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetMarketsRegionIDTypesGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetMarketsRegionIDTypesGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /markets/{region_id}/types/][%d] getMarketsRegionIdTypesGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetMarketsRegionIDTypesGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
