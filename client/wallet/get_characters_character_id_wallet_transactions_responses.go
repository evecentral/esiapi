// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDWalletTransactionsReader is a Reader for the GetCharactersCharacterIDWalletTransactions structure.
type GetCharactersCharacterIDWalletTransactionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDWalletTransactionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDWalletTransactionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetCharactersCharacterIDWalletTransactionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDWalletTransactionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDWalletTransactionsOK creates a GetCharactersCharacterIDWalletTransactionsOK with default headers values
func NewGetCharactersCharacterIDWalletTransactionsOK() *GetCharactersCharacterIDWalletTransactionsOK {
	return &GetCharactersCharacterIDWalletTransactionsOK{}
}

/*GetCharactersCharacterIDWalletTransactionsOK handles this case with default header values.

Wallet transactions
*/
type GetCharactersCharacterIDWalletTransactionsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetCharactersCharacterIDWalletTransactionsOKBodyItems0
}

func (o *GetCharactersCharacterIDWalletTransactionsOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/transactions/][%d] getCharactersCharacterIdWalletTransactionsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDWalletTransactionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDWalletTransactionsForbidden creates a GetCharactersCharacterIDWalletTransactionsForbidden with default headers values
func NewGetCharactersCharacterIDWalletTransactionsForbidden() *GetCharactersCharacterIDWalletTransactionsForbidden {
	return &GetCharactersCharacterIDWalletTransactionsForbidden{}
}

/*GetCharactersCharacterIDWalletTransactionsForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDWalletTransactionsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDWalletTransactionsForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/transactions/][%d] getCharactersCharacterIdWalletTransactionsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDWalletTransactionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDWalletTransactionsInternalServerError creates a GetCharactersCharacterIDWalletTransactionsInternalServerError with default headers values
func NewGetCharactersCharacterIDWalletTransactionsInternalServerError() *GetCharactersCharacterIDWalletTransactionsInternalServerError {
	return &GetCharactersCharacterIDWalletTransactionsInternalServerError{}
}

/*GetCharactersCharacterIDWalletTransactionsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDWalletTransactionsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDWalletTransactionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/transactions/][%d] getCharactersCharacterIdWalletTransactionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDWalletTransactionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDWalletTransactionsOKBodyItems0 get_characters_character_id_wallet_transactions_200_ok
//
// wallet transaction
swagger:model GetCharactersCharacterIDWalletTransactionsOKBodyItems0
*/

type GetCharactersCharacterIDWalletTransactionsOKBodyItems0 struct {

	// get_characters_character_id_wallet_transactions_client_id
	//
	// client_id integer
	// Required: true
	ClientID *int32 `json:"client_id"`

	// get_characters_character_id_wallet_transactions_date
	//
	// Date and time of transaction
	// Required: true
	Date *strfmt.DateTime `json:"date"`

	// get_characters_character_id_wallet_transactions_is_buy
	//
	// is_buy boolean
	// Required: true
	IsBuy *bool `json:"is_buy"`

	// get_characters_character_id_wallet_transactions_is_personal
	//
	// is_personal boolean
	// Required: true
	IsPersonal *bool `json:"is_personal"`

	// get_characters_character_id_wallet_transactions_journal_ref_id
	//
	// journal_ref_id integer
	// Required: true
	JournalRefID *int64 `json:"journal_ref_id"`

	// get_characters_character_id_wallet_transactions_location_id
	//
	// location_id integer
	// Required: true
	LocationID *int64 `json:"location_id"`

	// get_characters_character_id_wallet_transactions_quantity
	//
	// quantity integer
	// Required: true
	Quantity *int32 `json:"quantity"`

	// get_characters_character_id_wallet_transactions_transaction_id
	//
	// Unique transaction ID
	// Required: true
	TransactionID *int64 `json:"transaction_id"`

	// get_characters_character_id_wallet_transactions_type_id
	//
	// type_id integer
	// Required: true
	TypeID *int32 `json:"type_id"`

	// get_characters_character_id_wallet_transactions_unit_price
	//
	// Amount paid per unit
	// Required: true
	UnitPrice *float32 `json:"unit_price"`
}

/* polymorph GetCharactersCharacterIDWalletTransactionsOKBodyItems0 client_id false */

/* polymorph GetCharactersCharacterIDWalletTransactionsOKBodyItems0 date false */

/* polymorph GetCharactersCharacterIDWalletTransactionsOKBodyItems0 is_buy false */

/* polymorph GetCharactersCharacterIDWalletTransactionsOKBodyItems0 is_personal false */

/* polymorph GetCharactersCharacterIDWalletTransactionsOKBodyItems0 journal_ref_id false */

/* polymorph GetCharactersCharacterIDWalletTransactionsOKBodyItems0 location_id false */

/* polymorph GetCharactersCharacterIDWalletTransactionsOKBodyItems0 quantity false */

/* polymorph GetCharactersCharacterIDWalletTransactionsOKBodyItems0 transaction_id false */

/* polymorph GetCharactersCharacterIDWalletTransactionsOKBodyItems0 type_id false */

/* polymorph GetCharactersCharacterIDWalletTransactionsOKBodyItems0 unit_price false */

// Validate validates this get characters character ID wallet transactions o k body items0
func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateClientID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateIsBuy(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateIsPersonal(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateJournalRefID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateLocationID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateQuantity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateTransactionID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateUnitPrice(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) validateClientID(formats strfmt.Registry) error {

	if err := validate.Required("client_id", "body", o.ClientID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) validateDate(formats strfmt.Registry) error {

	if err := validate.Required("date", "body", o.Date); err != nil {
		return err
	}

	if err := validate.FormatOf("date", "body", "date-time", o.Date.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) validateIsBuy(formats strfmt.Registry) error {

	if err := validate.Required("is_buy", "body", o.IsBuy); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) validateIsPersonal(formats strfmt.Registry) error {

	if err := validate.Required("is_personal", "body", o.IsPersonal); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) validateJournalRefID(formats strfmt.Registry) error {

	if err := validate.Required("journal_ref_id", "body", o.JournalRefID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) validateLocationID(formats strfmt.Registry) error {

	if err := validate.Required("location_id", "body", o.LocationID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) validateQuantity(formats strfmt.Registry) error {

	if err := validate.Required("quantity", "body", o.Quantity); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) validateTransactionID(formats strfmt.Registry) error {

	if err := validate.Required("transaction_id", "body", o.TransactionID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) validateUnitPrice(formats strfmt.Registry) error {

	if err := validate.Required("unit_price", "body", o.UnitPrice); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDWalletTransactionsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDWalletTransactionsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
