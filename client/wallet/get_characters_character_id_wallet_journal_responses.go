// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDWalletJournalReader is a Reader for the GetCharactersCharacterIDWalletJournal structure.
type GetCharactersCharacterIDWalletJournalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDWalletJournalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDWalletJournalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDWalletJournalNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDWalletJournalBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDWalletJournalUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDWalletJournalForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDWalletJournalEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDWalletJournalInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDWalletJournalServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDWalletJournalGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDWalletJournalOK creates a GetCharactersCharacterIDWalletJournalOK with default headers values
func NewGetCharactersCharacterIDWalletJournalOK() *GetCharactersCharacterIDWalletJournalOK {
	return &GetCharactersCharacterIDWalletJournalOK{
		XPages: 1,
	}
}

/*GetCharactersCharacterIDWalletJournalOK handles this case with default header values.

Journal entries
*/
type GetCharactersCharacterIDWalletJournalOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
	/*Maximum page number
	 */
	XPages int32

	Payload []*models.GetCharactersCharacterIDWalletJournalOKBodyItems
}

func (o *GetCharactersCharacterIDWalletJournalOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/journal/][%d] getCharactersCharacterIdWalletJournalOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDWalletJournalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response header X-Pages
	xPages, err := swag.ConvertInt32(response.GetHeader("X-Pages"))
	if err != nil {
		return errors.InvalidType("X-Pages", "header", "int32", response.GetHeader("X-Pages"))
	}
	o.XPages = xPages

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDWalletJournalNotModified creates a GetCharactersCharacterIDWalletJournalNotModified with default headers values
func NewGetCharactersCharacterIDWalletJournalNotModified() *GetCharactersCharacterIDWalletJournalNotModified {
	return &GetCharactersCharacterIDWalletJournalNotModified{}
}

/*GetCharactersCharacterIDWalletJournalNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDWalletJournalNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDWalletJournalNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/journal/][%d] getCharactersCharacterIdWalletJournalNotModified ", 304)
}

func (o *GetCharactersCharacterIDWalletJournalNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDWalletJournalBadRequest creates a GetCharactersCharacterIDWalletJournalBadRequest with default headers values
func NewGetCharactersCharacterIDWalletJournalBadRequest() *GetCharactersCharacterIDWalletJournalBadRequest {
	return &GetCharactersCharacterIDWalletJournalBadRequest{}
}

/*GetCharactersCharacterIDWalletJournalBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDWalletJournalBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDWalletJournalBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/journal/][%d] getCharactersCharacterIdWalletJournalBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDWalletJournalBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDWalletJournalUnauthorized creates a GetCharactersCharacterIDWalletJournalUnauthorized with default headers values
func NewGetCharactersCharacterIDWalletJournalUnauthorized() *GetCharactersCharacterIDWalletJournalUnauthorized {
	return &GetCharactersCharacterIDWalletJournalUnauthorized{}
}

/*GetCharactersCharacterIDWalletJournalUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDWalletJournalUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDWalletJournalUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/journal/][%d] getCharactersCharacterIdWalletJournalUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDWalletJournalUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDWalletJournalForbidden creates a GetCharactersCharacterIDWalletJournalForbidden with default headers values
func NewGetCharactersCharacterIDWalletJournalForbidden() *GetCharactersCharacterIDWalletJournalForbidden {
	return &GetCharactersCharacterIDWalletJournalForbidden{}
}

/*GetCharactersCharacterIDWalletJournalForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDWalletJournalForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDWalletJournalForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/journal/][%d] getCharactersCharacterIdWalletJournalForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDWalletJournalForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDWalletJournalEnhanceYourCalm creates a GetCharactersCharacterIDWalletJournalEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDWalletJournalEnhanceYourCalm() *GetCharactersCharacterIDWalletJournalEnhanceYourCalm {
	return &GetCharactersCharacterIDWalletJournalEnhanceYourCalm{}
}

/*GetCharactersCharacterIDWalletJournalEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDWalletJournalEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDWalletJournalEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/journal/][%d] getCharactersCharacterIdWalletJournalEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDWalletJournalEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDWalletJournalInternalServerError creates a GetCharactersCharacterIDWalletJournalInternalServerError with default headers values
func NewGetCharactersCharacterIDWalletJournalInternalServerError() *GetCharactersCharacterIDWalletJournalInternalServerError {
	return &GetCharactersCharacterIDWalletJournalInternalServerError{}
}

/*GetCharactersCharacterIDWalletJournalInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDWalletJournalInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDWalletJournalInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/journal/][%d] getCharactersCharacterIdWalletJournalInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDWalletJournalInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDWalletJournalServiceUnavailable creates a GetCharactersCharacterIDWalletJournalServiceUnavailable with default headers values
func NewGetCharactersCharacterIDWalletJournalServiceUnavailable() *GetCharactersCharacterIDWalletJournalServiceUnavailable {
	return &GetCharactersCharacterIDWalletJournalServiceUnavailable{}
}

/*GetCharactersCharacterIDWalletJournalServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDWalletJournalServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDWalletJournalServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/journal/][%d] getCharactersCharacterIdWalletJournalServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDWalletJournalServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDWalletJournalGatewayTimeout creates a GetCharactersCharacterIDWalletJournalGatewayTimeout with default headers values
func NewGetCharactersCharacterIDWalletJournalGatewayTimeout() *GetCharactersCharacterIDWalletJournalGatewayTimeout {
	return &GetCharactersCharacterIDWalletJournalGatewayTimeout{}
}

/*GetCharactersCharacterIDWalletJournalGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDWalletJournalGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDWalletJournalGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/wallet/journal/][%d] getCharactersCharacterIdWalletJournalGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDWalletJournalGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
