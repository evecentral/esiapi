// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCorporationsCorporationIDWalletsReader is a Reader for the GetCorporationsCorporationIDWallets structure.
type GetCorporationsCorporationIDWalletsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCorporationsCorporationIDWalletsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCorporationsCorporationIDWalletsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCorporationsCorporationIDWalletsNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCorporationsCorporationIDWalletsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCorporationsCorporationIDWalletsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCorporationsCorporationIDWalletsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCorporationsCorporationIDWalletsEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCorporationsCorporationIDWalletsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCorporationsCorporationIDWalletsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCorporationsCorporationIDWalletsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCorporationsCorporationIDWalletsOK creates a GetCorporationsCorporationIDWalletsOK with default headers values
func NewGetCorporationsCorporationIDWalletsOK() *GetCorporationsCorporationIDWalletsOK {
	return &GetCorporationsCorporationIDWalletsOK{}
}

/*GetCorporationsCorporationIDWalletsOK handles this case with default header values.

List of corporation wallets
*/
type GetCorporationsCorporationIDWalletsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*models.GetCorporationsCorporationIDWalletsOKBodyItems
}

func (o *GetCorporationsCorporationIDWalletsOK) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/wallets/][%d] getCorporationsCorporationIdWalletsOK  %+v", 200, o.Payload)
}

func (o *GetCorporationsCorporationIDWalletsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDWalletsNotModified creates a GetCorporationsCorporationIDWalletsNotModified with default headers values
func NewGetCorporationsCorporationIDWalletsNotModified() *GetCorporationsCorporationIDWalletsNotModified {
	return &GetCorporationsCorporationIDWalletsNotModified{}
}

/*GetCorporationsCorporationIDWalletsNotModified handles this case with default header values.

Not modified
*/
type GetCorporationsCorporationIDWalletsNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCorporationsCorporationIDWalletsNotModified) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/wallets/][%d] getCorporationsCorporationIdWalletsNotModified ", 304)
}

func (o *GetCorporationsCorporationIDWalletsNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCorporationsCorporationIDWalletsBadRequest creates a GetCorporationsCorporationIDWalletsBadRequest with default headers values
func NewGetCorporationsCorporationIDWalletsBadRequest() *GetCorporationsCorporationIDWalletsBadRequest {
	return &GetCorporationsCorporationIDWalletsBadRequest{}
}

/*GetCorporationsCorporationIDWalletsBadRequest handles this case with default header values.

Bad request
*/
type GetCorporationsCorporationIDWalletsBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCorporationsCorporationIDWalletsBadRequest) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/wallets/][%d] getCorporationsCorporationIdWalletsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCorporationsCorporationIDWalletsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDWalletsUnauthorized creates a GetCorporationsCorporationIDWalletsUnauthorized with default headers values
func NewGetCorporationsCorporationIDWalletsUnauthorized() *GetCorporationsCorporationIDWalletsUnauthorized {
	return &GetCorporationsCorporationIDWalletsUnauthorized{}
}

/*GetCorporationsCorporationIDWalletsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCorporationsCorporationIDWalletsUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCorporationsCorporationIDWalletsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/wallets/][%d] getCorporationsCorporationIdWalletsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCorporationsCorporationIDWalletsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDWalletsForbidden creates a GetCorporationsCorporationIDWalletsForbidden with default headers values
func NewGetCorporationsCorporationIDWalletsForbidden() *GetCorporationsCorporationIDWalletsForbidden {
	return &GetCorporationsCorporationIDWalletsForbidden{}
}

/*GetCorporationsCorporationIDWalletsForbidden handles this case with default header values.

Forbidden
*/
type GetCorporationsCorporationIDWalletsForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCorporationsCorporationIDWalletsForbidden) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/wallets/][%d] getCorporationsCorporationIdWalletsForbidden  %+v", 403, o.Payload)
}

func (o *GetCorporationsCorporationIDWalletsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDWalletsEnhanceYourCalm creates a GetCorporationsCorporationIDWalletsEnhanceYourCalm with default headers values
func NewGetCorporationsCorporationIDWalletsEnhanceYourCalm() *GetCorporationsCorporationIDWalletsEnhanceYourCalm {
	return &GetCorporationsCorporationIDWalletsEnhanceYourCalm{}
}

/*GetCorporationsCorporationIDWalletsEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCorporationsCorporationIDWalletsEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCorporationsCorporationIDWalletsEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/wallets/][%d] getCorporationsCorporationIdWalletsEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCorporationsCorporationIDWalletsEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDWalletsInternalServerError creates a GetCorporationsCorporationIDWalletsInternalServerError with default headers values
func NewGetCorporationsCorporationIDWalletsInternalServerError() *GetCorporationsCorporationIDWalletsInternalServerError {
	return &GetCorporationsCorporationIDWalletsInternalServerError{}
}

/*GetCorporationsCorporationIDWalletsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCorporationsCorporationIDWalletsInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCorporationsCorporationIDWalletsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/wallets/][%d] getCorporationsCorporationIdWalletsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCorporationsCorporationIDWalletsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDWalletsServiceUnavailable creates a GetCorporationsCorporationIDWalletsServiceUnavailable with default headers values
func NewGetCorporationsCorporationIDWalletsServiceUnavailable() *GetCorporationsCorporationIDWalletsServiceUnavailable {
	return &GetCorporationsCorporationIDWalletsServiceUnavailable{}
}

/*GetCorporationsCorporationIDWalletsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCorporationsCorporationIDWalletsServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCorporationsCorporationIDWalletsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/wallets/][%d] getCorporationsCorporationIdWalletsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCorporationsCorporationIDWalletsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCorporationsCorporationIDWalletsGatewayTimeout creates a GetCorporationsCorporationIDWalletsGatewayTimeout with default headers values
func NewGetCorporationsCorporationIDWalletsGatewayTimeout() *GetCorporationsCorporationIDWalletsGatewayTimeout {
	return &GetCorporationsCorporationIDWalletsGatewayTimeout{}
}

/*GetCorporationsCorporationIDWalletsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCorporationsCorporationIDWalletsGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCorporationsCorporationIDWalletsGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /corporations/{corporation_id}/wallets/][%d] getCorporationsCorporationIdWalletsGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCorporationsCorporationIDWalletsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
