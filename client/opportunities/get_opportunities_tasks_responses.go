// Code generated by go-swagger; DO NOT EDIT.

package opportunities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetOpportunitiesTasksReader is a Reader for the GetOpportunitiesTasks structure.
type GetOpportunitiesTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOpportunitiesTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetOpportunitiesTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetOpportunitiesTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOpportunitiesTasksOK creates a GetOpportunitiesTasksOK with default headers values
func NewGetOpportunitiesTasksOK() *GetOpportunitiesTasksOK {
	return &GetOpportunitiesTasksOK{}
}

/*GetOpportunitiesTasksOK handles this case with default header values.

A list of opportunities task ids
*/
type GetOpportunitiesTasksOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []int32
}

func (o *GetOpportunitiesTasksOK) Error() string {
	return fmt.Sprintf("[GET /opportunities/tasks/][%d] getOpportunitiesTasksOK  %+v", 200, o.Payload)
}

func (o *GetOpportunitiesTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOpportunitiesTasksInternalServerError creates a GetOpportunitiesTasksInternalServerError with default headers values
func NewGetOpportunitiesTasksInternalServerError() *GetOpportunitiesTasksInternalServerError {
	return &GetOpportunitiesTasksInternalServerError{}
}

/*GetOpportunitiesTasksInternalServerError handles this case with default header values.

Internal server error
*/
type GetOpportunitiesTasksInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetOpportunitiesTasksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /opportunities/tasks/][%d] getOpportunitiesTasksInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOpportunitiesTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
