// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDLocationReader is a Reader for the GetCharactersCharacterIDLocation structure.
type GetCharactersCharacterIDLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDLocationNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDLocationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDLocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDLocationEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDLocationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDLocationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDLocationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDLocationOK creates a GetCharactersCharacterIDLocationOK with default headers values
func NewGetCharactersCharacterIDLocationOK() *GetCharactersCharacterIDLocationOK {
	return &GetCharactersCharacterIDLocationOK{}
}

/*GetCharactersCharacterIDLocationOK handles this case with default header values.

Information about the characters current location. Returns the current solar system id, and also the current station or structure ID if applicable.
*/
type GetCharactersCharacterIDLocationOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetCharactersCharacterIDLocationOKBody
}

func (o *GetCharactersCharacterIDLocationOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/location/][%d] getCharactersCharacterIdLocationOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetCharactersCharacterIDLocationOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDLocationNotModified creates a GetCharactersCharacterIDLocationNotModified with default headers values
func NewGetCharactersCharacterIDLocationNotModified() *GetCharactersCharacterIDLocationNotModified {
	return &GetCharactersCharacterIDLocationNotModified{}
}

/*GetCharactersCharacterIDLocationNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDLocationNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDLocationNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/location/][%d] getCharactersCharacterIdLocationNotModified ", 304)
}

func (o *GetCharactersCharacterIDLocationNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDLocationBadRequest creates a GetCharactersCharacterIDLocationBadRequest with default headers values
func NewGetCharactersCharacterIDLocationBadRequest() *GetCharactersCharacterIDLocationBadRequest {
	return &GetCharactersCharacterIDLocationBadRequest{}
}

/*GetCharactersCharacterIDLocationBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDLocationBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDLocationBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/location/][%d] getCharactersCharacterIdLocationBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDLocationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDLocationUnauthorized creates a GetCharactersCharacterIDLocationUnauthorized with default headers values
func NewGetCharactersCharacterIDLocationUnauthorized() *GetCharactersCharacterIDLocationUnauthorized {
	return &GetCharactersCharacterIDLocationUnauthorized{}
}

/*GetCharactersCharacterIDLocationUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDLocationUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDLocationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/location/][%d] getCharactersCharacterIdLocationUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDLocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDLocationForbidden creates a GetCharactersCharacterIDLocationForbidden with default headers values
func NewGetCharactersCharacterIDLocationForbidden() *GetCharactersCharacterIDLocationForbidden {
	return &GetCharactersCharacterIDLocationForbidden{}
}

/*GetCharactersCharacterIDLocationForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDLocationForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDLocationForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/location/][%d] getCharactersCharacterIdLocationForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDLocationEnhanceYourCalm creates a GetCharactersCharacterIDLocationEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDLocationEnhanceYourCalm() *GetCharactersCharacterIDLocationEnhanceYourCalm {
	return &GetCharactersCharacterIDLocationEnhanceYourCalm{}
}

/*GetCharactersCharacterIDLocationEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDLocationEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDLocationEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/location/][%d] getCharactersCharacterIdLocationEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDLocationEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDLocationInternalServerError creates a GetCharactersCharacterIDLocationInternalServerError with default headers values
func NewGetCharactersCharacterIDLocationInternalServerError() *GetCharactersCharacterIDLocationInternalServerError {
	return &GetCharactersCharacterIDLocationInternalServerError{}
}

/*GetCharactersCharacterIDLocationInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDLocationInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDLocationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/location/][%d] getCharactersCharacterIdLocationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDLocationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDLocationServiceUnavailable creates a GetCharactersCharacterIDLocationServiceUnavailable with default headers values
func NewGetCharactersCharacterIDLocationServiceUnavailable() *GetCharactersCharacterIDLocationServiceUnavailable {
	return &GetCharactersCharacterIDLocationServiceUnavailable{}
}

/*GetCharactersCharacterIDLocationServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDLocationServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDLocationServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/location/][%d] getCharactersCharacterIdLocationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDLocationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDLocationGatewayTimeout creates a GetCharactersCharacterIDLocationGatewayTimeout with default headers values
func NewGetCharactersCharacterIDLocationGatewayTimeout() *GetCharactersCharacterIDLocationGatewayTimeout {
	return &GetCharactersCharacterIDLocationGatewayTimeout{}
}

/*GetCharactersCharacterIDLocationGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDLocationGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDLocationGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/location/][%d] getCharactersCharacterIdLocationGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDLocationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
