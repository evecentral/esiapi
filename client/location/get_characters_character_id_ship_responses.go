// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDShipReader is a Reader for the GetCharactersCharacterIDShip structure.
type GetCharactersCharacterIDShipReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDShipReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDShipOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 304:
		result := NewGetCharactersCharacterIDShipNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 400:
		result := NewGetCharactersCharacterIDShipBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCharactersCharacterIDShipUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetCharactersCharacterIDShipForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetCharactersCharacterIDShipEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDShipInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetCharactersCharacterIDShipServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetCharactersCharacterIDShipGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDShipOK creates a GetCharactersCharacterIDShipOK with default headers values
func NewGetCharactersCharacterIDShipOK() *GetCharactersCharacterIDShipOK {
	return &GetCharactersCharacterIDShipOK{}
}

/*GetCharactersCharacterIDShipOK handles this case with default header values.

Get the current ship type, name and id
*/
type GetCharactersCharacterIDShipOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload *models.GetCharactersCharacterIDShipOKBody
}

func (o *GetCharactersCharacterIDShipOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDShipOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	o.Payload = new(models.GetCharactersCharacterIDShipOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDShipNotModified creates a GetCharactersCharacterIDShipNotModified with default headers values
func NewGetCharactersCharacterIDShipNotModified() *GetCharactersCharacterIDShipNotModified {
	return &GetCharactersCharacterIDShipNotModified{}
}

/*GetCharactersCharacterIDShipNotModified handles this case with default header values.

Not modified
*/
type GetCharactersCharacterIDShipNotModified struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7232 compliant entity tag
	 */
	ETag string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string
}

func (o *GetCharactersCharacterIDShipNotModified) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipNotModified ", 304)
}

func (o *GetCharactersCharacterIDShipNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	return nil
}

// NewGetCharactersCharacterIDShipBadRequest creates a GetCharactersCharacterIDShipBadRequest with default headers values
func NewGetCharactersCharacterIDShipBadRequest() *GetCharactersCharacterIDShipBadRequest {
	return &GetCharactersCharacterIDShipBadRequest{}
}

/*GetCharactersCharacterIDShipBadRequest handles this case with default header values.

Bad request
*/
type GetCharactersCharacterIDShipBadRequest struct {
	Payload *models.BadRequest
}

func (o *GetCharactersCharacterIDShipBadRequest) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipBadRequest  %+v", 400, o.Payload)
}

func (o *GetCharactersCharacterIDShipBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDShipUnauthorized creates a GetCharactersCharacterIDShipUnauthorized with default headers values
func NewGetCharactersCharacterIDShipUnauthorized() *GetCharactersCharacterIDShipUnauthorized {
	return &GetCharactersCharacterIDShipUnauthorized{}
}

/*GetCharactersCharacterIDShipUnauthorized handles this case with default header values.

Unauthorized
*/
type GetCharactersCharacterIDShipUnauthorized struct {
	Payload *models.Unauthorized
}

func (o *GetCharactersCharacterIDShipUnauthorized) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCharactersCharacterIDShipUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unauthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDShipForbidden creates a GetCharactersCharacterIDShipForbidden with default headers values
func NewGetCharactersCharacterIDShipForbidden() *GetCharactersCharacterIDShipForbidden {
	return &GetCharactersCharacterIDShipForbidden{}
}

/*GetCharactersCharacterIDShipForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDShipForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDShipForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDShipForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDShipEnhanceYourCalm creates a GetCharactersCharacterIDShipEnhanceYourCalm with default headers values
func NewGetCharactersCharacterIDShipEnhanceYourCalm() *GetCharactersCharacterIDShipEnhanceYourCalm {
	return &GetCharactersCharacterIDShipEnhanceYourCalm{}
}

/*GetCharactersCharacterIDShipEnhanceYourCalm handles this case with default header values.

Error limited
*/
type GetCharactersCharacterIDShipEnhanceYourCalm struct {
	Payload *models.ErrorLimited
}

func (o *GetCharactersCharacterIDShipEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetCharactersCharacterIDShipEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorLimited)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDShipInternalServerError creates a GetCharactersCharacterIDShipInternalServerError with default headers values
func NewGetCharactersCharacterIDShipInternalServerError() *GetCharactersCharacterIDShipInternalServerError {
	return &GetCharactersCharacterIDShipInternalServerError{}
}

/*GetCharactersCharacterIDShipInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDShipInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDShipInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDShipInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDShipServiceUnavailable creates a GetCharactersCharacterIDShipServiceUnavailable with default headers values
func NewGetCharactersCharacterIDShipServiceUnavailable() *GetCharactersCharacterIDShipServiceUnavailable {
	return &GetCharactersCharacterIDShipServiceUnavailable{}
}

/*GetCharactersCharacterIDShipServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetCharactersCharacterIDShipServiceUnavailable struct {
	Payload *models.ServiceUnavailable
}

func (o *GetCharactersCharacterIDShipServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCharactersCharacterIDShipServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceUnavailable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDShipGatewayTimeout creates a GetCharactersCharacterIDShipGatewayTimeout with default headers values
func NewGetCharactersCharacterIDShipGatewayTimeout() *GetCharactersCharacterIDShipGatewayTimeout {
	return &GetCharactersCharacterIDShipGatewayTimeout{}
}

/*GetCharactersCharacterIDShipGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetCharactersCharacterIDShipGatewayTimeout struct {
	Payload *models.GatewayTimeout
}

func (o *GetCharactersCharacterIDShipGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetCharactersCharacterIDShipGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayTimeout)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
