// Code generated by go-swagger; DO NOT EDIT.

package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/evecentral/esiapi/models"
)

// GetCharactersCharacterIDShipReader is a Reader for the GetCharactersCharacterIDShip structure.
type GetCharactersCharacterIDShipReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDShipReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDShipOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetCharactersCharacterIDShipForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDShipInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDShipOK creates a GetCharactersCharacterIDShipOK with default headers values
func NewGetCharactersCharacterIDShipOK() *GetCharactersCharacterIDShipOK {
	return &GetCharactersCharacterIDShipOK{}
}

/*GetCharactersCharacterIDShipOK handles this case with default header values.

Get the current ship type, name and id
*/
type GetCharactersCharacterIDShipOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload GetCharactersCharacterIDShipOKBody
}

func (o *GetCharactersCharacterIDShipOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDShipOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDShipForbidden creates a GetCharactersCharacterIDShipForbidden with default headers values
func NewGetCharactersCharacterIDShipForbidden() *GetCharactersCharacterIDShipForbidden {
	return &GetCharactersCharacterIDShipForbidden{}
}

/*GetCharactersCharacterIDShipForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDShipForbidden struct {
	Payload *models.Forbidden
}

func (o *GetCharactersCharacterIDShipForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDShipForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forbidden)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDShipInternalServerError creates a GetCharactersCharacterIDShipInternalServerError with default headers values
func NewGetCharactersCharacterIDShipInternalServerError() *GetCharactersCharacterIDShipInternalServerError {
	return &GetCharactersCharacterIDShipInternalServerError{}
}

/*GetCharactersCharacterIDShipInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDShipInternalServerError struct {
	Payload *models.InternalServerError
}

func (o *GetCharactersCharacterIDShipInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/ship/][%d] getCharactersCharacterIdShipInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDShipInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDShipOKBody get_characters_character_id_ship_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDShipOKBody
*/

type GetCharactersCharacterIDShipOKBody struct {

	// get_characters_character_id_ship_ship_item_id
	//
	// Item id's are unique to a ship and persist until it is repackaged. This value can be used to track repeated uses of a ship, or detect when a pilot changes into a different instance of the same ship type.
	// Required: true
	ShipItemID *int64 `json:"ship_item_id"`

	// get_characters_character_id_ship_ship_name
	//
	// ship_name string
	// Required: true
	ShipName *string `json:"ship_name"`

	// get_characters_character_id_ship_ship_type_id
	//
	// ship_type_id integer
	// Required: true
	ShipTypeID *int32 `json:"ship_type_id"`
}

/* polymorph GetCharactersCharacterIDShipOKBody ship_item_id false */

/* polymorph GetCharactersCharacterIDShipOKBody ship_name false */

/* polymorph GetCharactersCharacterIDShipOKBody ship_type_id false */

// Validate validates this get characters character ID ship o k body
func (o *GetCharactersCharacterIDShipOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateShipItemID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateShipName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateShipTypeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDShipOKBody) validateShipItemID(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdShipOK"+"."+"ship_item_id", "body", o.ShipItemID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDShipOKBody) validateShipName(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdShipOK"+"."+"ship_name", "body", o.ShipName); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDShipOKBody) validateShipTypeID(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdShipOK"+"."+"ship_type_id", "body", o.ShipTypeID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCharactersCharacterIDShipOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCharactersCharacterIDShipOKBody) UnmarshalBinary(b []byte) error {
	var res GetCharactersCharacterIDShipOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
